// This file has been generated by Py++.

// PyOpenSG is (C) Copyright 2005-2009 by Allen Bierbaum
//
// This file is part of PyOpenSG.
//
// PyOpenSG is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License as published by the Free
// Software Foundation; either version 2 of the License, or (at your option)
// any later version.
//
// PyOpenSG is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for
// more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

#if __GNUC__ >= 4 || __GNUC_MINOR__ >=3
#pragma GCC diagnostic warning "-Wold-style-cast"
#pragma GCC diagnostic warning "-Wunused-local-typedefs"
#pragma GCC diagnostic warning "-Wnon-virtual-dtor"
#pragma GCC diagnostic warning "-Wshadow"
#endif
#if WIN32
#pragma warning(disable : 4267)
#pragma warning(disable : 4344)
#endif


#include "boost/python.hpp"

#include "boost/python/suite/indexing/vector_indexing_suite.hpp"

#include "OSGEffectGroups_mainheader.h"

#include "OsgPtrHelpers.h"

#include "boost/python/suite/indexing/map_indexing_suite.hpp"

#include "boost/python/suite/indexing/vector_indexing_suite.hpp"

#include "generated/CalibrationPatternFilter.pypp.hpp"

#include "generated/CalibrationPatternFilterBase.pypp.hpp"

#include "generated/CamStore.pypp.hpp"

#include "generated/CheckerboardCalibFilter.pypp.hpp"

#include "generated/CheckerboardCalibFilterBase.pypp.hpp"

#include "generated/ColorDisplayFilter.pypp.hpp"

#include "generated/ColorDisplayFilterBase.pypp.hpp"

#include "generated/DSLightChunk.pypp.hpp"

#include "generated/DSLightChunkBase.pypp.hpp"

#include "generated/DeferredShadingStage.pypp.hpp"

#include "generated/DeferredShadingStageBase.pypp.hpp"

#include "generated/DeferredShadingStageData.pypp.hpp"

#include "generated/DeferredShadingStageDataBase.pypp.hpp"

#include "generated/DepthPeelingStage.pypp.hpp"

#include "generated/DepthPeelingStageBase.pypp.hpp"

#include "generated/DepthPeelingStageData.pypp.hpp"

#include "generated/DepthPeelingStageDataBase.pypp.hpp"

#include "generated/DisplayFilter.pypp.hpp"

#include "generated/DisplayFilterBase.pypp.hpp"

#include "generated/DisplayFilterGroup.pypp.hpp"

#include "generated/DisplayFilterGroupBase.pypp.hpp"

#include "generated/DisplayFilterStage.pypp.hpp"

#include "generated/DisplayFilterStageBase.pypp.hpp"

#include "generated/DisplayFilterStageData.pypp.hpp"

#include "generated/DisplayFilterStageDataBase.pypp.hpp"

#include "generated/DistortionDisplayFilter.pypp.hpp"

#include "generated/DistortionDisplayFilterBase.pypp.hpp"

#include "generated/FishEyeProjector.pypp.hpp"

#include "generated/FishEyeProjectorBase.pypp.hpp"

#include "generated/FishEyeProjectorData.pypp.hpp"

#include "generated/FishEyeProjectorDataBase.pypp.hpp"

#include "generated/FogStage.pypp.hpp"

#include "generated/FogStageBase.pypp.hpp"

#include "generated/FogStageData.pypp.hpp"

#include "generated/FogStageDataBase.pypp.hpp"

#include "generated/HDR2Stage.pypp.hpp"

#include "generated/HDR2StageBase.pypp.hpp"

#include "generated/HDR2StageData.pypp.hpp"

#include "generated/HDR2StageDataBase.pypp.hpp"

#include "generated/HDRStage.pypp.hpp"

#include "generated/HDRStageBase.pypp.hpp"

#include "generated/HDRStageData.pypp.hpp"

#include "generated/HDRStageDataBase.pypp.hpp"

#include "generated/LightStore.pypp.hpp"

#include "generated/NodeStore.pypp.hpp"

#include "generated/PostShaderStage.pypp.hpp"

#include "generated/PostShaderStageBase.pypp.hpp"

#include "generated/PostShaderStageData.pypp.hpp"

#include "generated/PostShaderStageDataBase.pypp.hpp"

#include "generated/ResolutionDisplayFilter.pypp.hpp"

#include "generated/ResolutionDisplayFilterBase.pypp.hpp"

#include "generated/ShadowMapStore.pypp.hpp"

#include "generated/ShadowStage.pypp.hpp"

#include "generated/ShadowStageBase.pypp.hpp"

#include "generated/ShadowStageData.pypp.hpp"

#include "generated/ShadowStageDataBase.pypp.hpp"

#include "generated/TransStore.pypp.hpp"

#include "generated/bool_vector_t.pypp.hpp"

#include "generated/vector_less__unsigned_int__greater_.pypp.hpp"

using namespace std;

namespace bp = boost::python;

BOOST_PYTHON_MODULE(OSGEffectGroupsPy){
    register_vector_less__unsigned_int__greater__class();

    register_LightStore_class();

    register_bool_vector_t_class();

    register_ShadowMapStore_class();

    register_TransStore_class();

    register_NodeStore_class();

    register_CamStore_class();

    register_CalibrationPatternFilterBase_class();

    register_CalibrationPatternFilter_class();

    register_CheckerboardCalibFilterBase_class();

    register_CheckerboardCalibFilter_class();

    register_DisplayFilterBase_class();

    register_DisplayFilter_class();

    register_ColorDisplayFilterBase_class();

    register_ColorDisplayFilter_class();

    register_DSLightChunkBase_class();

    register_DSLightChunk_class();

    register_DeferredShadingStageBase_class();

    register_DeferredShadingStage_class();

    register_DeferredShadingStageDataBase_class();

    register_DeferredShadingStageData_class();

    register_DepthPeelingStageBase_class();

    register_DepthPeelingStage_class();

    register_DepthPeelingStageDataBase_class();

    register_DepthPeelingStageData_class();

    register_DisplayFilterGroupBase_class();

    register_DisplayFilterGroup_class();

    register_DisplayFilterStageBase_class();

    register_DisplayFilterStage_class();

    register_DisplayFilterStageDataBase_class();

    register_DisplayFilterStageData_class();

    register_DistortionDisplayFilterBase_class();

    register_DistortionDisplayFilter_class();

    register_FishEyeProjectorBase_class();

    register_FishEyeProjector_class();

    register_FishEyeProjectorDataBase_class();

    register_FishEyeProjectorData_class();

    register_FogStageBase_class();

    register_FogStage_class();

    register_FogStageDataBase_class();

    register_FogStageData_class();

    register_HDR2StageBase_class();

    register_HDR2Stage_class();

    register_HDR2StageDataBase_class();

    register_HDR2StageData_class();

    register_HDRStageBase_class();

    register_HDRStage_class();

    register_HDRStageDataBase_class();

    register_HDRStageData_class();

    register_PostShaderStageBase_class();

    register_PostShaderStage_class();

    register_PostShaderStageDataBase_class();

    register_PostShaderStageData_class();

    register_ResolutionDisplayFilterBase_class();

    register_ResolutionDisplayFilter_class();

    register_ShadowStageBase_class();

    register_ShadowStage_class();

    register_ShadowStageDataBase_class();

    /** Helpers for OSG::DisplayFilterStage */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::DisplayFilterStage, OSG::DisplayFilterStage::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::DisplayFilterStage::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::DisplayFilterStageData */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::DisplayFilterStageData, OSG::DisplayFilterStageData::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::DisplayFilterStageData::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::FishEyeProjectorData */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::FishEyeProjectorData, OSG::FishEyeProjectorData::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::FishEyeProjectorData::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::FogStage */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::FogStage, OSG::FogStage::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::FogStage::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::FogStageData */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::FogStageData, OSG::FogStageData::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::FogStageData::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::CalibrationPatternFilter */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::CalibrationPatternFilter, OSG::CalibrationPatternFilter::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::CalibrationPatternFilter::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::DeferredShadingStage */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::DeferredShadingStage, OSG::DeferredShadingStage::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::DeferredShadingStage::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::HDRStage */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::HDRStage, OSG::HDRStage::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::HDRStage::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShadowStage */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShadowStage, OSG::ShadowStage::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShadowStage::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::FishEyeProjector */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::FishEyeProjector, OSG::FishEyeProjector::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::FishEyeProjector::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::CheckerboardCalibFilter */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::CheckerboardCalibFilter, OSG::CheckerboardCalibFilter::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::CheckerboardCalibFilter::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::DisplayFilter */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::DisplayFilter, OSG::DisplayFilter::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::DisplayFilter::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::HDRStageData */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::HDRStageData, OSG::HDRStageData::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::HDRStageData::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShadowStageData */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShadowStageData, OSG::ShadowStageData::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShadowStageData::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::DisplayFilterGroup */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::DisplayFilterGroup, OSG::DisplayFilterGroup::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::DisplayFilterGroup::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::PostShaderStageData */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::PostShaderStageData, OSG::PostShaderStageData::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::PostShaderStageData::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::DepthPeelingStage */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::DepthPeelingStage, OSG::DepthPeelingStage::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::DepthPeelingStage::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::DSLightChunk */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::DSLightChunk, OSG::DSLightChunk::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::DSLightChunk::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::DistortionDisplayFilter */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::DistortionDisplayFilter, OSG::DistortionDisplayFilter::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::DistortionDisplayFilter::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::DeferredShadingStageData */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::DeferredShadingStageData, OSG::DeferredShadingStageData::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::DeferredShadingStageData::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ColorDisplayFilter */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ColorDisplayFilter, OSG::ColorDisplayFilter::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ColorDisplayFilter::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::HDR2Stage */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::HDR2Stage, OSG::HDR2Stage::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::HDR2Stage::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::DepthPeelingStageData */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::DepthPeelingStageData, OSG::DepthPeelingStageData::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::DepthPeelingStageData::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::HDR2StageData */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::HDR2StageData, OSG::HDR2StageData::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::HDR2StageData::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ResolutionDisplayFilter */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ResolutionDisplayFilter, OSG::ResolutionDisplayFilter::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ResolutionDisplayFilter::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::PostShaderStage */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::PostShaderStage, OSG::PostShaderStage::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::PostShaderStage::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    register_ShadowStageData_class();
}

