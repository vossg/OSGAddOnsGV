// This file has been generated by Py++.


// PyOpenSG is (C) Copyright 2005-2009 by Allen Bierbaum
//
// This file is part of PyOpenSG.
//
// PyOpenSG is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License as published by the Free
// Software Foundation; either version 2 of the License, or (at your option)
// any later version.
//
// PyOpenSG is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for
// more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

#if __GNUC__ >= 4 || __GNUC_MINOR__ >=3
#pragma GCC diagnostic warning "-Wold-style-cast"
#pragma GCC diagnostic warning "-Wunused-local-typedefs"
#endif
#if WIN32
#pragma warning(disable : 4267)
#pragma warning(disable : 4344)
#endif

#include "boost/python.hpp"
#include "OSGEffectGroups_mainheader.h"
#include "OsgPtrHelpers.h"
#include "boost/python/suite/indexing/map_indexing_suite.hpp"
#include "boost/python/suite/indexing/vector_indexing_suite.hpp"
#include "DepthPeelingStageDataBase.pypp.hpp"

using namespace std;
namespace bp = boost::python;

void register_DepthPeelingStageDataBase_class(){

    { //::OSG::DepthPeelingStageDataBase
        typedef bp::class_< OSG::DepthPeelingStageDataBase, bp::bases< ::OSG::StageData >, boost::noncopyable > DepthPeelingStageDataBase_exposer_t;
        DepthPeelingStageDataBase_exposer_t DepthPeelingStageDataBase_exposer = DepthPeelingStageDataBase_exposer_t( "DepthPeelingStageDataBase", bp::no_init );
        bp::scope DepthPeelingStageDataBase_scope( DepthPeelingStageDataBase_exposer );
        bp::scope().attr("WidthFieldId") = (int)OSG::DepthPeelingStageDataBase::WidthFieldId;
        bp::scope().attr("HeightFieldId") = (int)OSG::DepthPeelingStageDataBase::HeightFieldId;
        bp::scope().attr("BackgroundFieldId") = (int)OSG::DepthPeelingStageDataBase::BackgroundFieldId;
        bp::scope().attr("PeelPingFBOFieldId") = (int)OSG::DepthPeelingStageDataBase::PeelPingFBOFieldId;
        bp::scope().attr("PeelPongFBOFieldId") = (int)OSG::DepthPeelingStageDataBase::PeelPongFBOFieldId;
        bp::scope().attr("BlendFBOFieldId") = (int)OSG::DepthPeelingStageDataBase::BlendFBOFieldId;
        bp::scope().attr("BlendMaterialFieldId") = (int)OSG::DepthPeelingStageDataBase::BlendMaterialFieldId;
        bp::scope().attr("BlendFinalMaterialFieldId") = (int)OSG::DepthPeelingStageDataBase::BlendFinalMaterialFieldId;
        bp::scope().attr("PeelPingMaterialFieldId") = (int)OSG::DepthPeelingStageDataBase::PeelPingMaterialFieldId;
        bp::scope().attr("PeelPongMaterialFieldId") = (int)OSG::DepthPeelingStageDataBase::PeelPongMaterialFieldId;
        bp::scope().attr("DepthChunkFieldId") = (int)OSG::DepthPeelingStageDataBase::DepthChunkFieldId;
        bp::scope().attr("SpvIsPeelChunkFieldId") = (int)OSG::DepthPeelingStageDataBase::SpvIsPeelChunkFieldId;
        bp::scope().attr("SpvIsInitialChunkFieldId") = (int)OSG::DepthPeelingStageDataBase::SpvIsInitialChunkFieldId;
        bp::scope().attr("NextFieldId") = (int)OSG::DepthPeelingStageDataBase::NextFieldId;
        { //::OSG::DepthPeelingStageDataBase::copyFromBin
        
            typedef void ( ::OSG::DepthPeelingStageDataBase::*copyFromBin_function_type )( ::OSG::BinaryDataHandler &,::OSG::ConstFieldMaskArg ) ;
            
            DepthPeelingStageDataBase_exposer.def( 
                "copyFromBin"
                , copyFromBin_function_type( &::OSG::DepthPeelingStageDataBase::copyFromBin )
                , ( bp::arg("pMem"), bp::arg("whichField") ) );
        
        }
        { //::OSG::DepthPeelingStageDataBase::copyToBin
        
            typedef void ( ::OSG::DepthPeelingStageDataBase::*copyToBin_function_type )( ::OSG::BinaryDataHandler &,::OSG::ConstFieldMaskArg ) ;
            
            DepthPeelingStageDataBase_exposer.def( 
                "copyToBin"
                , copyToBin_function_type( &::OSG::DepthPeelingStageDataBase::copyToBin )
                , ( bp::arg("pMem"), bp::arg("whichField") ) );
        
        }
        { //::OSG::DepthPeelingStageDataBase::create
        
            typedef ::OSG::DepthPeelingStageDataTransitPtr ( *create_function_type )(  );
            
            DepthPeelingStageDataBase_exposer.def( 
                "create"
                , create_function_type( &::OSG::DepthPeelingStageDataBase::create ) );
        
        }
        { //::OSG::DepthPeelingStageDataBase::createDependent
        
            typedef ::OSG::DepthPeelingStageDataTransitPtr ( *createDependent_function_type )( ::OSG::BitVector );
            
            DepthPeelingStageDataBase_exposer.def( 
                "createDependent"
                , createDependent_function_type( &::OSG::DepthPeelingStageDataBase::createDependent )
                , ( bp::arg("bFlags") ) );
        
        }
        { //::OSG::DepthPeelingStageDataBase::createLocal
        
            typedef ::OSG::DepthPeelingStageDataTransitPtr ( *createLocal_function_type )( ::OSG::BitVector );
            
            DepthPeelingStageDataBase_exposer.def( 
                "createLocal"
                , createLocal_function_type( &::OSG::DepthPeelingStageDataBase::createLocal )
                , ( bp::arg("bFlags")=(::OSG::BitVector)(OSG::FCLocal::All) ) );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getBackground
        
            typedef ::OSG::Background * ( ::OSG::DepthPeelingStageDataBase::*getBackground_function_type )(  ) const;
            
            DepthPeelingStageDataBase_exposer.def( 
                "getBackground"
                , getBackground_function_type( &::OSG::DepthPeelingStageDataBase::getBackground )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getBinSize
        
            typedef ::OSG::SizeT ( ::OSG::DepthPeelingStageDataBase::*getBinSize_function_type )( ::OSG::ConstFieldMaskArg ) ;
            
            DepthPeelingStageDataBase_exposer.def( 
                "getBinSize"
                , getBinSize_function_type( &::OSG::DepthPeelingStageDataBase::getBinSize )
                , ( bp::arg("whichField") ) );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getBlendFBO
        
            typedef ::OSG::FrameBufferObject * ( ::OSG::DepthPeelingStageDataBase::*getBlendFBO_function_type )(  ) const;
            
            DepthPeelingStageDataBase_exposer.def( 
                "getBlendFBO"
                , getBlendFBO_function_type( &::OSG::DepthPeelingStageDataBase::getBlendFBO )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getBlendFinalMaterial
        
            typedef ::OSG::ChunkMaterial * ( ::OSG::DepthPeelingStageDataBase::*getBlendFinalMaterial_function_type )(  ) const;
            
            DepthPeelingStageDataBase_exposer.def( 
                "getBlendFinalMaterial"
                , getBlendFinalMaterial_function_type( &::OSG::DepthPeelingStageDataBase::getBlendFinalMaterial )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getBlendMaterial
        
            typedef ::OSG::ChunkMaterial * ( ::OSG::DepthPeelingStageDataBase::*getBlendMaterial_function_type )(  ) const;
            
            DepthPeelingStageDataBase_exposer.def( 
                "getBlendMaterial"
                , getBlendMaterial_function_type( &::OSG::DepthPeelingStageDataBase::getBlendMaterial )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getClassGroupId
        
            typedef ::OSG::UInt16 ( *getClassGroupId_function_type )(  );
            
            DepthPeelingStageDataBase_exposer.def( 
                "getClassGroupId"
                , getClassGroupId_function_type( &::OSG::DepthPeelingStageDataBase::getClassGroupId ) );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getClassType
        
            typedef ::OSG::FieldContainerType & ( *getClassType_function_type )(  );
            
            DepthPeelingStageDataBase_exposer.def( 
                "getClassType"
                , getClassType_function_type( &::OSG::DepthPeelingStageDataBase::getClassType )
                , bp::return_value_policy< bp::reference_existing_object >() );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getClassTypeId
        
            typedef ::OSG::UInt32 ( *getClassTypeId_function_type )(  );
            
            DepthPeelingStageDataBase_exposer.def( 
                "getClassTypeId"
                , getClassTypeId_function_type( &::OSG::DepthPeelingStageDataBase::getClassTypeId ) );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getContainerSize
        
            typedef ::OSG::UInt32 ( ::OSG::DepthPeelingStageDataBase::*getContainerSize_function_type )(  ) const;
            
            DepthPeelingStageDataBase_exposer.def( 
                "getContainerSize"
                , getContainerSize_function_type( &::OSG::DepthPeelingStageDataBase::getContainerSize ) );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getDepthChunk
        
            typedef ::OSG::DepthChunk * ( ::OSG::DepthPeelingStageDataBase::*getDepthChunk_function_type )(  ) const;
            
            DepthPeelingStageDataBase_exposer.def( 
                "getDepthChunk"
                , getDepthChunk_function_type( &::OSG::DepthPeelingStageDataBase::getDepthChunk )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getHeight
        
            typedef ::OSG::Int32 ( ::OSG::DepthPeelingStageDataBase::*getHeight_function_type )(  ) const;
            
            DepthPeelingStageDataBase_exposer.def( 
                "getHeight"
                , getHeight_function_type( &::OSG::DepthPeelingStageDataBase::getHeight ) );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getPeelPingFBO
        
            typedef ::OSG::FrameBufferObject * ( ::OSG::DepthPeelingStageDataBase::*getPeelPingFBO_function_type )(  ) const;
            
            DepthPeelingStageDataBase_exposer.def( 
                "getPeelPingFBO"
                , getPeelPingFBO_function_type( &::OSG::DepthPeelingStageDataBase::getPeelPingFBO )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getPeelPingMaterial
        
            typedef ::OSG::ChunkMaterial * ( ::OSG::DepthPeelingStageDataBase::*getPeelPingMaterial_function_type )(  ) const;
            
            DepthPeelingStageDataBase_exposer.def( 
                "getPeelPingMaterial"
                , getPeelPingMaterial_function_type( &::OSG::DepthPeelingStageDataBase::getPeelPingMaterial )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getPeelPongFBO
        
            typedef ::OSG::FrameBufferObject * ( ::OSG::DepthPeelingStageDataBase::*getPeelPongFBO_function_type )(  ) const;
            
            DepthPeelingStageDataBase_exposer.def( 
                "getPeelPongFBO"
                , getPeelPongFBO_function_type( &::OSG::DepthPeelingStageDataBase::getPeelPongFBO )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getPeelPongMaterial
        
            typedef ::OSG::ChunkMaterial * ( ::OSG::DepthPeelingStageDataBase::*getPeelPongMaterial_function_type )(  ) const;
            
            DepthPeelingStageDataBase_exposer.def( 
                "getPeelPongMaterial"
                , getPeelPongMaterial_function_type( &::OSG::DepthPeelingStageDataBase::getPeelPongMaterial )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getSFBackground
        
            typedef ::OSG::SFUnrecBackgroundPtr const * ( ::OSG::DepthPeelingStageDataBase::*getSFBackground_function_type )(  ) const;
            
            DepthPeelingStageDataBase_exposer.def( 
                "getSFBackground"
                , getSFBackground_function_type( &::OSG::DepthPeelingStageDataBase::getSFBackground )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getSFBlendFBO
        
            typedef ::OSG::SFUnrecFrameBufferObjectPtr const * ( ::OSG::DepthPeelingStageDataBase::*getSFBlendFBO_function_type )(  ) const;
            
            DepthPeelingStageDataBase_exposer.def( 
                "getSFBlendFBO"
                , getSFBlendFBO_function_type( &::OSG::DepthPeelingStageDataBase::getSFBlendFBO )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getSFBlendFinalMaterial
        
            typedef ::OSG::SFUnrecChunkMaterialPtr const * ( ::OSG::DepthPeelingStageDataBase::*getSFBlendFinalMaterial_function_type )(  ) const;
            
            DepthPeelingStageDataBase_exposer.def( 
                "getSFBlendFinalMaterial"
                , getSFBlendFinalMaterial_function_type( &::OSG::DepthPeelingStageDataBase::getSFBlendFinalMaterial )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getSFBlendMaterial
        
            typedef ::OSG::SFUnrecChunkMaterialPtr const * ( ::OSG::DepthPeelingStageDataBase::*getSFBlendMaterial_function_type )(  ) const;
            
            DepthPeelingStageDataBase_exposer.def( 
                "getSFBlendMaterial"
                , getSFBlendMaterial_function_type( &::OSG::DepthPeelingStageDataBase::getSFBlendMaterial )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getSFDepthChunk
        
            typedef ::OSG::SFUnrecDepthChunkPtr const * ( ::OSG::DepthPeelingStageDataBase::*getSFDepthChunk_function_type )(  ) const;
            
            DepthPeelingStageDataBase_exposer.def( 
                "getSFDepthChunk"
                , getSFDepthChunk_function_type( &::OSG::DepthPeelingStageDataBase::getSFDepthChunk )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getSFHeight
        
            typedef ::OSG::SFInt32 const * ( ::OSG::DepthPeelingStageDataBase::*getSFHeight_function_type )(  ) const;
            
            DepthPeelingStageDataBase_exposer.def( 
                "getSFHeight"
                , getSFHeight_function_type( &::OSG::DepthPeelingStageDataBase::getSFHeight )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getSFPeelPingFBO
        
            typedef ::OSG::SFUnrecFrameBufferObjectPtr const * ( ::OSG::DepthPeelingStageDataBase::*getSFPeelPingFBO_function_type )(  ) const;
            
            DepthPeelingStageDataBase_exposer.def( 
                "getSFPeelPingFBO"
                , getSFPeelPingFBO_function_type( &::OSG::DepthPeelingStageDataBase::getSFPeelPingFBO )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getSFPeelPingMaterial
        
            typedef ::OSG::SFUnrecChunkMaterialPtr const * ( ::OSG::DepthPeelingStageDataBase::*getSFPeelPingMaterial_function_type )(  ) const;
            
            DepthPeelingStageDataBase_exposer.def( 
                "getSFPeelPingMaterial"
                , getSFPeelPingMaterial_function_type( &::OSG::DepthPeelingStageDataBase::getSFPeelPingMaterial )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getSFPeelPongFBO
        
            typedef ::OSG::SFUnrecFrameBufferObjectPtr const * ( ::OSG::DepthPeelingStageDataBase::*getSFPeelPongFBO_function_type )(  ) const;
            
            DepthPeelingStageDataBase_exposer.def( 
                "getSFPeelPongFBO"
                , getSFPeelPongFBO_function_type( &::OSG::DepthPeelingStageDataBase::getSFPeelPongFBO )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getSFPeelPongMaterial
        
            typedef ::OSG::SFUnrecChunkMaterialPtr const * ( ::OSG::DepthPeelingStageDataBase::*getSFPeelPongMaterial_function_type )(  ) const;
            
            DepthPeelingStageDataBase_exposer.def( 
                "getSFPeelPongMaterial"
                , getSFPeelPongMaterial_function_type( &::OSG::DepthPeelingStageDataBase::getSFPeelPongMaterial )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getSFSpvIsInitialChunk
        
            typedef ::OSG::SFUnrecShaderProgramVariableChunkPtr const * ( ::OSG::DepthPeelingStageDataBase::*getSFSpvIsInitialChunk_function_type )(  ) const;
            
            DepthPeelingStageDataBase_exposer.def( 
                "getSFSpvIsInitialChunk"
                , getSFSpvIsInitialChunk_function_type( &::OSG::DepthPeelingStageDataBase::getSFSpvIsInitialChunk )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getSFSpvIsPeelChunk
        
            typedef ::OSG::SFUnrecShaderProgramVariableChunkPtr const * ( ::OSG::DepthPeelingStageDataBase::*getSFSpvIsPeelChunk_function_type )(  ) const;
            
            DepthPeelingStageDataBase_exposer.def( 
                "getSFSpvIsPeelChunk"
                , getSFSpvIsPeelChunk_function_type( &::OSG::DepthPeelingStageDataBase::getSFSpvIsPeelChunk )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getSFWidth
        
            typedef ::OSG::SFInt32 const * ( ::OSG::DepthPeelingStageDataBase::*getSFWidth_function_type )(  ) const;
            
            DepthPeelingStageDataBase_exposer.def( 
                "getSFWidth"
                , getSFWidth_function_type( &::OSG::DepthPeelingStageDataBase::getSFWidth )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getSpvIsInitialChunk
        
            typedef ::OSG::ShaderProgramVariableChunk * ( ::OSG::DepthPeelingStageDataBase::*getSpvIsInitialChunk_function_type )(  ) const;
            
            DepthPeelingStageDataBase_exposer.def( 
                "getSpvIsInitialChunk"
                , getSpvIsInitialChunk_function_type( &::OSG::DepthPeelingStageDataBase::getSpvIsInitialChunk )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getSpvIsPeelChunk
        
            typedef ::OSG::ShaderProgramVariableChunk * ( ::OSG::DepthPeelingStageDataBase::*getSpvIsPeelChunk_function_type )(  ) const;
            
            DepthPeelingStageDataBase_exposer.def( 
                "getSpvIsPeelChunk"
                , getSpvIsPeelChunk_function_type( &::OSG::DepthPeelingStageDataBase::getSpvIsPeelChunk )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getType
        
            typedef ::OSG::FieldContainerType & ( ::OSG::DepthPeelingStageDataBase::*getType_function_type )(  ) ;
            
            DepthPeelingStageDataBase_exposer.def( 
                "getType"
                , getType_function_type( &::OSG::DepthPeelingStageDataBase::getType )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getType
        
            typedef ::OSG::FieldContainerType const & ( ::OSG::DepthPeelingStageDataBase::*getType_function_type )(  ) const;
            
            DepthPeelingStageDataBase_exposer.def( 
                "getType"
                , getType_function_type( &::OSG::DepthPeelingStageDataBase::getType )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::DepthPeelingStageDataBase::getWidth
        
            typedef ::OSG::Int32 ( ::OSG::DepthPeelingStageDataBase::*getWidth_function_type )(  ) const;
            
            DepthPeelingStageDataBase_exposer.def( 
                "getWidth"
                , getWidth_function_type( &::OSG::DepthPeelingStageDataBase::getWidth ) );
        
        }
        { //::OSG::DepthPeelingStageDataBase::setBackground
        
            typedef void ( ::OSG::DepthPeelingStageDataBase::*setBackground_function_type )( ::OSG::Background * const ) ;
            
            DepthPeelingStageDataBase_exposer.def( 
                "setBackground"
                , setBackground_function_type( &::OSG::DepthPeelingStageDataBase::setBackground )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::DepthPeelingStageDataBase::setBlendFBO
        
            typedef void ( ::OSG::DepthPeelingStageDataBase::*setBlendFBO_function_type )( ::OSG::FrameBufferObject * const ) ;
            
            DepthPeelingStageDataBase_exposer.def( 
                "setBlendFBO"
                , setBlendFBO_function_type( &::OSG::DepthPeelingStageDataBase::setBlendFBO )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::DepthPeelingStageDataBase::setBlendFinalMaterial
        
            typedef void ( ::OSG::DepthPeelingStageDataBase::*setBlendFinalMaterial_function_type )( ::OSG::ChunkMaterial * const ) ;
            
            DepthPeelingStageDataBase_exposer.def( 
                "setBlendFinalMaterial"
                , setBlendFinalMaterial_function_type( &::OSG::DepthPeelingStageDataBase::setBlendFinalMaterial )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::DepthPeelingStageDataBase::setBlendMaterial
        
            typedef void ( ::OSG::DepthPeelingStageDataBase::*setBlendMaterial_function_type )( ::OSG::ChunkMaterial * const ) ;
            
            DepthPeelingStageDataBase_exposer.def( 
                "setBlendMaterial"
                , setBlendMaterial_function_type( &::OSG::DepthPeelingStageDataBase::setBlendMaterial )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::DepthPeelingStageDataBase::setDepthChunk
        
            typedef void ( ::OSG::DepthPeelingStageDataBase::*setDepthChunk_function_type )( ::OSG::DepthChunk * const ) ;
            
            DepthPeelingStageDataBase_exposer.def( 
                "setDepthChunk"
                , setDepthChunk_function_type( &::OSG::DepthPeelingStageDataBase::setDepthChunk )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::DepthPeelingStageDataBase::setHeight
        
            typedef void ( ::OSG::DepthPeelingStageDataBase::*setHeight_function_type )( ::OSG::Int32 const ) ;
            
            DepthPeelingStageDataBase_exposer.def( 
                "setHeight"
                , setHeight_function_type( &::OSG::DepthPeelingStageDataBase::setHeight )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::DepthPeelingStageDataBase::setPeelPingFBO
        
            typedef void ( ::OSG::DepthPeelingStageDataBase::*setPeelPingFBO_function_type )( ::OSG::FrameBufferObject * const ) ;
            
            DepthPeelingStageDataBase_exposer.def( 
                "setPeelPingFBO"
                , setPeelPingFBO_function_type( &::OSG::DepthPeelingStageDataBase::setPeelPingFBO )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::DepthPeelingStageDataBase::setPeelPingMaterial
        
            typedef void ( ::OSG::DepthPeelingStageDataBase::*setPeelPingMaterial_function_type )( ::OSG::ChunkMaterial * const ) ;
            
            DepthPeelingStageDataBase_exposer.def( 
                "setPeelPingMaterial"
                , setPeelPingMaterial_function_type( &::OSG::DepthPeelingStageDataBase::setPeelPingMaterial )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::DepthPeelingStageDataBase::setPeelPongFBO
        
            typedef void ( ::OSG::DepthPeelingStageDataBase::*setPeelPongFBO_function_type )( ::OSG::FrameBufferObject * const ) ;
            
            DepthPeelingStageDataBase_exposer.def( 
                "setPeelPongFBO"
                , setPeelPongFBO_function_type( &::OSG::DepthPeelingStageDataBase::setPeelPongFBO )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::DepthPeelingStageDataBase::setPeelPongMaterial
        
            typedef void ( ::OSG::DepthPeelingStageDataBase::*setPeelPongMaterial_function_type )( ::OSG::ChunkMaterial * const ) ;
            
            DepthPeelingStageDataBase_exposer.def( 
                "setPeelPongMaterial"
                , setPeelPongMaterial_function_type( &::OSG::DepthPeelingStageDataBase::setPeelPongMaterial )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::DepthPeelingStageDataBase::setSpvIsInitialChunk
        
            typedef void ( ::OSG::DepthPeelingStageDataBase::*setSpvIsInitialChunk_function_type )( ::OSG::ShaderProgramVariableChunk * const ) ;
            
            DepthPeelingStageDataBase_exposer.def( 
                "setSpvIsInitialChunk"
                , setSpvIsInitialChunk_function_type( &::OSG::DepthPeelingStageDataBase::setSpvIsInitialChunk )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::DepthPeelingStageDataBase::setSpvIsPeelChunk
        
            typedef void ( ::OSG::DepthPeelingStageDataBase::*setSpvIsPeelChunk_function_type )( ::OSG::ShaderProgramVariableChunk * const ) ;
            
            DepthPeelingStageDataBase_exposer.def( 
                "setSpvIsPeelChunk"
                , setSpvIsPeelChunk_function_type( &::OSG::DepthPeelingStageDataBase::setSpvIsPeelChunk )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::DepthPeelingStageDataBase::setWidth
        
            typedef void ( ::OSG::DepthPeelingStageDataBase::*setWidth_function_type )( ::OSG::Int32 const ) ;
            
            DepthPeelingStageDataBase_exposer.def( 
                "setWidth"
                , setWidth_function_type( &::OSG::DepthPeelingStageDataBase::setWidth )
                , ( bp::arg("value") ) );
        
        }
        DepthPeelingStageDataBase_exposer.staticmethod( "create" );
        DepthPeelingStageDataBase_exposer.staticmethod( "createDependent" );
        DepthPeelingStageDataBase_exposer.staticmethod( "createLocal" );
        DepthPeelingStageDataBase_exposer.staticmethod( "getClassGroupId" );
        DepthPeelingStageDataBase_exposer.staticmethod( "getClassType" );
        DepthPeelingStageDataBase_exposer.staticmethod( "getClassTypeId" );
    }

}
