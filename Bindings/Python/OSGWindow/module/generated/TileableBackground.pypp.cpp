// This file has been generated by Py++.


// PyOpenSG is (C) Copyright 2005-2009 by Allen Bierbaum
//
// This file is part of PyOpenSG.
//
// PyOpenSG is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License as published by the Free
// Software Foundation; either version 2 of the License, or (at your option)
// any later version.
//
// PyOpenSG is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for
// more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

#if __GNUC__ >= 4 || __GNUC_MINOR__ >=3
#pragma GCC diagnostic warning "-Wold-style-cast"
#pragma GCC diagnostic warning "-Wunused-local-typedefs"
#pragma GCC diagnostic warning "-Wnon-virtual-dtor"
#endif
#if WIN32
#pragma warning(disable : 4267)
#pragma warning(disable : 4344)
#endif

#include "boost/python.hpp"
#include "OSGWindow_mainheader.h"
#include "OsgPtrHelpers.h"
#include "boost/python/suite/indexing/map_indexing_suite.hpp"
#include "boost/python/suite/indexing/vector_indexing_suite.hpp"
#include "TileableBackground.pypp.hpp"

using namespace std;
namespace bp = boost::python;

struct TileableBackground_wrapper : OSG::TileableBackground, bp::wrapper< OSG::TileableBackground > {

    virtual void clear( ::OSG::DrawEnv * pEnv ){
        bp::override func_clear = this->get_override( "clear" );
        func_clear( boost::python::ptr(pEnv) );
    }

};

void register_TileableBackground_class(){

    { //::OSG::TileableBackground
        typedef bp::class_< TileableBackground_wrapper, bp::bases< OSG::TileableBackgroundBase >, boost::noncopyable > TileableBackground_exposer_t;
        TileableBackground_exposer_t TileableBackground_exposer = TileableBackground_exposer_t( "TileableBackground", bp::no_init );
        bp::scope TileableBackground_scope( TileableBackground_exposer );
        { //::OSG::TileableBackground::changed
        
            typedef void ( ::OSG::TileableBackground::*changed_function_type )( ::OSG::ConstFieldMaskArg,::OSG::UInt32,::OSG::BitVector ) ;
            
            TileableBackground_exposer.def( 
                "changed"
                , changed_function_type( &::OSG::TileableBackground::changed )
                , ( bp::arg("whichField"), bp::arg("origin"), bp::arg("details") ) );
        
        }
        { //::OSG::TileableBackground::dump
        
            typedef void ( ::OSG::TileableBackground::*dump_function_type )( ::OSG::UInt32,long unsigned int const ) const;
            
            TileableBackground_exposer.def( 
                "dump"
                , dump_function_type( &::OSG::TileableBackground::dump )
                , ( bp::arg("uiIndent")=(::OSG::UInt32)(0), bp::arg("bvFlags")=(long unsigned int const)(0) ) );
        
        }
        { //::OSG::Background::clear
        
            typedef void ( ::OSG::Background::*clear_function_type )( ::OSG::DrawEnv * ) ;
            
            TileableBackground_exposer.def( 
                "clear"
                , bp::pure_virtual( clear_function_type(&::OSG::Background::clear) )
                , ( bp::arg("pEnv") ) );
        
        }
        pyopensg::register_transit< OSG::TileableBackground >::execute();
        bp::register_ptr_to_python< OSG::TileableBackground::ObjRecPtr >();
        bp::implicitly_convertible< OSG::TileableBackground::ObjRecPtr, OSG::TileableBackground* >();
        bp::implicitly_convertible< OSG::TileableBackground::ObjRecPtr, OSG::TileableBackground::ObjCPtr >();
        bp::implicitly_convertible< OSG::TileableBackground::ObjRecPtr, OSG::Background* >();
        bp::implicitly_convertible< OSG::TileableBackground::ObjRecPtr, OSG::Background::ObjRecPtr >();
        bp::implicitly_convertible<OSG::TileableBackground::ObjRecPtr, OSG::Background::ObjCPtr>();
    }

}
