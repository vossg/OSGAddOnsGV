// This file has been generated by Py++.


// PyOpenSG is (C) Copyright 2005-2009 by Allen Bierbaum
//
// This file is part of PyOpenSG.
//
// PyOpenSG is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License as published by the Free
// Software Foundation; either version 2 of the License, or (at your option)
// any later version.
//
// PyOpenSG is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for
// more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

#if __GNUC__ >= 4 || __GNUC_MINOR__ >=3
#pragma GCC diagnostic warning "-Wold-style-cast"
#pragma GCC diagnostic warning "-Wunused-local-typedefs"
#endif
#if WIN32
#pragma warning(disable : 4267)
#pragma warning(disable : 4344)
#endif

#include "boost/python.hpp"
#include "OSGWindow_mainheader.h"
#include "OsgPtrHelpers.h"
#include "boost/python/suite/indexing/map_indexing_suite.hpp"
#include "boost/python/suite/indexing/vector_indexing_suite.hpp"
#include "MatrixCameraDecoratorBase.pypp.hpp"

using namespace std;
namespace bp = boost::python;

void register_MatrixCameraDecoratorBase_class(){

    { //::OSG::MatrixCameraDecoratorBase
        typedef bp::class_< OSG::MatrixCameraDecoratorBase, bp::bases< ::OSG::CameraDecorator >, boost::noncopyable > MatrixCameraDecoratorBase_exposer_t;
        MatrixCameraDecoratorBase_exposer_t MatrixCameraDecoratorBase_exposer = MatrixCameraDecoratorBase_exposer_t( "MatrixCameraDecoratorBase", bp::no_init );
        bp::scope MatrixCameraDecoratorBase_scope( MatrixCameraDecoratorBase_exposer );
        bp::scope().attr("PreViewingFieldId") = (int)OSG::MatrixCameraDecoratorBase::PreViewingFieldId;
        bp::scope().attr("PostViewingFieldId") = (int)OSG::MatrixCameraDecoratorBase::PostViewingFieldId;
        bp::scope().attr("PreProjectionTranslationFieldId") = (int)OSG::MatrixCameraDecoratorBase::PreProjectionTranslationFieldId;
        bp::scope().attr("PostProjectionTranslationFieldId") = (int)OSG::MatrixCameraDecoratorBase::PostProjectionTranslationFieldId;
        bp::scope().attr("PreProjectionFieldId") = (int)OSG::MatrixCameraDecoratorBase::PreProjectionFieldId;
        bp::scope().attr("PostProjectionFieldId") = (int)OSG::MatrixCameraDecoratorBase::PostProjectionFieldId;
        bp::scope().attr("NextFieldId") = (int)OSG::MatrixCameraDecoratorBase::NextFieldId;
        { //::OSG::MatrixCameraDecoratorBase::copyFromBin
        
            typedef void ( ::OSG::MatrixCameraDecoratorBase::*copyFromBin_function_type )( ::OSG::BinaryDataHandler &,::OSG::ConstFieldMaskArg ) ;
            
            MatrixCameraDecoratorBase_exposer.def( 
                "copyFromBin"
                , copyFromBin_function_type( &::OSG::MatrixCameraDecoratorBase::copyFromBin )
                , ( bp::arg("pMem"), bp::arg("whichField") ) );
        
        }
        { //::OSG::MatrixCameraDecoratorBase::copyToBin
        
            typedef void ( ::OSG::MatrixCameraDecoratorBase::*copyToBin_function_type )( ::OSG::BinaryDataHandler &,::OSG::ConstFieldMaskArg ) ;
            
            MatrixCameraDecoratorBase_exposer.def( 
                "copyToBin"
                , copyToBin_function_type( &::OSG::MatrixCameraDecoratorBase::copyToBin )
                , ( bp::arg("pMem"), bp::arg("whichField") ) );
        
        }
        { //::OSG::MatrixCameraDecoratorBase::create
        
            typedef ::OSG::MatrixCameraDecoratorTransitPtr ( *create_function_type )(  );
            
            MatrixCameraDecoratorBase_exposer.def( 
                "create"
                , create_function_type( &::OSG::MatrixCameraDecoratorBase::create ) );
        
        }
        { //::OSG::MatrixCameraDecoratorBase::createDependent
        
            typedef ::OSG::MatrixCameraDecoratorTransitPtr ( *createDependent_function_type )( ::OSG::BitVector );
            
            MatrixCameraDecoratorBase_exposer.def( 
                "createDependent"
                , createDependent_function_type( &::OSG::MatrixCameraDecoratorBase::createDependent )
                , ( bp::arg("bFlags") ) );
        
        }
        { //::OSG::MatrixCameraDecoratorBase::createLocal
        
            typedef ::OSG::MatrixCameraDecoratorTransitPtr ( *createLocal_function_type )( ::OSG::BitVector );
            
            MatrixCameraDecoratorBase_exposer.def( 
                "createLocal"
                , createLocal_function_type( &::OSG::MatrixCameraDecoratorBase::createLocal )
                , ( bp::arg("bFlags")=(::OSG::BitVector)(OSG::FCLocal::All) ) );
        
        }
        { //::OSG::MatrixCameraDecoratorBase::getBinSize
        
            typedef ::OSG::SizeT ( ::OSG::MatrixCameraDecoratorBase::*getBinSize_function_type )( ::OSG::ConstFieldMaskArg ) ;
            
            MatrixCameraDecoratorBase_exposer.def( 
                "getBinSize"
                , getBinSize_function_type( &::OSG::MatrixCameraDecoratorBase::getBinSize )
                , ( bp::arg("whichField") ) );
        
        }
        { //::OSG::MatrixCameraDecoratorBase::getClassGroupId
        
            typedef ::OSG::UInt16 ( *getClassGroupId_function_type )(  );
            
            MatrixCameraDecoratorBase_exposer.def( 
                "getClassGroupId"
                , getClassGroupId_function_type( &::OSG::MatrixCameraDecoratorBase::getClassGroupId ) );
        
        }
        { //::OSG::MatrixCameraDecoratorBase::getClassType
        
            typedef ::OSG::FieldContainerType & ( *getClassType_function_type )(  );
            
            MatrixCameraDecoratorBase_exposer.def( 
                "getClassType"
                , getClassType_function_type( &::OSG::MatrixCameraDecoratorBase::getClassType )
                , bp::return_value_policy< bp::reference_existing_object >() );
        
        }
        { //::OSG::MatrixCameraDecoratorBase::getClassTypeId
        
            typedef ::OSG::UInt32 ( *getClassTypeId_function_type )(  );
            
            MatrixCameraDecoratorBase_exposer.def( 
                "getClassTypeId"
                , getClassTypeId_function_type( &::OSG::MatrixCameraDecoratorBase::getClassTypeId ) );
        
        }
        { //::OSG::MatrixCameraDecoratorBase::getContainerSize
        
            typedef ::OSG::UInt32 ( ::OSG::MatrixCameraDecoratorBase::*getContainerSize_function_type )(  ) const;
            
            MatrixCameraDecoratorBase_exposer.def( 
                "getContainerSize"
                , getContainerSize_function_type( &::OSG::MatrixCameraDecoratorBase::getContainerSize ) );
        
        }
        { //::OSG::MatrixCameraDecoratorBase::getPostProjection
        
            typedef ::OSG::Matrix const & ( ::OSG::MatrixCameraDecoratorBase::*getPostProjection_function_type )(  ) const;
            
            MatrixCameraDecoratorBase_exposer.def( 
                "getPostProjection"
                , getPostProjection_function_type( &::OSG::MatrixCameraDecoratorBase::getPostProjection )
                , bp::return_value_policy< bp::copy_const_reference >() );
        
        }
        { //::OSG::MatrixCameraDecoratorBase::getPostProjectionTranslation
        
            typedef ::OSG::Matrix const & ( ::OSG::MatrixCameraDecoratorBase::*getPostProjectionTranslation_function_type )(  ) const;
            
            MatrixCameraDecoratorBase_exposer.def( 
                "getPostProjectionTranslation"
                , getPostProjectionTranslation_function_type( &::OSG::MatrixCameraDecoratorBase::getPostProjectionTranslation )
                , bp::return_value_policy< bp::copy_const_reference >() );
        
        }
        { //::OSG::MatrixCameraDecoratorBase::getPostViewing
        
            typedef ::OSG::Matrix const & ( ::OSG::MatrixCameraDecoratorBase::*getPostViewing_function_type )(  ) const;
            
            MatrixCameraDecoratorBase_exposer.def( 
                "getPostViewing"
                , getPostViewing_function_type( &::OSG::MatrixCameraDecoratorBase::getPostViewing )
                , bp::return_value_policy< bp::copy_const_reference >() );
        
        }
        { //::OSG::MatrixCameraDecoratorBase::getPreProjection
        
            typedef ::OSG::Matrix const & ( ::OSG::MatrixCameraDecoratorBase::*getPreProjection_function_type )(  ) const;
            
            MatrixCameraDecoratorBase_exposer.def( 
                "getPreProjection"
                , getPreProjection_function_type( &::OSG::MatrixCameraDecoratorBase::getPreProjection )
                , bp::return_value_policy< bp::copy_const_reference >() );
        
        }
        { //::OSG::MatrixCameraDecoratorBase::getPreProjectionTranslation
        
            typedef ::OSG::Matrix const & ( ::OSG::MatrixCameraDecoratorBase::*getPreProjectionTranslation_function_type )(  ) const;
            
            MatrixCameraDecoratorBase_exposer.def( 
                "getPreProjectionTranslation"
                , getPreProjectionTranslation_function_type( &::OSG::MatrixCameraDecoratorBase::getPreProjectionTranslation )
                , bp::return_value_policy< bp::copy_const_reference >() );
        
        }
        { //::OSG::MatrixCameraDecoratorBase::getPreViewing
        
            typedef ::OSG::Matrix const & ( ::OSG::MatrixCameraDecoratorBase::*getPreViewing_function_type )(  ) const;
            
            MatrixCameraDecoratorBase_exposer.def( 
                "getPreViewing"
                , getPreViewing_function_type( &::OSG::MatrixCameraDecoratorBase::getPreViewing )
                , bp::return_value_policy< bp::copy_const_reference >() );
        
        }
        { //::OSG::MatrixCameraDecoratorBase::getSFPostProjection
        
            typedef ::OSG::SFMatrix const * ( ::OSG::MatrixCameraDecoratorBase::*getSFPostProjection_function_type )(  ) const;
            
            MatrixCameraDecoratorBase_exposer.def( 
                "getSFPostProjection"
                , getSFPostProjection_function_type( &::OSG::MatrixCameraDecoratorBase::getSFPostProjection )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::MatrixCameraDecoratorBase::getSFPostProjectionTranslation
        
            typedef ::OSG::SFMatrix const * ( ::OSG::MatrixCameraDecoratorBase::*getSFPostProjectionTranslation_function_type )(  ) const;
            
            MatrixCameraDecoratorBase_exposer.def( 
                "getSFPostProjectionTranslation"
                , getSFPostProjectionTranslation_function_type( &::OSG::MatrixCameraDecoratorBase::getSFPostProjectionTranslation )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::MatrixCameraDecoratorBase::getSFPostViewing
        
            typedef ::OSG::SFMatrix const * ( ::OSG::MatrixCameraDecoratorBase::*getSFPostViewing_function_type )(  ) const;
            
            MatrixCameraDecoratorBase_exposer.def( 
                "getSFPostViewing"
                , getSFPostViewing_function_type( &::OSG::MatrixCameraDecoratorBase::getSFPostViewing )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::MatrixCameraDecoratorBase::getSFPreProjection
        
            typedef ::OSG::SFMatrix const * ( ::OSG::MatrixCameraDecoratorBase::*getSFPreProjection_function_type )(  ) const;
            
            MatrixCameraDecoratorBase_exposer.def( 
                "getSFPreProjection"
                , getSFPreProjection_function_type( &::OSG::MatrixCameraDecoratorBase::getSFPreProjection )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::MatrixCameraDecoratorBase::getSFPreProjectionTranslation
        
            typedef ::OSG::SFMatrix const * ( ::OSG::MatrixCameraDecoratorBase::*getSFPreProjectionTranslation_function_type )(  ) const;
            
            MatrixCameraDecoratorBase_exposer.def( 
                "getSFPreProjectionTranslation"
                , getSFPreProjectionTranslation_function_type( &::OSG::MatrixCameraDecoratorBase::getSFPreProjectionTranslation )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::MatrixCameraDecoratorBase::getSFPreViewing
        
            typedef ::OSG::SFMatrix const * ( ::OSG::MatrixCameraDecoratorBase::*getSFPreViewing_function_type )(  ) const;
            
            MatrixCameraDecoratorBase_exposer.def( 
                "getSFPreViewing"
                , getSFPreViewing_function_type( &::OSG::MatrixCameraDecoratorBase::getSFPreViewing )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::MatrixCameraDecoratorBase::getType
        
            typedef ::OSG::FieldContainerType & ( ::OSG::MatrixCameraDecoratorBase::*getType_function_type )(  ) ;
            
            MatrixCameraDecoratorBase_exposer.def( 
                "getType"
                , getType_function_type( &::OSG::MatrixCameraDecoratorBase::getType )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::MatrixCameraDecoratorBase::getType
        
            typedef ::OSG::FieldContainerType const & ( ::OSG::MatrixCameraDecoratorBase::*getType_function_type )(  ) const;
            
            MatrixCameraDecoratorBase_exposer.def( 
                "getType"
                , getType_function_type( &::OSG::MatrixCameraDecoratorBase::getType )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::MatrixCameraDecoratorBase::setPostProjection
        
            typedef void ( ::OSG::MatrixCameraDecoratorBase::*setPostProjection_function_type )( ::OSG::Matrix const & ) ;
            
            MatrixCameraDecoratorBase_exposer.def( 
                "setPostProjection"
                , setPostProjection_function_type( &::OSG::MatrixCameraDecoratorBase::setPostProjection )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::MatrixCameraDecoratorBase::setPostProjectionTranslation
        
            typedef void ( ::OSG::MatrixCameraDecoratorBase::*setPostProjectionTranslation_function_type )( ::OSG::Matrix const & ) ;
            
            MatrixCameraDecoratorBase_exposer.def( 
                "setPostProjectionTranslation"
                , setPostProjectionTranslation_function_type( &::OSG::MatrixCameraDecoratorBase::setPostProjectionTranslation )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::MatrixCameraDecoratorBase::setPostViewing
        
            typedef void ( ::OSG::MatrixCameraDecoratorBase::*setPostViewing_function_type )( ::OSG::Matrix const & ) ;
            
            MatrixCameraDecoratorBase_exposer.def( 
                "setPostViewing"
                , setPostViewing_function_type( &::OSG::MatrixCameraDecoratorBase::setPostViewing )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::MatrixCameraDecoratorBase::setPreProjection
        
            typedef void ( ::OSG::MatrixCameraDecoratorBase::*setPreProjection_function_type )( ::OSG::Matrix const & ) ;
            
            MatrixCameraDecoratorBase_exposer.def( 
                "setPreProjection"
                , setPreProjection_function_type( &::OSG::MatrixCameraDecoratorBase::setPreProjection )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::MatrixCameraDecoratorBase::setPreProjectionTranslation
        
            typedef void ( ::OSG::MatrixCameraDecoratorBase::*setPreProjectionTranslation_function_type )( ::OSG::Matrix const & ) ;
            
            MatrixCameraDecoratorBase_exposer.def( 
                "setPreProjectionTranslation"
                , setPreProjectionTranslation_function_type( &::OSG::MatrixCameraDecoratorBase::setPreProjectionTranslation )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::MatrixCameraDecoratorBase::setPreViewing
        
            typedef void ( ::OSG::MatrixCameraDecoratorBase::*setPreViewing_function_type )( ::OSG::Matrix const & ) ;
            
            MatrixCameraDecoratorBase_exposer.def( 
                "setPreViewing"
                , setPreViewing_function_type( &::OSG::MatrixCameraDecoratorBase::setPreViewing )
                , ( bp::arg("value") ) );
        
        }
        MatrixCameraDecoratorBase_exposer.staticmethod( "create" );
        MatrixCameraDecoratorBase_exposer.staticmethod( "createDependent" );
        MatrixCameraDecoratorBase_exposer.staticmethod( "createLocal" );
        MatrixCameraDecoratorBase_exposer.staticmethod( "getClassGroupId" );
        MatrixCameraDecoratorBase_exposer.staticmethod( "getClassType" );
        MatrixCameraDecoratorBase_exposer.staticmethod( "getClassTypeId" );
    }

}
