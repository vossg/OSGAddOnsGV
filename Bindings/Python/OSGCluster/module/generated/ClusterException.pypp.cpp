// This file has been generated by Py++.


// PyOpenSG is (C) Copyright 2005-2009 by Allen Bierbaum
//
// This file is part of PyOpenSG.
//
// PyOpenSG is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License as published by the Free
// Software Foundation; either version 2 of the License, or (at your option)
// any later version.
//
// PyOpenSG is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for
// more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

#if __GNUC__ >= 4 || __GNUC_MINOR__ >=3
#pragma GCC diagnostic warning "-Wold-style-cast"
#pragma GCC diagnostic warning "-Wunused-local-typedefs"
#pragma GCC diagnostic warning "-Wnon-virtual-dtor"
#endif
#if WIN32
#pragma warning(disable : 4267)
#pragma warning(disable : 4344)
#endif

#include "boost/python.hpp"
#include "OSGCluster_mainheader.h"
#include "OsgPtrHelpers.h"
#include "boost/python/suite/indexing/map_indexing_suite.hpp"
#include "boost/python/suite/indexing/vector_indexing_suite.hpp"
#include "ClusterException.pypp.hpp"

using namespace std;
namespace bp = boost::python;

void translate_ClusterException( const OSG::ClusterException& exc ){
    PyErr_SetString( PyExc_IOError, exc.what() ); 
}

void register_ClusterException_class(){

    { //::OSG::ClusterException
        typedef bp::class_< OSG::ClusterException, bp::bases< ::OSG::Exception > > ClusterException_exposer_t;
        ClusterException_exposer_t ClusterException_exposer = ClusterException_exposer_t( "ClusterException", bp::init< >() );
        bp::scope ClusterException_scope( ClusterException_exposer );
        bp::register_exception_translator< OSG::ClusterException >( &translate_ClusterException );
    }

}
