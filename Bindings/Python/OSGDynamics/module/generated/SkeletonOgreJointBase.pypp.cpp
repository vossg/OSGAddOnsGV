// This file has been generated by Py++.


// PyOpenSG is (C) Copyright 2005-2009 by Allen Bierbaum
//
// This file is part of PyOpenSG.
//
// PyOpenSG is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License as published by the Free
// Software Foundation; either version 2 of the License, or (at your option)
// any later version.
//
// PyOpenSG is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for
// more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

#if __GNUC__ >= 4 || __GNUC_MINOR__ >=3
#pragma GCC diagnostic warning "-Wold-style-cast"
#pragma GCC diagnostic warning "-Wunused-local-typedefs"
#endif
#if WIN32
#pragma warning(disable : 4267)
#pragma warning(disable : 4344)
#endif

#include "boost/python.hpp"
#include "OSGDynamics_mainheader.h"
#include "OsgPtrHelpers.h"
#include "boost/python/suite/indexing/map_indexing_suite.hpp"
#include "boost/python/suite/indexing/vector_indexing_suite.hpp"
#include "SkeletonOgreJointBase.pypp.hpp"

using namespace std;
namespace bp = boost::python;

struct SkeletonOgreJointBase_wrapper : OSG::SkeletonOgreJointBase, bp::wrapper< OSG::SkeletonOgreJointBase > {



};

void register_SkeletonOgreJointBase_class(){

    { //::OSG::SkeletonOgreJointBase
        typedef bp::class_< SkeletonOgreJointBase_wrapper, bp::bases< OSG::BaseSkeletonJoint >, boost::noncopyable > SkeletonOgreJointBase_exposer_t;
        SkeletonOgreJointBase_exposer_t SkeletonOgreJointBase_exposer = SkeletonOgreJointBase_exposer_t( "SkeletonOgreJointBase", bp::no_init );
        bp::scope SkeletonOgreJointBase_scope( SkeletonOgreJointBase_exposer );
        bp::scope().attr("TranslateFieldId") = (int)OSG::SkeletonOgreJointBase::TranslateFieldId;
        bp::scope().attr("RotateFieldId") = (int)OSG::SkeletonOgreJointBase::RotateFieldId;
        bp::scope().attr("ScaleFieldId") = (int)OSG::SkeletonOgreJointBase::ScaleFieldId;
        bp::scope().attr("InvBindTranslateFieldId") = (int)OSG::SkeletonOgreJointBase::InvBindTranslateFieldId;
        bp::scope().attr("InvBindRotateFieldId") = (int)OSG::SkeletonOgreJointBase::InvBindRotateFieldId;
        bp::scope().attr("InvBindScaleFieldId") = (int)OSG::SkeletonOgreJointBase::InvBindScaleFieldId;
        bp::scope().attr("OffsetTranslateFieldId") = (int)OSG::SkeletonOgreJointBase::OffsetTranslateFieldId;
        bp::scope().attr("OffsetRotateFieldId") = (int)OSG::SkeletonOgreJointBase::OffsetRotateFieldId;
        bp::scope().attr("OffsetScaleFieldId") = (int)OSG::SkeletonOgreJointBase::OffsetScaleFieldId;
        bp::scope().attr("NextFieldId") = (int)OSG::SkeletonOgreJointBase::NextFieldId;
        { //::OSG::SkeletonOgreJointBase::copyFromBin
        
            typedef void ( ::OSG::SkeletonOgreJointBase::*copyFromBin_function_type )( ::OSG::BinaryDataHandler &,::OSG::ConstFieldMaskArg ) ;
            
            SkeletonOgreJointBase_exposer.def( 
                "copyFromBin"
                , copyFromBin_function_type( &::OSG::SkeletonOgreJointBase::copyFromBin )
                , ( bp::arg("pMem"), bp::arg("whichField") ) );
        
        }
        { //::OSG::SkeletonOgreJointBase::copyToBin
        
            typedef void ( ::OSG::SkeletonOgreJointBase::*copyToBin_function_type )( ::OSG::BinaryDataHandler &,::OSG::ConstFieldMaskArg ) ;
            
            SkeletonOgreJointBase_exposer.def( 
                "copyToBin"
                , copyToBin_function_type( &::OSG::SkeletonOgreJointBase::copyToBin )
                , ( bp::arg("pMem"), bp::arg("whichField") ) );
        
        }
        { //::OSG::SkeletonOgreJointBase::create
        
            typedef ::OSG::SkeletonOgreJointTransitPtr ( *create_function_type )(  );
            
            SkeletonOgreJointBase_exposer.def( 
                "create"
                , create_function_type( &::OSG::SkeletonOgreJointBase::create ) );
        
        }
        { //::OSG::SkeletonOgreJointBase::createDependent
        
            typedef ::OSG::SkeletonOgreJointTransitPtr ( *createDependent_function_type )( ::OSG::BitVector );
            
            SkeletonOgreJointBase_exposer.def( 
                "createDependent"
                , createDependent_function_type( &::OSG::SkeletonOgreJointBase::createDependent )
                , ( bp::arg("bFlags") ) );
        
        }
        { //::OSG::SkeletonOgreJointBase::createLocal
        
            typedef ::OSG::SkeletonOgreJointTransitPtr ( *createLocal_function_type )( ::OSG::BitVector );
            
            SkeletonOgreJointBase_exposer.def( 
                "createLocal"
                , createLocal_function_type( &::OSG::SkeletonOgreJointBase::createLocal )
                , ( bp::arg("bFlags")=(::OSG::BitVector)(OSG::FCLocal::All) ) );
        
        }
        { //::OSG::SkeletonOgreJointBase::getBinSize
        
            typedef ::OSG::SizeT ( ::OSG::SkeletonOgreJointBase::*getBinSize_function_type )( ::OSG::ConstFieldMaskArg ) ;
            
            SkeletonOgreJointBase_exposer.def( 
                "getBinSize"
                , getBinSize_function_type( &::OSG::SkeletonOgreJointBase::getBinSize )
                , ( bp::arg("whichField") ) );
        
        }
        { //::OSG::SkeletonOgreJointBase::getClassGroupId
        
            typedef ::OSG::UInt16 ( *getClassGroupId_function_type )(  );
            
            SkeletonOgreJointBase_exposer.def( 
                "getClassGroupId"
                , getClassGroupId_function_type( &::OSG::SkeletonOgreJointBase::getClassGroupId ) );
        
        }
        { //::OSG::SkeletonOgreJointBase::getClassType
        
            typedef ::OSG::FieldContainerType & ( *getClassType_function_type )(  );
            
            SkeletonOgreJointBase_exposer.def( 
                "getClassType"
                , getClassType_function_type( &::OSG::SkeletonOgreJointBase::getClassType )
                , bp::return_value_policy< bp::reference_existing_object >() );
        
        }
        { //::OSG::SkeletonOgreJointBase::getClassTypeId
        
            typedef ::OSG::UInt32 ( *getClassTypeId_function_type )(  );
            
            SkeletonOgreJointBase_exposer.def( 
                "getClassTypeId"
                , getClassTypeId_function_type( &::OSG::SkeletonOgreJointBase::getClassTypeId ) );
        
        }
        { //::OSG::SkeletonOgreJointBase::getContainerSize
        
            typedef ::OSG::UInt32 ( ::OSG::SkeletonOgreJointBase::*getContainerSize_function_type )(  ) const;
            
            SkeletonOgreJointBase_exposer.def( 
                "getContainerSize"
                , getContainerSize_function_type( &::OSG::SkeletonOgreJointBase::getContainerSize ) );
        
        }
        { //::OSG::SkeletonOgreJointBase::getInvBindRotate
        
            typedef ::OSG::Quaternion const & ( ::OSG::SkeletonOgreJointBase::*getInvBindRotate_function_type )(  ) const;
            
            SkeletonOgreJointBase_exposer.def( 
                "getInvBindRotate"
                , getInvBindRotate_function_type( &::OSG::SkeletonOgreJointBase::getInvBindRotate )
                , bp::return_value_policy< bp::copy_const_reference >() );
        
        }
        { //::OSG::SkeletonOgreJointBase::getInvBindScale
        
            typedef ::OSG::Vec3f const & ( ::OSG::SkeletonOgreJointBase::*getInvBindScale_function_type )(  ) const;
            
            SkeletonOgreJointBase_exposer.def( 
                "getInvBindScale"
                , getInvBindScale_function_type( &::OSG::SkeletonOgreJointBase::getInvBindScale )
                , bp::return_value_policy< bp::copy_const_reference >() );
        
        }
        { //::OSG::SkeletonOgreJointBase::getInvBindTranslate
        
            typedef ::OSG::Vec3f const & ( ::OSG::SkeletonOgreJointBase::*getInvBindTranslate_function_type )(  ) const;
            
            SkeletonOgreJointBase_exposer.def( 
                "getInvBindTranslate"
                , getInvBindTranslate_function_type( &::OSG::SkeletonOgreJointBase::getInvBindTranslate )
                , bp::return_value_policy< bp::copy_const_reference >() );
        
        }
        { //::OSG::SkeletonOgreJointBase::getOffsetRotate
        
            typedef ::OSG::Quaternion const & ( ::OSG::SkeletonOgreJointBase::*getOffsetRotate_function_type )(  ) const;
            
            SkeletonOgreJointBase_exposer.def( 
                "getOffsetRotate"
                , getOffsetRotate_function_type( &::OSG::SkeletonOgreJointBase::getOffsetRotate )
                , bp::return_value_policy< bp::copy_const_reference >() );
        
        }
        { //::OSG::SkeletonOgreJointBase::getOffsetScale
        
            typedef ::OSG::Vec3f const & ( ::OSG::SkeletonOgreJointBase::*getOffsetScale_function_type )(  ) const;
            
            SkeletonOgreJointBase_exposer.def( 
                "getOffsetScale"
                , getOffsetScale_function_type( &::OSG::SkeletonOgreJointBase::getOffsetScale )
                , bp::return_value_policy< bp::copy_const_reference >() );
        
        }
        { //::OSG::SkeletonOgreJointBase::getOffsetTranslate
        
            typedef ::OSG::Vec3f const & ( ::OSG::SkeletonOgreJointBase::*getOffsetTranslate_function_type )(  ) const;
            
            SkeletonOgreJointBase_exposer.def( 
                "getOffsetTranslate"
                , getOffsetTranslate_function_type( &::OSG::SkeletonOgreJointBase::getOffsetTranslate )
                , bp::return_value_policy< bp::copy_const_reference >() );
        
        }
        { //::OSG::SkeletonOgreJointBase::getRotate
        
            typedef ::OSG::Quaternion const & ( ::OSG::SkeletonOgreJointBase::*getRotate_function_type )(  ) const;
            
            SkeletonOgreJointBase_exposer.def( 
                "getRotate"
                , getRotate_function_type( &::OSG::SkeletonOgreJointBase::getRotate )
                , bp::return_value_policy< bp::copy_const_reference >() );
        
        }
        { //::OSG::SkeletonOgreJointBase::getSFInvBindRotate
        
            typedef ::OSG::SFQuaternion const * ( ::OSG::SkeletonOgreJointBase::*getSFInvBindRotate_function_type )(  ) const;
            
            SkeletonOgreJointBase_exposer.def( 
                "getSFInvBindRotate"
                , getSFInvBindRotate_function_type( &::OSG::SkeletonOgreJointBase::getSFInvBindRotate )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::SkeletonOgreJointBase::getSFInvBindScale
        
            typedef ::OSG::SFVec3f const * ( ::OSG::SkeletonOgreJointBase::*getSFInvBindScale_function_type )(  ) const;
            
            SkeletonOgreJointBase_exposer.def( 
                "getSFInvBindScale"
                , getSFInvBindScale_function_type( &::OSG::SkeletonOgreJointBase::getSFInvBindScale )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::SkeletonOgreJointBase::getSFInvBindTranslate
        
            typedef ::OSG::SFVec3f const * ( ::OSG::SkeletonOgreJointBase::*getSFInvBindTranslate_function_type )(  ) const;
            
            SkeletonOgreJointBase_exposer.def( 
                "getSFInvBindTranslate"
                , getSFInvBindTranslate_function_type( &::OSG::SkeletonOgreJointBase::getSFInvBindTranslate )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::SkeletonOgreJointBase::getSFOffsetRotate
        
            typedef ::OSG::SFQuaternion const * ( ::OSG::SkeletonOgreJointBase::*getSFOffsetRotate_function_type )(  ) const;
            
            SkeletonOgreJointBase_exposer.def( 
                "getSFOffsetRotate"
                , getSFOffsetRotate_function_type( &::OSG::SkeletonOgreJointBase::getSFOffsetRotate )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::SkeletonOgreJointBase::getSFOffsetScale
        
            typedef ::OSG::SFVec3f const * ( ::OSG::SkeletonOgreJointBase::*getSFOffsetScale_function_type )(  ) const;
            
            SkeletonOgreJointBase_exposer.def( 
                "getSFOffsetScale"
                , getSFOffsetScale_function_type( &::OSG::SkeletonOgreJointBase::getSFOffsetScale )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::SkeletonOgreJointBase::getSFOffsetTranslate
        
            typedef ::OSG::SFVec3f const * ( ::OSG::SkeletonOgreJointBase::*getSFOffsetTranslate_function_type )(  ) const;
            
            SkeletonOgreJointBase_exposer.def( 
                "getSFOffsetTranslate"
                , getSFOffsetTranslate_function_type( &::OSG::SkeletonOgreJointBase::getSFOffsetTranslate )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::SkeletonOgreJointBase::getSFRotate
        
            typedef ::OSG::SFQuaternion const * ( ::OSG::SkeletonOgreJointBase::*getSFRotate_function_type )(  ) const;
            
            SkeletonOgreJointBase_exposer.def( 
                "getSFRotate"
                , getSFRotate_function_type( &::OSG::SkeletonOgreJointBase::getSFRotate )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::SkeletonOgreJointBase::getSFScale
        
            typedef ::OSG::SFVec3f const * ( ::OSG::SkeletonOgreJointBase::*getSFScale_function_type )(  ) const;
            
            SkeletonOgreJointBase_exposer.def( 
                "getSFScale"
                , getSFScale_function_type( &::OSG::SkeletonOgreJointBase::getSFScale )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::SkeletonOgreJointBase::getSFTranslate
        
            typedef ::OSG::SFVec3f const * ( ::OSG::SkeletonOgreJointBase::*getSFTranslate_function_type )(  ) const;
            
            SkeletonOgreJointBase_exposer.def( 
                "getSFTranslate"
                , getSFTranslate_function_type( &::OSG::SkeletonOgreJointBase::getSFTranslate )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::SkeletonOgreJointBase::getScale
        
            typedef ::OSG::Vec3f const & ( ::OSG::SkeletonOgreJointBase::*getScale_function_type )(  ) const;
            
            SkeletonOgreJointBase_exposer.def( 
                "getScale"
                , getScale_function_type( &::OSG::SkeletonOgreJointBase::getScale )
                , bp::return_value_policy< bp::copy_const_reference >() );
        
        }
        { //::OSG::SkeletonOgreJointBase::getTranslate
        
            typedef ::OSG::Vec3f const & ( ::OSG::SkeletonOgreJointBase::*getTranslate_function_type )(  ) const;
            
            SkeletonOgreJointBase_exposer.def( 
                "getTranslate"
                , getTranslate_function_type( &::OSG::SkeletonOgreJointBase::getTranslate )
                , bp::return_value_policy< bp::copy_const_reference >() );
        
        }
        { //::OSG::SkeletonOgreJointBase::getType
        
            typedef ::OSG::FieldContainerType & ( ::OSG::SkeletonOgreJointBase::*getType_function_type )(  ) ;
            
            SkeletonOgreJointBase_exposer.def( 
                "getType"
                , getType_function_type( &::OSG::SkeletonOgreJointBase::getType )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::SkeletonOgreJointBase::getType
        
            typedef ::OSG::FieldContainerType const & ( ::OSG::SkeletonOgreJointBase::*getType_function_type )(  ) const;
            
            SkeletonOgreJointBase_exposer.def( 
                "getType"
                , getType_function_type( &::OSG::SkeletonOgreJointBase::getType )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::SkeletonOgreJointBase::setInvBindRotate
        
            typedef void ( ::OSG::SkeletonOgreJointBase::*setInvBindRotate_function_type )( ::OSG::Quaternion const & ) ;
            
            SkeletonOgreJointBase_exposer.def( 
                "setInvBindRotate"
                , setInvBindRotate_function_type( &::OSG::SkeletonOgreJointBase::setInvBindRotate )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::SkeletonOgreJointBase::setInvBindScale
        
            typedef void ( ::OSG::SkeletonOgreJointBase::*setInvBindScale_function_type )( ::OSG::Vec3f const & ) ;
            
            SkeletonOgreJointBase_exposer.def( 
                "setInvBindScale"
                , setInvBindScale_function_type( &::OSG::SkeletonOgreJointBase::setInvBindScale )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::SkeletonOgreJointBase::setInvBindTranslate
        
            typedef void ( ::OSG::SkeletonOgreJointBase::*setInvBindTranslate_function_type )( ::OSG::Vec3f const & ) ;
            
            SkeletonOgreJointBase_exposer.def( 
                "setInvBindTranslate"
                , setInvBindTranslate_function_type( &::OSG::SkeletonOgreJointBase::setInvBindTranslate )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::SkeletonOgreJointBase::setOffsetRotate
        
            typedef void ( ::OSG::SkeletonOgreJointBase::*setOffsetRotate_function_type )( ::OSG::Quaternion const & ) ;
            
            SkeletonOgreJointBase_exposer.def( 
                "setOffsetRotate"
                , setOffsetRotate_function_type( &::OSG::SkeletonOgreJointBase::setOffsetRotate )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::SkeletonOgreJointBase::setOffsetScale
        
            typedef void ( ::OSG::SkeletonOgreJointBase::*setOffsetScale_function_type )( ::OSG::Vec3f const & ) ;
            
            SkeletonOgreJointBase_exposer.def( 
                "setOffsetScale"
                , setOffsetScale_function_type( &::OSG::SkeletonOgreJointBase::setOffsetScale )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::SkeletonOgreJointBase::setOffsetTranslate
        
            typedef void ( ::OSG::SkeletonOgreJointBase::*setOffsetTranslate_function_type )( ::OSG::Vec3f const & ) ;
            
            SkeletonOgreJointBase_exposer.def( 
                "setOffsetTranslate"
                , setOffsetTranslate_function_type( &::OSG::SkeletonOgreJointBase::setOffsetTranslate )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::SkeletonOgreJointBase::setRotate
        
            typedef void ( ::OSG::SkeletonOgreJointBase::*setRotate_function_type )( ::OSG::Quaternion const & ) ;
            
            SkeletonOgreJointBase_exposer.def( 
                "setRotate"
                , setRotate_function_type( &::OSG::SkeletonOgreJointBase::setRotate )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::SkeletonOgreJointBase::setScale
        
            typedef void ( ::OSG::SkeletonOgreJointBase::*setScale_function_type )( ::OSG::Vec3f const & ) ;
            
            SkeletonOgreJointBase_exposer.def( 
                "setScale"
                , setScale_function_type( &::OSG::SkeletonOgreJointBase::setScale )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::SkeletonOgreJointBase::setTranslate
        
            typedef void ( ::OSG::SkeletonOgreJointBase::*setTranslate_function_type )( ::OSG::Vec3f const & ) ;
            
            SkeletonOgreJointBase_exposer.def( 
                "setTranslate"
                , setTranslate_function_type( &::OSG::SkeletonOgreJointBase::setTranslate )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::BaseSkeletonJoint::jointUpdateEnter
        
            typedef ::OSG::ActionBase::ResultE ( ::OSG::BaseSkeletonJoint::*jointUpdateEnter_function_type )( ::OSG::BaseSkeletonJoint::JointTraverser * ) ;
            
            SkeletonOgreJointBase_exposer.def( 
                "jointUpdateEnter"
                , jointUpdateEnter_function_type( &::OSG::BaseSkeletonJoint::jointUpdateEnter )
                , ( bp::arg("jt") ) );
        
        }
        { //::OSG::BaseSkeletonJoint::jointUpdateLeave
        
            typedef ::OSG::ActionBase::ResultE ( ::OSG::BaseSkeletonJoint::*jointUpdateLeave_function_type )( ::OSG::BaseSkeletonJoint::JointTraverser * ) ;
            
            SkeletonOgreJointBase_exposer.def( 
                "jointUpdateLeave"
                , jointUpdateLeave_function_type( &::OSG::BaseSkeletonJoint::jointUpdateLeave )
                , ( bp::arg("jt") ) );
        
        }
        SkeletonOgreJointBase_exposer.staticmethod( "create" );
        SkeletonOgreJointBase_exposer.staticmethod( "createDependent" );
        SkeletonOgreJointBase_exposer.staticmethod( "createLocal" );
        SkeletonOgreJointBase_exposer.staticmethod( "getClassGroupId" );
        SkeletonOgreJointBase_exposer.staticmethod( "getClassType" );
        SkeletonOgreJointBase_exposer.staticmethod( "getClassTypeId" );
    }

}
