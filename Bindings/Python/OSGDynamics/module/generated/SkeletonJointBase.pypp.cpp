// This file has been generated by Py++.


// PyOpenSG is (C) Copyright 2005-2009 by Allen Bierbaum
//
// This file is part of PyOpenSG.
//
// PyOpenSG is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License as published by the Free
// Software Foundation; either version 2 of the License, or (at your option)
// any later version.
//
// PyOpenSG is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for
// more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

#if __GNUC__ >= 4 || __GNUC_MINOR__ >=3
#pragma GCC diagnostic warning "-Wold-style-cast"
#pragma GCC diagnostic warning "-Wunused-local-typedefs"
#pragma GCC diagnostic warning "-Wnon-virtual-dtor"
#pragma GCC diagnostic warning "-Wshadow"
#endif
#if WIN32
#pragma warning(disable : 4267)
#pragma warning(disable : 4344)
#endif

#include "boost/python.hpp"
#include "OSGDynamics_mainheader.h"
#include "OsgPtrHelpers.h"
#include "boost/python/suite/indexing/map_indexing_suite.hpp"
#include "boost/python/suite/indexing/vector_indexing_suite.hpp"
#include "SkeletonJointBase.pypp.hpp"

using namespace std;
namespace bp = boost::python;

struct SkeletonJointBase_wrapper : OSG::SkeletonJointBase, bp::wrapper< OSG::SkeletonJointBase > {



};

void register_SkeletonJointBase_class(){

    { //::OSG::SkeletonJointBase
        typedef bp::class_< SkeletonJointBase_wrapper, bp::bases< OSG::BaseSkeletonJoint >, boost::noncopyable > SkeletonJointBase_exposer_t;
        SkeletonJointBase_exposer_t SkeletonJointBase_exposer = SkeletonJointBase_exposer_t( "SkeletonJointBase", bp::no_init );
        bp::scope SkeletonJointBase_scope( SkeletonJointBase_exposer );
        bp::scope().attr("InvBindMatrixFieldId") = (int)OSG::SkeletonJointBase::InvBindMatrixFieldId;
        bp::scope().attr("MatrixFieldId") = (int)OSG::SkeletonJointBase::MatrixFieldId;
        bp::scope().attr("OffsetMatrixFieldId") = (int)OSG::SkeletonJointBase::OffsetMatrixFieldId;
        bp::scope().attr("NextFieldId") = (int)OSG::SkeletonJointBase::NextFieldId;
        { //::OSG::SkeletonJointBase::copyFromBin
        
            typedef void ( ::OSG::SkeletonJointBase::*copyFromBin_function_type )( ::OSG::BinaryDataHandler &,::OSG::ConstFieldMaskArg ) ;
            
            SkeletonJointBase_exposer.def( 
                "copyFromBin"
                , copyFromBin_function_type( &::OSG::SkeletonJointBase::copyFromBin )
                , ( bp::arg("pMem"), bp::arg("whichField") ) );
        
        }
        { //::OSG::SkeletonJointBase::copyToBin
        
            typedef void ( ::OSG::SkeletonJointBase::*copyToBin_function_type )( ::OSG::BinaryDataHandler &,::OSG::ConstFieldMaskArg ) ;
            
            SkeletonJointBase_exposer.def( 
                "copyToBin"
                , copyToBin_function_type( &::OSG::SkeletonJointBase::copyToBin )
                , ( bp::arg("pMem"), bp::arg("whichField") ) );
        
        }
        { //::OSG::SkeletonJointBase::create
        
            typedef ::OSG::SkeletonJointTransitPtr ( *create_function_type )(  );
            
            SkeletonJointBase_exposer.def( 
                "create"
                , create_function_type( &::OSG::SkeletonJointBase::create ) );
        
        }
        { //::OSG::SkeletonJointBase::createDependent
        
            typedef ::OSG::SkeletonJointTransitPtr ( *createDependent_function_type )( ::OSG::BitVector );
            
            SkeletonJointBase_exposer.def( 
                "createDependent"
                , createDependent_function_type( &::OSG::SkeletonJointBase::createDependent )
                , ( bp::arg("bFlags") ) );
        
        }
        { //::OSG::SkeletonJointBase::createLocal
        
            typedef ::OSG::SkeletonJointTransitPtr ( *createLocal_function_type )( ::OSG::BitVector );
            
            SkeletonJointBase_exposer.def( 
                "createLocal"
                , createLocal_function_type( &::OSG::SkeletonJointBase::createLocal )
                , ( bp::arg("bFlags")=(::OSG::BitVector)(OSG::FCLocal::All) ) );
        
        }
        { //::OSG::SkeletonJointBase::getBinSize
        
            typedef ::OSG::SizeT ( ::OSG::SkeletonJointBase::*getBinSize_function_type )( ::OSG::ConstFieldMaskArg ) ;
            
            SkeletonJointBase_exposer.def( 
                "getBinSize"
                , getBinSize_function_type( &::OSG::SkeletonJointBase::getBinSize )
                , ( bp::arg("whichField") ) );
        
        }
        { //::OSG::SkeletonJointBase::getClassGroupId
        
            typedef ::OSG::UInt16 ( *getClassGroupId_function_type )(  );
            
            SkeletonJointBase_exposer.def( 
                "getClassGroupId"
                , getClassGroupId_function_type( &::OSG::SkeletonJointBase::getClassGroupId ) );
        
        }
        { //::OSG::SkeletonJointBase::getClassType
        
            typedef ::OSG::FieldContainerType & ( *getClassType_function_type )(  );
            
            SkeletonJointBase_exposer.def( 
                "getClassType"
                , getClassType_function_type( &::OSG::SkeletonJointBase::getClassType )
                , bp::return_value_policy< bp::reference_existing_object >() );
        
        }
        { //::OSG::SkeletonJointBase::getClassTypeId
        
            typedef ::OSG::UInt32 ( *getClassTypeId_function_type )(  );
            
            SkeletonJointBase_exposer.def( 
                "getClassTypeId"
                , getClassTypeId_function_type( &::OSG::SkeletonJointBase::getClassTypeId ) );
        
        }
        { //::OSG::SkeletonJointBase::getContainerSize
        
            typedef ::OSG::UInt32 ( ::OSG::SkeletonJointBase::*getContainerSize_function_type )(  ) const;
            
            SkeletonJointBase_exposer.def( 
                "getContainerSize"
                , getContainerSize_function_type( &::OSG::SkeletonJointBase::getContainerSize ) );
        
        }
        { //::OSG::SkeletonJointBase::getInvBindMatrix
        
            typedef ::OSG::Matrix const & ( ::OSG::SkeletonJointBase::*getInvBindMatrix_function_type )(  ) const;
            
            SkeletonJointBase_exposer.def( 
                "getInvBindMatrix"
                , getInvBindMatrix_function_type( &::OSG::SkeletonJointBase::getInvBindMatrix )
                , bp::return_value_policy< bp::copy_const_reference >() );
        
        }
        { //::OSG::SkeletonJointBase::getMatrix
        
            typedef ::OSG::Matrix const & ( ::OSG::SkeletonJointBase::*getMatrix_function_type )(  ) const;
            
            SkeletonJointBase_exposer.def( 
                "getMatrix"
                , getMatrix_function_type( &::OSG::SkeletonJointBase::getMatrix )
                , bp::return_value_policy< bp::copy_const_reference >() );
        
        }
        { //::OSG::SkeletonJointBase::getOffsetMatrix
        
            typedef ::OSG::Matrix const & ( ::OSG::SkeletonJointBase::*getOffsetMatrix_function_type )(  ) const;
            
            SkeletonJointBase_exposer.def( 
                "getOffsetMatrix"
                , getOffsetMatrix_function_type( &::OSG::SkeletonJointBase::getOffsetMatrix )
                , bp::return_value_policy< bp::copy_const_reference >() );
        
        }
        { //::OSG::SkeletonJointBase::getSFInvBindMatrix
        
            typedef ::OSG::SFMatrix const * ( ::OSG::SkeletonJointBase::*getSFInvBindMatrix_function_type )(  ) const;
            
            SkeletonJointBase_exposer.def( 
                "getSFInvBindMatrix"
                , getSFInvBindMatrix_function_type( &::OSG::SkeletonJointBase::getSFInvBindMatrix )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::SkeletonJointBase::getSFMatrix
        
            typedef ::OSG::SFMatrix const * ( ::OSG::SkeletonJointBase::*getSFMatrix_function_type )(  ) const;
            
            SkeletonJointBase_exposer.def( 
                "getSFMatrix"
                , getSFMatrix_function_type( &::OSG::SkeletonJointBase::getSFMatrix )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::SkeletonJointBase::getSFOffsetMatrix
        
            typedef ::OSG::SFMatrix const * ( ::OSG::SkeletonJointBase::*getSFOffsetMatrix_function_type )(  ) const;
            
            SkeletonJointBase_exposer.def( 
                "getSFOffsetMatrix"
                , getSFOffsetMatrix_function_type( &::OSG::SkeletonJointBase::getSFOffsetMatrix )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::SkeletonJointBase::getType
        
            typedef ::OSG::FieldContainerType & ( ::OSG::SkeletonJointBase::*getType_function_type )(  ) ;
            
            SkeletonJointBase_exposer.def( 
                "getType"
                , getType_function_type( &::OSG::SkeletonJointBase::getType )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::SkeletonJointBase::getType
        
            typedef ::OSG::FieldContainerType const & ( ::OSG::SkeletonJointBase::*getType_function_type )(  ) const;
            
            SkeletonJointBase_exposer.def( 
                "getType"
                , getType_function_type( &::OSG::SkeletonJointBase::getType )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::SkeletonJointBase::setInvBindMatrix
        
            typedef void ( ::OSG::SkeletonJointBase::*setInvBindMatrix_function_type )( ::OSG::Matrix const & ) ;
            
            SkeletonJointBase_exposer.def( 
                "setInvBindMatrix"
                , setInvBindMatrix_function_type( &::OSG::SkeletonJointBase::setInvBindMatrix )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::SkeletonJointBase::setMatrix
        
            typedef void ( ::OSG::SkeletonJointBase::*setMatrix_function_type )( ::OSG::Matrix const & ) ;
            
            SkeletonJointBase_exposer.def( 
                "setMatrix"
                , setMatrix_function_type( &::OSG::SkeletonJointBase::setMatrix )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::SkeletonJointBase::setOffsetMatrix
        
            typedef void ( ::OSG::SkeletonJointBase::*setOffsetMatrix_function_type )( ::OSG::Matrix const & ) ;
            
            SkeletonJointBase_exposer.def( 
                "setOffsetMatrix"
                , setOffsetMatrix_function_type( &::OSG::SkeletonJointBase::setOffsetMatrix )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::BaseSkeletonJoint::jointUpdateEnter
        
            typedef ::OSG::ActionBase::ResultE ( ::OSG::BaseSkeletonJoint::*jointUpdateEnter_function_type )( ::OSG::BaseSkeletonJoint::JointTraverser * ) ;
            
            SkeletonJointBase_exposer.def( 
                "jointUpdateEnter"
                , jointUpdateEnter_function_type( &::OSG::BaseSkeletonJoint::jointUpdateEnter )
                , ( bp::arg("jt") ) );
        
        }
        { //::OSG::BaseSkeletonJoint::jointUpdateLeave
        
            typedef ::OSG::ActionBase::ResultE ( ::OSG::BaseSkeletonJoint::*jointUpdateLeave_function_type )( ::OSG::BaseSkeletonJoint::JointTraverser * ) ;
            
            SkeletonJointBase_exposer.def( 
                "jointUpdateLeave"
                , jointUpdateLeave_function_type( &::OSG::BaseSkeletonJoint::jointUpdateLeave )
                , ( bp::arg("jt") ) );
        
        }
        SkeletonJointBase_exposer.staticmethod( "create" );
        SkeletonJointBase_exposer.staticmethod( "createDependent" );
        SkeletonJointBase_exposer.staticmethod( "createLocal" );
        SkeletonJointBase_exposer.staticmethod( "getClassGroupId" );
        SkeletonJointBase_exposer.staticmethod( "getClassType" );
        SkeletonJointBase_exposer.staticmethod( "getClassTypeId" );
    }

}
