// This file has been generated by Py++.


// PyOpenSG is (C) Copyright 2005-2009 by Allen Bierbaum
//
// This file is part of PyOpenSG.
//
// PyOpenSG is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License as published by the Free
// Software Foundation; either version 2 of the License, or (at your option)
// any later version.
//
// PyOpenSG is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for
// more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

#if __GNUC__ >= 4 || __GNUC_MINOR__ >=3
#pragma GCC diagnostic warning "-Wold-style-cast"
#pragma GCC diagnostic warning "-Wunused-local-typedefs"
#endif
#if WIN32
#pragma warning(disable : 4267)
#pragma warning(disable : 4344)
#endif

#include "boost/python.hpp"
#include "OSGGroup_mainheader.h"
#include "OsgPtrHelpers.h"
#include "boost/python/suite/indexing/map_indexing_suite.hpp"
#include "boost/python/suite/indexing/vector_indexing_suite.hpp"
#include "CubeMapGeneratorBase.pypp.hpp"

using namespace std;
namespace bp = boost::python;

boost::python::list CubeMapGeneratorBase_getMFExclude(OSG::CubeMapGeneratorBase *self)
{
   boost::python::list result;
   OSG::MFUnrecNodePtr const * mf_data = self->getMFExclude();
   const OSG::UInt32 size(mf_data->size32());
   for ( OSG::UInt32 i = 0; i < size; ++i )
   {
      result.append(OSG::Node::ObjRecPtr((*mf_data)[i]));
   }
   return result;
}

void register_CubeMapGeneratorBase_class(){

    { //::OSG::CubeMapGeneratorBase
        typedef bp::class_< OSG::CubeMapGeneratorBase, bp::bases< OSG::DynamicStateGenerator >, boost::noncopyable > CubeMapGeneratorBase_exposer_t;
        CubeMapGeneratorBase_exposer_t CubeMapGeneratorBase_exposer = CubeMapGeneratorBase_exposer_t( "CubeMapGeneratorBase", bp::no_init );
        bp::scope CubeMapGeneratorBase_scope( CubeMapGeneratorBase_exposer );
        bp::scope().attr("RootFieldId") = (int)OSG::CubeMapGeneratorBase::RootFieldId;
        bp::scope().attr("ExcludeFieldId") = (int)OSG::CubeMapGeneratorBase::ExcludeFieldId;
        bp::scope().attr("TextureFieldId") = (int)OSG::CubeMapGeneratorBase::TextureFieldId;
        bp::scope().attr("TextureSizeFieldId") = (int)OSG::CubeMapGeneratorBase::TextureSizeFieldId;
        bp::scope().attr("TextureFormatFieldId") = (int)OSG::CubeMapGeneratorBase::TextureFormatFieldId;
        bp::scope().attr("BeaconFieldId") = (int)OSG::CubeMapGeneratorBase::BeaconFieldId;
        bp::scope().attr("OriginFieldId") = (int)OSG::CubeMapGeneratorBase::OriginFieldId;
        bp::scope().attr("OriginModeFieldId") = (int)OSG::CubeMapGeneratorBase::OriginModeFieldId;
        bp::scope().attr("TexUnitFieldId") = (int)OSG::CubeMapGeneratorBase::TexUnitFieldId;
        bp::scope().attr("SetupModeFieldId") = (int)OSG::CubeMapGeneratorBase::SetupModeFieldId;
        bp::scope().attr("BackgroundFieldId") = (int)OSG::CubeMapGeneratorBase::BackgroundFieldId;
        bp::scope().attr("CameraFieldId") = (int)OSG::CubeMapGeneratorBase::CameraFieldId;
        bp::scope().attr("NextFieldId") = (int)OSG::CubeMapGeneratorBase::NextFieldId;
        { //::OSG::CubeMapGeneratorBase::assignExclude
        
            typedef void ( ::OSG::CubeMapGeneratorBase::*assignExclude_function_type )( ::OSG::MFUnrecNodePtr const & ) ;
            
            CubeMapGeneratorBase_exposer.def( 
                "assignExclude"
                , assignExclude_function_type( &::OSG::CubeMapGeneratorBase::assignExclude )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::CubeMapGeneratorBase::clearExclude
        
            typedef void ( ::OSG::CubeMapGeneratorBase::*clearExclude_function_type )(  ) ;
            
            CubeMapGeneratorBase_exposer.def( 
                "clearExclude"
                , clearExclude_function_type( &::OSG::CubeMapGeneratorBase::clearExclude ) );
        
        }
        { //::OSG::CubeMapGeneratorBase::copyFromBin
        
            typedef void ( ::OSG::CubeMapGeneratorBase::*copyFromBin_function_type )( ::OSG::BinaryDataHandler &,::OSG::ConstFieldMaskArg ) ;
            
            CubeMapGeneratorBase_exposer.def( 
                "copyFromBin"
                , copyFromBin_function_type( &::OSG::CubeMapGeneratorBase::copyFromBin )
                , ( bp::arg("pMem"), bp::arg("whichField") ) );
        
        }
        { //::OSG::CubeMapGeneratorBase::copyToBin
        
            typedef void ( ::OSG::CubeMapGeneratorBase::*copyToBin_function_type )( ::OSG::BinaryDataHandler &,::OSG::ConstFieldMaskArg ) ;
            
            CubeMapGeneratorBase_exposer.def( 
                "copyToBin"
                , copyToBin_function_type( &::OSG::CubeMapGeneratorBase::copyToBin )
                , ( bp::arg("pMem"), bp::arg("whichField") ) );
        
        }
        { //::OSG::CubeMapGeneratorBase::create
        
            typedef ::OSG::CubeMapGeneratorTransitPtr ( *create_function_type )(  );
            
            CubeMapGeneratorBase_exposer.def( 
                "create"
                , create_function_type( &::OSG::CubeMapGeneratorBase::create ) );
        
        }
        { //::OSG::CubeMapGeneratorBase::createDependent
        
            typedef ::OSG::CubeMapGeneratorTransitPtr ( *createDependent_function_type )( ::OSG::BitVector );
            
            CubeMapGeneratorBase_exposer.def( 
                "createDependent"
                , createDependent_function_type( &::OSG::CubeMapGeneratorBase::createDependent )
                , ( bp::arg("bFlags") ) );
        
        }
        { //::OSG::CubeMapGeneratorBase::createLocal
        
            typedef ::OSG::CubeMapGeneratorTransitPtr ( *createLocal_function_type )( ::OSG::BitVector );
            
            CubeMapGeneratorBase_exposer.def( 
                "createLocal"
                , createLocal_function_type( &::OSG::CubeMapGeneratorBase::createLocal )
                , ( bp::arg("bFlags")=(::OSG::BitVector)(OSG::FCLocal::All) ) );
        
        }
        { //::OSG::CubeMapGeneratorBase::getBackground
        
            typedef ::OSG::Background * ( ::OSG::CubeMapGeneratorBase::*getBackground_function_type )(  ) const;
            
            CubeMapGeneratorBase_exposer.def( 
                "getBackground"
                , getBackground_function_type( &::OSG::CubeMapGeneratorBase::getBackground )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::CubeMapGeneratorBase::getBeacon
        
            typedef ::OSG::Node * ( ::OSG::CubeMapGeneratorBase::*getBeacon_function_type )(  ) const;
            
            CubeMapGeneratorBase_exposer.def( 
                "getBeacon"
                , getBeacon_function_type( &::OSG::CubeMapGeneratorBase::getBeacon )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::CubeMapGeneratorBase::getBinSize
        
            typedef ::OSG::SizeT ( ::OSG::CubeMapGeneratorBase::*getBinSize_function_type )( ::OSG::ConstFieldMaskArg ) ;
            
            CubeMapGeneratorBase_exposer.def( 
                "getBinSize"
                , getBinSize_function_type( &::OSG::CubeMapGeneratorBase::getBinSize )
                , ( bp::arg("whichField") ) );
        
        }
        { //::OSG::CubeMapGeneratorBase::getCamera
        
            typedef ::OSG::Camera * ( ::OSG::CubeMapGeneratorBase::*getCamera_function_type )(  ) const;
            
            CubeMapGeneratorBase_exposer.def( 
                "getCamera"
                , getCamera_function_type( &::OSG::CubeMapGeneratorBase::getCamera )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::CubeMapGeneratorBase::getClassGroupId
        
            typedef ::OSG::UInt16 ( *getClassGroupId_function_type )(  );
            
            CubeMapGeneratorBase_exposer.def( 
                "getClassGroupId"
                , getClassGroupId_function_type( &::OSG::CubeMapGeneratorBase::getClassGroupId ) );
        
        }
        { //::OSG::CubeMapGeneratorBase::getClassType
        
            typedef ::OSG::FieldContainerType & ( *getClassType_function_type )(  );
            
            CubeMapGeneratorBase_exposer.def( 
                "getClassType"
                , getClassType_function_type( &::OSG::CubeMapGeneratorBase::getClassType )
                , bp::return_value_policy< bp::reference_existing_object >() );
        
        }
        { //::OSG::CubeMapGeneratorBase::getClassTypeId
        
            typedef ::OSG::UInt32 ( *getClassTypeId_function_type )(  );
            
            CubeMapGeneratorBase_exposer.def( 
                "getClassTypeId"
                , getClassTypeId_function_type( &::OSG::CubeMapGeneratorBase::getClassTypeId ) );
        
        }
        { //::OSG::CubeMapGeneratorBase::getContainerSize
        
            typedef ::OSG::UInt32 ( ::OSG::CubeMapGeneratorBase::*getContainerSize_function_type )(  ) const;
            
            CubeMapGeneratorBase_exposer.def( 
                "getContainerSize"
                , getContainerSize_function_type( &::OSG::CubeMapGeneratorBase::getContainerSize ) );
        
        }
        { //::OSG::CubeMapGeneratorBase::getExclude
        
            typedef ::OSG::Node * ( ::OSG::CubeMapGeneratorBase::*getExclude_function_type )( ::OSG::UInt32 const ) const;
            
            CubeMapGeneratorBase_exposer.def( 
                "getExclude"
                , getExclude_function_type( &::OSG::CubeMapGeneratorBase::getExclude )
                , ( bp::arg("index") )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::CubeMapGeneratorBase::getOrigin
        
            typedef ::OSG::Pnt3f const & ( ::OSG::CubeMapGeneratorBase::*getOrigin_function_type )(  ) const;
            
            CubeMapGeneratorBase_exposer.def( 
                "getOrigin"
                , getOrigin_function_type( &::OSG::CubeMapGeneratorBase::getOrigin )
                , bp::return_value_policy< bp::copy_const_reference >() );
        
        }
        { //::OSG::CubeMapGeneratorBase::getOriginMode
        
            typedef ::OSG::UInt32 ( ::OSG::CubeMapGeneratorBase::*getOriginMode_function_type )(  ) const;
            
            CubeMapGeneratorBase_exposer.def( 
                "getOriginMode"
                , getOriginMode_function_type( &::OSG::CubeMapGeneratorBase::getOriginMode ) );
        
        }
        { //::OSG::CubeMapGeneratorBase::getRoot
        
            typedef ::OSG::Node * ( ::OSG::CubeMapGeneratorBase::*getRoot_function_type )(  ) const;
            
            CubeMapGeneratorBase_exposer.def( 
                "getRoot"
                , getRoot_function_type( &::OSG::CubeMapGeneratorBase::getRoot )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::CubeMapGeneratorBase::getSFBackground
        
            typedef ::OSG::SFUnrecBackgroundPtr const * ( ::OSG::CubeMapGeneratorBase::*getSFBackground_function_type )(  ) const;
            
            CubeMapGeneratorBase_exposer.def( 
                "getSFBackground"
                , getSFBackground_function_type( &::OSG::CubeMapGeneratorBase::getSFBackground )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::CubeMapGeneratorBase::getSFBeacon
        
            typedef ::OSG::SFWeakNodePtr const * ( ::OSG::CubeMapGeneratorBase::*getSFBeacon_function_type )(  ) const;
            
            CubeMapGeneratorBase_exposer.def( 
                "getSFBeacon"
                , getSFBeacon_function_type( &::OSG::CubeMapGeneratorBase::getSFBeacon )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::CubeMapGeneratorBase::getSFCamera
        
            typedef ::OSG::SFUnrecCameraPtr const * ( ::OSG::CubeMapGeneratorBase::*getSFCamera_function_type )(  ) const;
            
            CubeMapGeneratorBase_exposer.def( 
                "getSFCamera"
                , getSFCamera_function_type( &::OSG::CubeMapGeneratorBase::getSFCamera )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::CubeMapGeneratorBase::getSFOrigin
        
            typedef ::OSG::SFPnt3f const * ( ::OSG::CubeMapGeneratorBase::*getSFOrigin_function_type )(  ) const;
            
            CubeMapGeneratorBase_exposer.def( 
                "getSFOrigin"
                , getSFOrigin_function_type( &::OSG::CubeMapGeneratorBase::getSFOrigin )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::CubeMapGeneratorBase::getSFOriginMode
        
            typedef ::OSG::SFUInt32 const * ( ::OSG::CubeMapGeneratorBase::*getSFOriginMode_function_type )(  ) const;
            
            CubeMapGeneratorBase_exposer.def( 
                "getSFOriginMode"
                , getSFOriginMode_function_type( &::OSG::CubeMapGeneratorBase::getSFOriginMode )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::CubeMapGeneratorBase::getSFRoot
        
            typedef ::OSG::SFUnrecNodePtr const * ( ::OSG::CubeMapGeneratorBase::*getSFRoot_function_type )(  ) const;
            
            CubeMapGeneratorBase_exposer.def( 
                "getSFRoot"
                , getSFRoot_function_type( &::OSG::CubeMapGeneratorBase::getSFRoot )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::CubeMapGeneratorBase::getSFSetupMode
        
            typedef ::OSG::SFUInt32 const * ( ::OSG::CubeMapGeneratorBase::*getSFSetupMode_function_type )(  ) const;
            
            CubeMapGeneratorBase_exposer.def( 
                "getSFSetupMode"
                , getSFSetupMode_function_type( &::OSG::CubeMapGeneratorBase::getSFSetupMode )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::CubeMapGeneratorBase::getSFTexUnit
        
            typedef ::OSG::SFUInt32 const * ( ::OSG::CubeMapGeneratorBase::*getSFTexUnit_function_type )(  ) const;
            
            CubeMapGeneratorBase_exposer.def( 
                "getSFTexUnit"
                , getSFTexUnit_function_type( &::OSG::CubeMapGeneratorBase::getSFTexUnit )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::CubeMapGeneratorBase::getSFTexture
        
            typedef ::OSG::SFUnrecTextureObjChunkPtr const * ( ::OSG::CubeMapGeneratorBase::*getSFTexture_function_type )(  ) const;
            
            CubeMapGeneratorBase_exposer.def( 
                "getSFTexture"
                , getSFTexture_function_type( &::OSG::CubeMapGeneratorBase::getSFTexture )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::CubeMapGeneratorBase::getSFTextureFormat
        
            typedef ::OSG::SFGLenum const * ( ::OSG::CubeMapGeneratorBase::*getSFTextureFormat_function_type )(  ) const;
            
            CubeMapGeneratorBase_exposer.def( 
                "getSFTextureFormat"
                , getSFTextureFormat_function_type( &::OSG::CubeMapGeneratorBase::getSFTextureFormat )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::CubeMapGeneratorBase::getSFTextureSize
        
            typedef ::OSG::SFVec2s const * ( ::OSG::CubeMapGeneratorBase::*getSFTextureSize_function_type )(  ) const;
            
            CubeMapGeneratorBase_exposer.def( 
                "getSFTextureSize"
                , getSFTextureSize_function_type( &::OSG::CubeMapGeneratorBase::getSFTextureSize )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::CubeMapGeneratorBase::getSetupMode
        
            typedef ::OSG::UInt32 ( ::OSG::CubeMapGeneratorBase::*getSetupMode_function_type )(  ) const;
            
            CubeMapGeneratorBase_exposer.def( 
                "getSetupMode"
                , getSetupMode_function_type( &::OSG::CubeMapGeneratorBase::getSetupMode ) );
        
        }
        { //::OSG::CubeMapGeneratorBase::getTexUnit
        
            typedef ::OSG::UInt32 ( ::OSG::CubeMapGeneratorBase::*getTexUnit_function_type )(  ) const;
            
            CubeMapGeneratorBase_exposer.def( 
                "getTexUnit"
                , getTexUnit_function_type( &::OSG::CubeMapGeneratorBase::getTexUnit ) );
        
        }
        { //::OSG::CubeMapGeneratorBase::getTexture
        
            typedef ::OSG::TextureObjChunk * ( ::OSG::CubeMapGeneratorBase::*getTexture_function_type )(  ) const;
            
            CubeMapGeneratorBase_exposer.def( 
                "getTexture"
                , getTexture_function_type( &::OSG::CubeMapGeneratorBase::getTexture )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::CubeMapGeneratorBase::getTextureFormat
        
            typedef ::GLenum const & ( ::OSG::CubeMapGeneratorBase::*getTextureFormat_function_type )(  ) const;
            
            CubeMapGeneratorBase_exposer.def( 
                "getTextureFormat"
                , getTextureFormat_function_type( &::OSG::CubeMapGeneratorBase::getTextureFormat )
                , bp::return_value_policy< bp::return_by_value >() );
        
        }
        { //::OSG::CubeMapGeneratorBase::getTextureSize
        
            typedef ::OSG::Vec2s const & ( ::OSG::CubeMapGeneratorBase::*getTextureSize_function_type )(  ) const;
            
            CubeMapGeneratorBase_exposer.def( 
                "getTextureSize"
                , getTextureSize_function_type( &::OSG::CubeMapGeneratorBase::getTextureSize )
                , bp::return_value_policy< bp::copy_const_reference >() );
        
        }
        { //::OSG::CubeMapGeneratorBase::getType
        
            typedef ::OSG::FieldContainerType & ( ::OSG::CubeMapGeneratorBase::*getType_function_type )(  ) ;
            
            CubeMapGeneratorBase_exposer.def( 
                "getType"
                , getType_function_type( &::OSG::CubeMapGeneratorBase::getType )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::CubeMapGeneratorBase::getType
        
            typedef ::OSG::FieldContainerType const & ( ::OSG::CubeMapGeneratorBase::*getType_function_type )(  ) const;
            
            CubeMapGeneratorBase_exposer.def( 
                "getType"
                , getType_function_type( &::OSG::CubeMapGeneratorBase::getType )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::CubeMapGeneratorBase::pushToExclude
        
            typedef void ( ::OSG::CubeMapGeneratorBase::*pushToExclude_function_type )( ::OSG::Node * const ) ;
            
            CubeMapGeneratorBase_exposer.def( 
                "pushToExclude"
                , pushToExclude_function_type( &::OSG::CubeMapGeneratorBase::pushToExclude )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::CubeMapGeneratorBase::removeFromExclude
        
            typedef void ( ::OSG::CubeMapGeneratorBase::*removeFromExclude_function_type )( ::OSG::UInt32 ) ;
            
            CubeMapGeneratorBase_exposer.def( 
                "removeFromExclude"
                , removeFromExclude_function_type( &::OSG::CubeMapGeneratorBase::removeFromExclude )
                , ( bp::arg("uiIndex") ) );
        
        }
        { //::OSG::CubeMapGeneratorBase::removeObjFromExclude
        
            typedef void ( ::OSG::CubeMapGeneratorBase::*removeObjFromExclude_function_type )( ::OSG::Node * const ) ;
            
            CubeMapGeneratorBase_exposer.def( 
                "removeObjFromExclude"
                , removeObjFromExclude_function_type( &::OSG::CubeMapGeneratorBase::removeObjFromExclude )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::CubeMapGeneratorBase::setBackground
        
            typedef void ( ::OSG::CubeMapGeneratorBase::*setBackground_function_type )( ::OSG::Background * const ) ;
            
            CubeMapGeneratorBase_exposer.def( 
                "setBackground"
                , setBackground_function_type( &::OSG::CubeMapGeneratorBase::setBackground )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::CubeMapGeneratorBase::setBeacon
        
            typedef void ( ::OSG::CubeMapGeneratorBase::*setBeacon_function_type )( ::OSG::Node * const ) ;
            
            CubeMapGeneratorBase_exposer.def( 
                "setBeacon"
                , setBeacon_function_type( &::OSG::CubeMapGeneratorBase::setBeacon )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::CubeMapGeneratorBase::setCamera
        
            typedef void ( ::OSG::CubeMapGeneratorBase::*setCamera_function_type )( ::OSG::Camera * const ) ;
            
            CubeMapGeneratorBase_exposer.def( 
                "setCamera"
                , setCamera_function_type( &::OSG::CubeMapGeneratorBase::setCamera )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::CubeMapGeneratorBase::setOrigin
        
            typedef void ( ::OSG::CubeMapGeneratorBase::*setOrigin_function_type )( ::OSG::Pnt3f const & ) ;
            
            CubeMapGeneratorBase_exposer.def( 
                "setOrigin"
                , setOrigin_function_type( &::OSG::CubeMapGeneratorBase::setOrigin )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::CubeMapGeneratorBase::setOriginMode
        
            typedef void ( ::OSG::CubeMapGeneratorBase::*setOriginMode_function_type )( ::OSG::UInt32 const ) ;
            
            CubeMapGeneratorBase_exposer.def( 
                "setOriginMode"
                , setOriginMode_function_type( &::OSG::CubeMapGeneratorBase::setOriginMode )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::CubeMapGeneratorBase::setRoot
        
            typedef void ( ::OSG::CubeMapGeneratorBase::*setRoot_function_type )( ::OSG::Node * const ) ;
            
            CubeMapGeneratorBase_exposer.def( 
                "setRoot"
                , setRoot_function_type( &::OSG::CubeMapGeneratorBase::setRoot )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::CubeMapGeneratorBase::setSetupMode
        
            typedef void ( ::OSG::CubeMapGeneratorBase::*setSetupMode_function_type )( ::OSG::UInt32 const ) ;
            
            CubeMapGeneratorBase_exposer.def( 
                "setSetupMode"
                , setSetupMode_function_type( &::OSG::CubeMapGeneratorBase::setSetupMode )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::CubeMapGeneratorBase::setTexUnit
        
            typedef void ( ::OSG::CubeMapGeneratorBase::*setTexUnit_function_type )( ::OSG::UInt32 const ) ;
            
            CubeMapGeneratorBase_exposer.def( 
                "setTexUnit"
                , setTexUnit_function_type( &::OSG::CubeMapGeneratorBase::setTexUnit )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::CubeMapGeneratorBase::setTexture
        
            typedef void ( ::OSG::CubeMapGeneratorBase::*setTexture_function_type )( ::OSG::TextureObjChunk * const ) ;
            
            CubeMapGeneratorBase_exposer.def( 
                "setTexture"
                , setTexture_function_type( &::OSG::CubeMapGeneratorBase::setTexture )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::CubeMapGeneratorBase::setTextureFormat
        
            typedef void ( ::OSG::CubeMapGeneratorBase::*setTextureFormat_function_type )( ::GLenum const & ) ;
            
            CubeMapGeneratorBase_exposer.def( 
                "setTextureFormat"
                , setTextureFormat_function_type( &::OSG::CubeMapGeneratorBase::setTextureFormat )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::CubeMapGeneratorBase::setTextureSize
        
            typedef void ( ::OSG::CubeMapGeneratorBase::*setTextureSize_function_type )( ::OSG::Vec2s const & ) ;
            
            CubeMapGeneratorBase_exposer.def( 
                "setTextureSize"
                , setTextureSize_function_type( &::OSG::CubeMapGeneratorBase::setTextureSize )
                , ( bp::arg("value") ) );
        
        }
        CubeMapGeneratorBase_exposer.staticmethod( "create" );
        CubeMapGeneratorBase_exposer.staticmethod( "createDependent" );
        CubeMapGeneratorBase_exposer.staticmethod( "createLocal" );
        CubeMapGeneratorBase_exposer.staticmethod( "getClassGroupId" );
        CubeMapGeneratorBase_exposer.staticmethod( "getClassType" );
        CubeMapGeneratorBase_exposer.staticmethod( "getClassTypeId" );
        CubeMapGeneratorBase_exposer.def("getMFExclude",CubeMapGeneratorBase_getMFExclude);
    }

}
