// This file has been generated by Py++.

// PyOpenSG is (C) Copyright 2005-2009 by Allen Bierbaum
//
// This file is part of PyOpenSG.
//
// PyOpenSG is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License as published by the Free
// Software Foundation; either version 2 of the License, or (at your option)
// any later version.
//
// PyOpenSG is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for
// more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

#if __GNUC__ >= 4 || __GNUC_MINOR__ >=3
#pragma GCC diagnostic warning "-Wold-style-cast"
#pragma GCC diagnostic warning "-Wunused-local-typedefs"
#endif
#if WIN32
#pragma warning(disable : 4267)
#pragma warning(disable : 4344)
#endif


#include "boost/python.hpp"

#include "OSGContribCSM_mainheader.h"

#include "OsgPtrHelpers.h"

#include "boost/python/suite/indexing/map_indexing_suite.hpp"

#include "boost/python/suite/indexing/vector_indexing_suite.hpp"

#include "generated/CSMClusterWinOptions.pypp.hpp"

#include "generated/CSMClusterWinOptionsBase.pypp.hpp"

#include "generated/CSMClusterWindow.pypp.hpp"

#include "generated/CSMClusterWindowBase.pypp.hpp"

#include "generated/CSMDrawManager.pypp.hpp"

#include "generated/CSMDrawManagerBase.pypp.hpp"

#include "generated/CSMDrawer.pypp.hpp"

#include "generated/CSMDrawerBase.pypp.hpp"

#include "generated/CSMGLUTWindow.pypp.hpp"

#include "generated/CSMGLUTWindowBase.pypp.hpp"

#include "generated/CSMLogger.pypp.hpp"

#include "generated/CSMLoggerBase.pypp.hpp"

#include "generated/CSMMultiWinOptions.pypp.hpp"

#include "generated/CSMMultiWinOptionsBase.pypp.hpp"

#include "generated/CSMNativeWindow.pypp.hpp"

#include "generated/CSMNativeWindowBase.pypp.hpp"

#include "generated/CSMPassiveWinClearOp.pypp.hpp"

#include "generated/CSMPassiveWinClearOpBase.pypp.hpp"

#include "generated/CSMPassiveWindow.pypp.hpp"

#include "generated/CSMPassiveWindowBase.pypp.hpp"

#include "generated/CSMPerspectiveCamera.pypp.hpp"

#include "generated/CSMPerspectiveCameraBase.pypp.hpp"

#include "generated/CSMSceneParameter.pypp.hpp"

#include "generated/CSMSceneParameterBase.pypp.hpp"

#include "generated/CSMSortFirstWinOptions.pypp.hpp"

#include "generated/CSMSortFirstWinOptionsBase.pypp.hpp"

#include "generated/CSMStatisticsForeground.pypp.hpp"

#include "generated/CSMStatisticsForegroundBase.pypp.hpp"

#include "generated/CSMTrackball.pypp.hpp"

#include "generated/CSMTrackballBase.pypp.hpp"

#include "generated/CSMViewport.pypp.hpp"

#include "generated/CSMViewportBase.pypp.hpp"

#include "generated/CSMWindow.pypp.hpp"

#include "generated/CSMWindowBase.pypp.hpp"

#include "generated/ComplexSceneManager.pypp.hpp"

#include "generated/ComplexSceneManagerBase.pypp.hpp"

#include "generated/Counter.pypp.hpp"

#include "generated/CounterBase.pypp.hpp"

#include "generated/DeviceInterfaceSensor.pypp.hpp"

#include "generated/DeviceInterfaceSensorBase.pypp.hpp"

#include "generated/ImageFile.pypp.hpp"

#include "generated/ImageFileBase.pypp.hpp"

#include "generated/InterfaceOptions.pypp.hpp"

#include "generated/InterfaceOptionsBase.pypp.hpp"

#include "generated/KeySensor.pypp.hpp"

#include "generated/KeySensorBase.pypp.hpp"

#include "generated/MouseDataInterfaceSensor.pypp.hpp"

#include "generated/MouseDataInterfaceSensorBase.pypp.hpp"

#include "generated/ShaderProgramFile.pypp.hpp"

#include "generated/ShaderProgramFileBase.pypp.hpp"

#include "generated/SimpleSHLChunkFile.pypp.hpp"

#include "generated/SimpleSHLChunkFileBase.pypp.hpp"

#include "generated/TransformationInterfaceSensor.pypp.hpp"

#include "generated/TransformationInterfaceSensorBase.pypp.hpp"

using namespace std;

namespace bp = boost::python;

BOOST_PYTHON_MODULE(OSGContribCSMPy){
    register_CSMClusterWinOptionsBase_class();

    register_CSMClusterWinOptions_class();

    register_CSMWindowBase_class();

    register_CSMWindow_class();

    register_CSMClusterWindowBase_class();

    register_CSMClusterWindow_class();

    register_CSMDrawManager_class();

    register_CSMDrawManagerBase_class();

    register_CSMDrawerBase_class();

    register_CSMDrawer_class();

    register_CSMGLUTWindowBase_class();

    register_CSMGLUTWindow_class();

    register_CSMLogger_class();

    register_CSMLoggerBase_class();

    register_CSMMultiWinOptionsBase_class();

    register_CSMMultiWinOptions_class();

    register_CSMNativeWindowBase_class();

    register_CSMNativeWindow_class();

    register_CSMPassiveWinClearOpBase_class();

    register_CSMPassiveWinClearOp_class();

    register_CSMPassiveWindowBase_class();

    register_CSMPassiveWindow_class();

    register_CSMPerspectiveCameraBase_class();

    register_CSMPerspectiveCamera_class();

    register_CSMSceneParameterBase_class();

    register_CSMSceneParameter_class();

    register_CSMSortFirstWinOptionsBase_class();

    register_CSMSortFirstWinOptions_class();

    register_CSMStatisticsForegroundBase_class();

    register_CSMStatisticsForeground_class();

    register_CSMTrackballBase_class();

    register_CSMTrackball_class();

    register_CSMViewportBase_class();

    register_CSMViewport_class();

    register_ComplexSceneManagerBase_class();

    register_ComplexSceneManager_class();

    register_CounterBase_class();

    register_Counter_class();

    register_DeviceInterfaceSensorBase_class();

    register_DeviceInterfaceSensor_class();

    register_ImageFile_class();

    register_ImageFileBase_class();

    register_InterfaceOptionsBase_class();

    register_InterfaceOptions_class();

    register_KeySensorBase_class();

    register_KeySensor_class();

    register_MouseDataInterfaceSensorBase_class();

    register_MouseDataInterfaceSensor_class();

    register_ShaderProgramFileBase_class();

    register_ShaderProgramFile_class();

    register_SimpleSHLChunkFile_class();

    register_SimpleSHLChunkFileBase_class();

    register_TransformationInterfaceSensorBase_class();

    /** Helpers for OSG::CSMPassiveWindow */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::CSMPassiveWindow, OSG::CSMPassiveWindow::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::CSMPassiveWindow::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::CSMDrawManager */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::CSMDrawManager, OSG::CSMDrawManager::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::CSMDrawManager::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::CSMStatisticsForeground */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::CSMStatisticsForeground, OSG::CSMStatisticsForeground::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::CSMStatisticsForeground::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::CSMPassiveWinClearOp */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::CSMPassiveWinClearOp, OSG::CSMPassiveWinClearOp::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::CSMPassiveWinClearOp::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::CSMPerspectiveCamera */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::CSMPerspectiveCamera, OSG::CSMPerspectiveCamera::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::CSMPerspectiveCamera::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::CSMClusterWindow */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::CSMClusterWindow, OSG::CSMClusterWindow::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::CSMClusterWindow::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::MouseDataInterfaceSensor */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::MouseDataInterfaceSensor, OSG::MouseDataInterfaceSensor::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::MouseDataInterfaceSensor::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::SimpleSHLChunkFile */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::SimpleSHLChunkFile, OSG::SimpleSHLChunkFile::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::SimpleSHLChunkFile::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::CSMMultiWinOptions */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::CSMMultiWinOptions, OSG::CSMMultiWinOptions::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::CSMMultiWinOptions::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::CSMLogger */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::CSMLogger, OSG::CSMLogger::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::CSMLogger::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::CSMGLUTWindow */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::CSMGLUTWindow, OSG::CSMGLUTWindow::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::CSMGLUTWindow::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::TransformationInterfaceSensor */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::TransformationInterfaceSensor, OSG::TransformationInterfaceSensor::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::TransformationInterfaceSensor::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::CSMWindow */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::CSMWindow, OSG::CSMWindow::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::CSMWindow::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::CSMTrackball */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::CSMTrackball, OSG::CSMTrackball::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::CSMTrackball::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::CSMSortFirstWinOptions */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::CSMSortFirstWinOptions, OSG::CSMSortFirstWinOptions::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::CSMSortFirstWinOptions::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::Counter */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::Counter, OSG::Counter::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::Counter::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::KeySensor */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::KeySensor, OSG::KeySensor::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::KeySensor::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::CSMViewport */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::CSMViewport, OSG::CSMViewport::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::CSMViewport::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShaderProgramFile */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShaderProgramFile, OSG::ShaderProgramFile::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShaderProgramFile::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::CSMDrawer */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::CSMDrawer, OSG::CSMDrawer::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::CSMDrawer::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::CSMSceneParameter */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::CSMSceneParameter, OSG::CSMSceneParameter::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::CSMSceneParameter::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ImageFile */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ImageFile, OSG::ImageFile::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ImageFile::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::CSMClusterWinOptions */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::CSMClusterWinOptions, OSG::CSMClusterWinOptions::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::CSMClusterWinOptions::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::DeviceInterfaceSensor */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::DeviceInterfaceSensor, OSG::DeviceInterfaceSensor::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::DeviceInterfaceSensor::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::CSMNativeWindow */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::CSMNativeWindow, OSG::CSMNativeWindow::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::CSMNativeWindow::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ComplexSceneManager */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ComplexSceneManager, OSG::ComplexSceneManager::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ComplexSceneManager::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::InterfaceOptions */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::InterfaceOptions, OSG::InterfaceOptions::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::InterfaceOptions::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    register_TransformationInterfaceSensor_class();
}

