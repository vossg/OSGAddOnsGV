// This file has been generated by Py++.


// PyOpenSG is (C) Copyright 2005-2009 by Allen Bierbaum
//
// This file is part of PyOpenSG.
//
// PyOpenSG is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License as published by the Free
// Software Foundation; either version 2 of the License, or (at your option)
// any later version.
//
// PyOpenSG is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for
// more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

#if __GNUC__ >= 4 || __GNUC_MINOR__ >=3
#pragma GCC diagnostic warning "-Wold-style-cast"
#pragma GCC diagnostic warning "-Wunused-local-typedefs"
#pragma GCC diagnostic warning "-Wnon-virtual-dtor"
#pragma GCC diagnostic warning "-Wshadow"
#endif
#if WIN32
#pragma warning(disable : 4267)
#pragma warning(disable : 4344)
#endif

#include "boost/python.hpp"
#include "OSGScripting_mainheader.h"
#include "OsgPtrHelpers.h"
#include "boost/python/suite/indexing/map_indexing_suite.hpp"
#include "boost/python/suite/indexing/vector_indexing_suite.hpp"
#include "PyFieldContainerPtrMFieldEditHandle.pypp.hpp"

using namespace std;
namespace bp = boost::python;

void register_PyFieldContainerPtrMFieldEditHandle_class(){

    { //::OSG::PyFieldContainerPtrMFieldEditHandle
        typedef bp::class_< OSG::PyFieldContainerPtrMFieldEditHandle, bp::bases< OSG::PyFieldContainerPtrMFieldEditHandleBase >, OSG::PyFieldContainerPtrMFieldEditHandle::ObjRecPtr, boost::noncopyable > PyFieldContainerPtrMFieldEditHandle_exposer_t;
        PyFieldContainerPtrMFieldEditHandle_exposer_t PyFieldContainerPtrMFieldEditHandle_exposer = PyFieldContainerPtrMFieldEditHandle_exposer_t( "PyFieldContainerPtrMFieldEditHandle", bp::no_init );
        bp::scope PyFieldContainerPtrMFieldEditHandle_scope( PyFieldContainerPtrMFieldEditHandle_exposer );
        { //::OSG::PyFieldContainerPtrMFieldEditHandle::append
        
            typedef void ( ::OSG::PyFieldContainerPtrMFieldEditHandle::*append_function_type )( ::OSG::FieldContainer * ) ;
            
            PyFieldContainerPtrMFieldEditHandle_exposer.def( 
                "append"
                , append_function_type( &::OSG::PyFieldContainerPtrMFieldEditHandle::append )
                , ( bp::arg("fc") ) );
        
        }
        { //::OSG::PyFieldContainerPtrMFieldEditHandle::changed
        
            typedef void ( ::OSG::PyFieldContainerPtrMFieldEditHandle::*changed_function_type )( ::OSG::ConstFieldMaskArg,::OSG::UInt32,::OSG::BitVector ) ;
            
            PyFieldContainerPtrMFieldEditHandle_exposer.def( 
                "changed"
                , changed_function_type( &::OSG::PyFieldContainerPtrMFieldEditHandle::changed )
                , ( bp::arg("whichField"), bp::arg("origin"), bp::arg("details") ) );
        
        }
        { //::OSG::PyFieldContainerPtrMFieldEditHandle::dump
        
            typedef void ( ::OSG::PyFieldContainerPtrMFieldEditHandle::*dump_function_type )( ::OSG::UInt32,long unsigned int const ) const;
            
            PyFieldContainerPtrMFieldEditHandle_exposer.def( 
                "dump"
                , dump_function_type( &::OSG::PyFieldContainerPtrMFieldEditHandle::dump )
                , ( bp::arg("uiIndent")=(::OSG::UInt32)(0), bp::arg("bvFlags")=(long unsigned int const)(0) ) );
        
        }
        { //::OSG::PyFieldContainerPtrMFieldEditHandle::getitem
        
            typedef ::OSG::FieldContainerTransitPtr ( ::OSG::PyFieldContainerPtrMFieldEditHandle::*__getitem___function_type )( int ) ;
            
            PyFieldContainerPtrMFieldEditHandle_exposer.def( 
                "__getitem__"
                , __getitem___function_type( &::OSG::PyFieldContainerPtrMFieldEditHandle::getitem )
                , ( bp::arg("key") ) );
        
        }
        { //::OSG::PyFieldContainerPtrMFieldEditHandle::init
        
            typedef bool ( ::OSG::PyFieldContainerPtrMFieldEditHandle::*init_function_type )( ::OSG::PythonScript *,::std::string const & ) ;
            
            PyFieldContainerPtrMFieldEditHandle_exposer.def( 
                "init"
                , init_function_type( &::OSG::PyFieldContainerPtrMFieldEditHandle::init )
                , ( bp::arg("pythonScript"), bp::arg("fieldName") ) );
        
        }
        { //::OSG::PyFieldContainerPtrMFieldEditHandle::iter
        
            typedef ::OSG::PyFieldContainerPtrMFieldEditHandleTransitPtr ( ::OSG::PyFieldContainerPtrMFieldEditHandle::*__iter___function_type )(  ) ;
            
            PyFieldContainerPtrMFieldEditHandle_exposer.def( 
                "__iter__"
                , __iter___function_type( &::OSG::PyFieldContainerPtrMFieldEditHandle::iter ) );
        
        }
        { //::OSG::PyFieldContainerPtrMFieldEditHandle::len
        
            typedef ::OSG::UInt32 ( ::OSG::PyFieldContainerPtrMFieldEditHandle::*__len___function_type )(  ) ;
            
            PyFieldContainerPtrMFieldEditHandle_exposer.def( 
                "__len__"
                , __len___function_type( &::OSG::PyFieldContainerPtrMFieldEditHandle::len ) );
        
        }
        { //::OSG::PyFieldContainerPtrMFieldEditHandle::next
        
            typedef ::OSG::FieldContainerTransitPtr ( ::OSG::PyFieldContainerPtrMFieldEditHandle::*next_function_type )(  ) ;
            
            PyFieldContainerPtrMFieldEditHandle_exposer.def( 
                "next"
                , next_function_type( &::OSG::PyFieldContainerPtrMFieldEditHandle::next ) );
        
        }
        { //::OSG::PyFieldContainerPtrMFieldEditHandle::setitem
        
            typedef void ( ::OSG::PyFieldContainerPtrMFieldEditHandle::*__setitem___function_type )( int,::OSG::FieldContainer * ) ;
            
            PyFieldContainerPtrMFieldEditHandle_exposer.def( 
                "__setitem__"
                , __setitem___function_type( &::OSG::PyFieldContainerPtrMFieldEditHandle::setitem )
                , ( bp::arg("key"), bp::arg("value") ) );
        
        }
        pyopensg::register_transit< OSG::PyFieldContainerPtrMFieldEditHandle >::execute();
        bp::implicitly_convertible< OSG::PyFieldContainerPtrMFieldEditHandle::ObjRecPtr, OSG::PyFieldContainerPtrMFieldEditHandle* >();
        bp::implicitly_convertible< OSG::PyFieldContainerPtrMFieldEditHandle::ObjRecPtr, OSG::PyFieldContainerPtrMFieldEditHandle::ObjCPtr >();
        bp::implicitly_convertible< OSG::PyFieldContainerPtrMFieldEditHandle::ObjRecPtr, OSG::FieldContainer* >();
        bp::implicitly_convertible< OSG::PyFieldContainerPtrMFieldEditHandle::ObjRecPtr, OSG::FieldContainer::ObjRecPtr >();
        bp::implicitly_convertible<OSG::PyFieldContainerPtrMFieldEditHandle::ObjRecPtr, OSG::FieldContainer::ObjCPtr>();
    }

}
