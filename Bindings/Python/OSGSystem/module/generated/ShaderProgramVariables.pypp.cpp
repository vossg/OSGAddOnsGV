// This file has been generated by Py++.


// PyOpenSG is (C) Copyright 2005-2009 by Allen Bierbaum
//
// This file is part of PyOpenSG.
//
// PyOpenSG is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License as published by the Free
// Software Foundation; either version 2 of the License, or (at your option)
// any later version.
//
// PyOpenSG is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for
// more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

#if __GNUC__ >= 4 || __GNUC_MINOR__ >=3
#pragma GCC diagnostic warning "-Wold-style-cast"
#pragma GCC diagnostic warning "-Wunused-local-typedefs"
#endif
#if WIN32
#pragma warning(disable : 4267)
#pragma warning(disable : 4344)
#endif

#include "boost/python.hpp"
#include "OSGSystem_mainheader.h"
#include "OsgPtrHelpers.h"
#include "boost/python/suite/indexing/map_indexing_suite.hpp"
#include "boost/python/suite/indexing/vector_indexing_suite.hpp"
#include "ShaderProgramVariables.pypp.hpp"

using namespace std;
namespace bp = boost::python;

boost::python::list ShaderProgramVariables_getMFVariables(OSG::ShaderProgramVariables *self)
{
   boost::python::list result;
   OSG::MFUnrecShaderValueVariablePtr const * mf_data = self->getMFVariables();
   const OSG::UInt32 size(mf_data->size32());
   for ( OSG::UInt32 i = 0; i < size; ++i )
   {
      result.append(OSG::ShaderValueVariable::ObjRecPtr((*mf_data)[i]));
   }
   return result;
}

boost::python::list ShaderProgramVariables_getMFProceduralVariables(OSG::ShaderProgramVariables *self)
{
   boost::python::list result;
   OSG::MFUnrecChildShaderProcVariablePtr const * mf_data = self->getMFProceduralVariables();
   const OSG::UInt32 size(mf_data->size32());
   for ( OSG::UInt32 i = 0; i < size; ++i )
   {
      result.append(OSG::ShaderProcVariable::ObjRecPtr((*mf_data)[i]));
   }
   return result;
}

namespace
{

void proceduralCallback(bp::object callable, OSG::DrawEnv* env, int i)
{
   callable(env, i);
}

void proceduralNodeCallback(bp::object    callable, 
                            OSG::DrawEnv *env, 
                            int           i,
                            OSG::Node    *node)
{
  callable(env, i, node);
}

bool wrapAddProceduralVariable(OSG::ShaderProgramVariables* self,
                               const OSG::Char8* name, bp::object pFunc,
                               OSG::UInt32 uiDependency,
                               OSG::MFInt32* pProcVarLoc)
{
   return self->addProceduralVariable(name,
                                      boost::bind(proceduralCallback, pFunc,
                                                  _1, _2),
                                      uiDependency, pProcVarLoc);
}

bool wrapUpdateProceduralVariable(OSG::ShaderProgramVariables* self,
                                  const OSG::Char8* name, bp::object pFunc,
                                  OSG::UInt32 uiDependency)
{
   return self->updateProceduralVariable(name,
                                         boost::bind(proceduralCallback, pFunc,
                                                     _1, _2),
                                         uiDependency);
}

bool wrapAddNodeProceduralVariable(OSG::ShaderProgramVariables* self,
                                   const OSG::Char8* name, bp::object pFunc,
                                   OSG::UInt32 uiDependency,
                                   OSG::MFInt32* pProcVarLoc)
{
   return self->addNodeProceduralVariable(name,
                                      boost::bind(proceduralNodeCallback, 
                                                  pFunc,
                                                  _1, _2, _3),
                                      uiDependency, pProcVarLoc);
}

bool wrapUpdateNodeProceduralVariable(OSG::ShaderProgramVariables* self,
                                      const OSG::Char8* name, bp::object pFunc,
                                      OSG::UInt32 uiDependency)
{
   return self->updateNodeProceduralVariable(name,
                                             boost::bind(proceduralNodeCallback, 
                                                         pFunc,
                                                         _1, _2, _3),
                                             uiDependency);
}

}

void register_ShaderProgramVariables_class(){

    { //::OSG::ShaderProgramVariables
        typedef bp::class_< OSG::ShaderProgramVariables, bp::bases< OSG::ShaderProgramVariablesBase >, OSG::ShaderProgramVariables::ObjRecPtr, boost::noncopyable > ShaderProgramVariables_exposer_t;
        ShaderProgramVariables_exposer_t ShaderProgramVariables_exposer = ShaderProgramVariables_exposer_t( "ShaderProgramVariables", bp::no_init );
        bp::scope ShaderProgramVariables_scope( ShaderProgramVariables_exposer );
        { //::OSG::ShaderProgramVariables::addOSGVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*addOSGVariable_function_type )( ::OSG::Char8 const *,::OSG::MFInt32 * ) ;
            
            ShaderProgramVariables_exposer.def( 
                "addOSGVariable"
                , addOSGVariable_function_type( &::OSG::ShaderProgramVariables::addOSGVariable )
                , ( bp::arg("name"), bp::arg("pProcVarLoc") ) );
        
        }
        { //::OSG::ShaderProgramVariables::addProceduralVariable
        
            typedef void ( ::OSG::ShaderProgramVariables::*addProceduralVariable_function_type )( ::OSG::ShaderVariable * const ) ;
            
            ShaderProgramVariables_exposer.def( 
                "addProceduralVariable"
                , addProceduralVariable_function_type( &::OSG::ShaderProgramVariables::addProceduralVariable )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::addUniformBlock
        
            typedef bool ( ::OSG::ShaderProgramVariables::*addUniformBlock_function_type )( ::OSG::Char8 const *,::OSG::UInt32,::OSG::MFInt32 *,::OSG::MFInt32 * ) ;
            
            ShaderProgramVariables_exposer.def( 
                "addUniformBlock"
                , addUniformBlock_function_type( &::OSG::ShaderProgramVariables::addUniformBlock )
                , ( bp::arg("name"), bp::arg("value"), bp::arg("pVarLoc"), bp::arg("pProcVarLoc") ) );
        
        }
        { //::OSG::ShaderProgramVariables::addUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*addUniformVariable_function_type )( ::OSG::Char8 const *,bool,::OSG::MFInt32 *,::OSG::MFInt32 * ) ;
            
            ShaderProgramVariables_exposer.def( 
                "addUniformVariable"
                , addUniformVariable_function_type( &::OSG::ShaderProgramVariables::addUniformVariable )
                , ( bp::arg("name"), bp::arg("value"), bp::arg("pVarLoc"), bp::arg("pProcVarLoc") ) );
        
        }
        { //::OSG::ShaderProgramVariables::addUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*addUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Int32,::OSG::MFInt32 *,::OSG::MFInt32 * ) ;
            
            ShaderProgramVariables_exposer.def( 
                "addUniformVariable"
                , addUniformVariable_function_type( &::OSG::ShaderProgramVariables::addUniformVariable )
                , ( bp::arg("name"), bp::arg("value"), bp::arg("pVarLoc"), bp::arg("pProcVarLoc") ) );
        
        }
        { //::OSG::ShaderProgramVariables::addUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*addUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::UInt32,::OSG::MFInt32 *,::OSG::MFInt32 * ) ;
            
            ShaderProgramVariables_exposer.def( 
                "addUniformVariable"
                , addUniformVariable_function_type( &::OSG::ShaderProgramVariables::addUniformVariable )
                , ( bp::arg("name"), bp::arg("value"), bp::arg("pVarLoc"), bp::arg("pProcVarLoc") ) );
        
        }
        { //::OSG::ShaderProgramVariables::addUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*addUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Real32,::OSG::MFInt32 *,::OSG::MFInt32 * ) ;
            
            ShaderProgramVariables_exposer.def( 
                "addUniformVariable"
                , addUniformVariable_function_type( &::OSG::ShaderProgramVariables::addUniformVariable )
                , ( bp::arg("name"), bp::arg("value"), bp::arg("pVarLoc"), bp::arg("pProcVarLoc") ) );
        
        }
        { //::OSG::ShaderProgramVariables::addUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*addUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Vec2f const &,::OSG::MFInt32 *,::OSG::MFInt32 * ) ;
            
            ShaderProgramVariables_exposer.def( 
                "addUniformVariable"
                , addUniformVariable_function_type( &::OSG::ShaderProgramVariables::addUniformVariable )
                , ( bp::arg("name"), bp::arg("value"), bp::arg("pVarLoc"), bp::arg("pProcVarLoc") ) );
        
        }
        { //::OSG::ShaderProgramVariables::addUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*addUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Vec3f const &,::OSG::MFInt32 *,::OSG::MFInt32 * ) ;
            
            ShaderProgramVariables_exposer.def( 
                "addUniformVariable"
                , addUniformVariable_function_type( &::OSG::ShaderProgramVariables::addUniformVariable )
                , ( bp::arg("name"), bp::arg("value"), bp::arg("pVarLoc"), bp::arg("pProcVarLoc") ) );
        
        }
        { //::OSG::ShaderProgramVariables::addUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*addUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Vec4f const &,::OSG::MFInt32 *,::OSG::MFInt32 * ) ;
            
            ShaderProgramVariables_exposer.def( 
                "addUniformVariable"
                , addUniformVariable_function_type( &::OSG::ShaderProgramVariables::addUniformVariable )
                , ( bp::arg("name"), bp::arg("value"), bp::arg("pVarLoc"), bp::arg("pProcVarLoc") ) );
        
        }
        { //::OSG::ShaderProgramVariables::addUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*addUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Matrix const &,::OSG::MFInt32 *,::OSG::MFInt32 * ) ;
            
            ShaderProgramVariables_exposer.def( 
                "addUniformVariable"
                , addUniformVariable_function_type( &::OSG::ShaderProgramVariables::addUniformVariable )
                , ( bp::arg("name"), bp::arg("value"), bp::arg("pVarLoc"), bp::arg("pProcVarLoc") ) );
        
        }
        { //::OSG::ShaderProgramVariables::addUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*addUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Pnt2f const &,::OSG::MFInt32 *,::OSG::MFInt32 * ) ;
            
            ShaderProgramVariables_exposer.def( 
                "addUniformVariable"
                , addUniformVariable_function_type( &::OSG::ShaderProgramVariables::addUniformVariable )
                , ( bp::arg("name"), bp::arg("value"), bp::arg("pVarLoc"), bp::arg("pProcVarLoc") ) );
        
        }
        { //::OSG::ShaderProgramVariables::addUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*addUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Pnt3f const &,::OSG::MFInt32 *,::OSG::MFInt32 * ) ;
            
            ShaderProgramVariables_exposer.def( 
                "addUniformVariable"
                , addUniformVariable_function_type( &::OSG::ShaderProgramVariables::addUniformVariable )
                , ( bp::arg("name"), bp::arg("value"), bp::arg("pVarLoc"), bp::arg("pProcVarLoc") ) );
        
        }
        { //::OSG::ShaderProgramVariables::addUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*addUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::MFInt32 const &,::OSG::MFInt32 *,::OSG::MFInt32 * ) ;
            
            ShaderProgramVariables_exposer.def( 
                "addUniformVariable"
                , addUniformVariable_function_type( &::OSG::ShaderProgramVariables::addUniformVariable )
                , ( bp::arg("name"), bp::arg("value"), bp::arg("pVarLoc"), bp::arg("pProcVarLoc") ) );
        
        }
        { //::OSG::ShaderProgramVariables::addUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*addUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::MFUInt32 const &,::OSG::MFInt32 *,::OSG::MFInt32 * ) ;
            
            ShaderProgramVariables_exposer.def( 
                "addUniformVariable"
                , addUniformVariable_function_type( &::OSG::ShaderProgramVariables::addUniformVariable )
                , ( bp::arg("name"), bp::arg("value"), bp::arg("pVarLoc"), bp::arg("pProcVarLoc") ) );
        
        }
        { //::OSG::ShaderProgramVariables::addUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*addUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::MFReal32 const &,::OSG::MFInt32 *,::OSG::MFInt32 * ) ;
            
            ShaderProgramVariables_exposer.def( 
                "addUniformVariable"
                , addUniformVariable_function_type( &::OSG::ShaderProgramVariables::addUniformVariable )
                , ( bp::arg("name"), bp::arg("value"), bp::arg("pVarLoc"), bp::arg("pProcVarLoc") ) );
        
        }
        { //::OSG::ShaderProgramVariables::addUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*addUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::MFVec2f const &,::OSG::MFInt32 *,::OSG::MFInt32 * ) ;
            
            ShaderProgramVariables_exposer.def( 
                "addUniformVariable"
                , addUniformVariable_function_type( &::OSG::ShaderProgramVariables::addUniformVariable )
                , ( bp::arg("name"), bp::arg("value"), bp::arg("pVarLoc"), bp::arg("pProcVarLoc") ) );
        
        }
        { //::OSG::ShaderProgramVariables::addUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*addUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::MFVec3f const &,::OSG::MFInt32 *,::OSG::MFInt32 * ) ;
            
            ShaderProgramVariables_exposer.def( 
                "addUniformVariable"
                , addUniformVariable_function_type( &::OSG::ShaderProgramVariables::addUniformVariable )
                , ( bp::arg("name"), bp::arg("value"), bp::arg("pVarLoc"), bp::arg("pProcVarLoc") ) );
        
        }
        { //::OSG::ShaderProgramVariables::addUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*addUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::MFVec4f const &,::OSG::MFInt32 *,::OSG::MFInt32 * ) ;
            
            ShaderProgramVariables_exposer.def( 
                "addUniformVariable"
                , addUniformVariable_function_type( &::OSG::ShaderProgramVariables::addUniformVariable )
                , ( bp::arg("name"), bp::arg("value"), bp::arg("pVarLoc"), bp::arg("pProcVarLoc") ) );
        
        }
        { //::OSG::ShaderProgramVariables::addUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*addUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::MFMatrix const &,::OSG::MFInt32 *,::OSG::MFInt32 * ) ;
            
            ShaderProgramVariables_exposer.def( 
                "addUniformVariable"
                , addUniformVariable_function_type( &::OSG::ShaderProgramVariables::addUniformVariable )
                , ( bp::arg("name"), bp::arg("value"), bp::arg("pVarLoc"), bp::arg("pProcVarLoc") ) );
        
        }
        { //::OSG::ShaderProgramVariables::addVariable
        
            typedef void ( ::OSG::ShaderProgramVariables::*addVariable_function_type )( ::OSG::ShaderVariable * const ) ;
            
            ShaderProgramVariables_exposer.def( 
                "addVariable"
                , addVariable_function_type( &::OSG::ShaderProgramVariables::addVariable )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::changed
        
            typedef void ( ::OSG::ShaderProgramVariables::*changed_function_type )( ::OSG::ConstFieldMaskArg,::OSG::UInt32,::OSG::BitVector ) ;
            
            ShaderProgramVariables_exposer.def( 
                "changed"
                , changed_function_type( &::OSG::ShaderProgramVariables::changed )
                , ( bp::arg("whichField"), bp::arg("origin"), bp::arg("details") ) );
        
        }
        { //::OSG::ShaderProgramVariables::clearProceduralVariables
        
            typedef void ( ::OSG::ShaderProgramVariables::*clearProceduralVariables_function_type )(  ) ;
            
            ShaderProgramVariables_exposer.def( 
                "clearProceduralVariables"
                , clearProceduralVariables_function_type( &::OSG::ShaderProgramVariables::clearProceduralVariables ) );
        
        }
        { //::OSG::ShaderProgramVariables::clearUniformVariables
        
            typedef void ( ::OSG::ShaderProgramVariables::*clearUniformVariables_function_type )(  ) ;
            
            ShaderProgramVariables_exposer.def( 
                "clearUniformVariables"
                , clearUniformVariables_function_type( &::OSG::ShaderProgramVariables::clearUniformVariables ) );
        
        }
        { //::OSG::ShaderProgramVariables::clearVariables
        
            typedef void ( ::OSG::ShaderProgramVariables::*clearVariables_function_type )(  ) ;
            
            ShaderProgramVariables_exposer.def( 
                "clearVariables"
                , clearVariables_function_type( &::OSG::ShaderProgramVariables::clearVariables ) );
        
        }
        { //::OSG::ShaderProgramVariables::dump
        
            typedef void ( ::OSG::ShaderProgramVariables::*dump_function_type )( ::OSG::UInt32,long unsigned int const ) const;
            
            ShaderProgramVariables_exposer.def( 
                "dump"
                , dump_function_type( &::OSG::ShaderProgramVariables::dump )
                , ( bp::arg("uiIndent")=(::OSG::UInt32)(0), bp::arg("bvFlags")=(long unsigned int const)(0) ) );
        
        }
        { //::OSG::ShaderProgramVariables::getUniformBlock
        
            typedef bool ( ::OSG::ShaderProgramVariables::*getUniformBlock_function_type )( ::OSG::Char8 const *,::OSG::UInt32 & ) ;
            
            ShaderProgramVariables_exposer.def( 
                "getUniformBlock"
                , getUniformBlock_function_type( &::OSG::ShaderProgramVariables::getUniformBlock )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::getUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*getUniformVariable_function_type )( ::OSG::Char8 const *,bool & ) ;
            
            ShaderProgramVariables_exposer.def( 
                "getUniformVariable"
                , getUniformVariable_function_type( &::OSG::ShaderProgramVariables::getUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::getUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*getUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Int32 & ) ;
            
            ShaderProgramVariables_exposer.def( 
                "getUniformVariable"
                , getUniformVariable_function_type( &::OSG::ShaderProgramVariables::getUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::getUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*getUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::UInt32 & ) ;
            
            ShaderProgramVariables_exposer.def( 
                "getUniformVariable"
                , getUniformVariable_function_type( &::OSG::ShaderProgramVariables::getUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::getUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*getUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Real32 & ) ;
            
            ShaderProgramVariables_exposer.def( 
                "getUniformVariable"
                , getUniformVariable_function_type( &::OSG::ShaderProgramVariables::getUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::getUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*getUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Vec2f & ) ;
            
            ShaderProgramVariables_exposer.def( 
                "getUniformVariable"
                , getUniformVariable_function_type( &::OSG::ShaderProgramVariables::getUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::getUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*getUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Vec3f & ) ;
            
            ShaderProgramVariables_exposer.def( 
                "getUniformVariable"
                , getUniformVariable_function_type( &::OSG::ShaderProgramVariables::getUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::getUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*getUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Vec4f & ) ;
            
            ShaderProgramVariables_exposer.def( 
                "getUniformVariable"
                , getUniformVariable_function_type( &::OSG::ShaderProgramVariables::getUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::getUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*getUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Matrix & ) ;
            
            ShaderProgramVariables_exposer.def( 
                "getUniformVariable"
                , getUniformVariable_function_type( &::OSG::ShaderProgramVariables::getUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::getUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*getUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Pnt2f & ) ;
            
            ShaderProgramVariables_exposer.def( 
                "getUniformVariable"
                , getUniformVariable_function_type( &::OSG::ShaderProgramVariables::getUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::getUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*getUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Pnt3f & ) ;
            
            ShaderProgramVariables_exposer.def( 
                "getUniformVariable"
                , getUniformVariable_function_type( &::OSG::ShaderProgramVariables::getUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::getUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*getUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::MFInt32 & ) ;
            
            ShaderProgramVariables_exposer.def( 
                "getUniformVariable"
                , getUniformVariable_function_type( &::OSG::ShaderProgramVariables::getUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::getUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*getUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::MFUInt32 & ) ;
            
            ShaderProgramVariables_exposer.def( 
                "getUniformVariable"
                , getUniformVariable_function_type( &::OSG::ShaderProgramVariables::getUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::getUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*getUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::MFReal32 & ) ;
            
            ShaderProgramVariables_exposer.def( 
                "getUniformVariable"
                , getUniformVariable_function_type( &::OSG::ShaderProgramVariables::getUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::getUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*getUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::MFVec2f & ) ;
            
            ShaderProgramVariables_exposer.def( 
                "getUniformVariable"
                , getUniformVariable_function_type( &::OSG::ShaderProgramVariables::getUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::getUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*getUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::MFVec3f & ) ;
            
            ShaderProgramVariables_exposer.def( 
                "getUniformVariable"
                , getUniformVariable_function_type( &::OSG::ShaderProgramVariables::getUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::getUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*getUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::MFVec4f & ) ;
            
            ShaderProgramVariables_exposer.def( 
                "getUniformVariable"
                , getUniformVariable_function_type( &::OSG::ShaderProgramVariables::getUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::getUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*getUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::MFMatrix & ) ;
            
            ShaderProgramVariables_exposer.def( 
                "getUniformVariable"
                , getUniformVariable_function_type( &::OSG::ShaderProgramVariables::getUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::getVariable
        
            typedef ::OSG::ShaderVariable const * ( ::OSG::ShaderProgramVariables::*getVariable_function_type )( ::OSG::Char8 const * ) const;
            
            ShaderProgramVariables_exposer.def( 
                "getVariable"
                , getVariable_function_type( &::OSG::ShaderProgramVariables::getVariable )
                , ( bp::arg("name") )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::ShaderProgramVariables::markAllChanged
        
            typedef void ( ::OSG::ShaderProgramVariables::*markAllChanged_function_type )(  ) ;
            
            ShaderProgramVariables_exposer.def( 
                "markAllChanged"
                , markAllChanged_function_type( &::OSG::ShaderProgramVariables::markAllChanged ) );
        
        }
        { //::OSG::ShaderProgramVariables::subProceduralVariable
        
            typedef void ( ::OSG::ShaderProgramVariables::*subProceduralVariable_function_type )( ::OSG::UInt32 ) ;
            
            ShaderProgramVariables_exposer.def( 
                "subProceduralVariable"
                , subProceduralVariable_function_type( &::OSG::ShaderProgramVariables::subProceduralVariable )
                , ( bp::arg("uiIndex") ) );
        
        }
        { //::OSG::ShaderProgramVariables::subUniformBlock
        
            typedef bool ( ::OSG::ShaderProgramVariables::*subUniformBlock_function_type )( ::OSG::Char8 const *,::OSG::MFInt32 *,::OSG::MFInt32 * ) ;
            
            ShaderProgramVariables_exposer.def( 
                "subUniformBlock"
                , subUniformBlock_function_type( &::OSG::ShaderProgramVariables::subUniformBlock )
                , ( bp::arg("name"), bp::arg("pVarLoc"), bp::arg("pProcVarLoc") ) );
        
        }
        { //::OSG::ShaderProgramVariables::subUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*subUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::MFInt32 *,::OSG::MFInt32 * ) ;
            
            ShaderProgramVariables_exposer.def( 
                "subUniformVariable"
                , subUniformVariable_function_type( &::OSG::ShaderProgramVariables::subUniformVariable )
                , ( bp::arg("name"), bp::arg("pVarLoc"), bp::arg("pProcVarLoc") ) );
        
        }
        { //::OSG::ShaderProgramVariables::subVariable
        
            typedef void ( ::OSG::ShaderProgramVariables::*subVariable_function_type )( ::OSG::UInt32 ) ;
            
            ShaderProgramVariables_exposer.def( 
                "subVariable"
                , subVariable_function_type( &::OSG::ShaderProgramVariables::subVariable )
                , ( bp::arg("uiIndex") ) );
        
        }
        { //::OSG::ShaderProgramVariables::updateUniformBlock
        
            typedef bool ( ::OSG::ShaderProgramVariables::*updateUniformBlock_function_type )( ::OSG::Char8 const *,::OSG::UInt32 ) ;
            
            ShaderProgramVariables_exposer.def( 
                "updateUniformBlock"
                , updateUniformBlock_function_type( &::OSG::ShaderProgramVariables::updateUniformBlock )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::updateUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*updateUniformVariable_function_type )( ::OSG::Char8 const *,bool ) ;
            
            ShaderProgramVariables_exposer.def( 
                "updateUniformVariable"
                , updateUniformVariable_function_type( &::OSG::ShaderProgramVariables::updateUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::updateUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*updateUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Int32 ) ;
            
            ShaderProgramVariables_exposer.def( 
                "updateUniformVariable"
                , updateUniformVariable_function_type( &::OSG::ShaderProgramVariables::updateUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::updateUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*updateUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::UInt32 ) ;
            
            ShaderProgramVariables_exposer.def( 
                "updateUniformVariable"
                , updateUniformVariable_function_type( &::OSG::ShaderProgramVariables::updateUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::updateUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*updateUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Real32 ) ;
            
            ShaderProgramVariables_exposer.def( 
                "updateUniformVariable"
                , updateUniformVariable_function_type( &::OSG::ShaderProgramVariables::updateUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::updateUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*updateUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Vec2f const & ) ;
            
            ShaderProgramVariables_exposer.def( 
                "updateUniformVariable"
                , updateUniformVariable_function_type( &::OSG::ShaderProgramVariables::updateUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::updateUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*updateUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Vec3f const & ) ;
            
            ShaderProgramVariables_exposer.def( 
                "updateUniformVariable"
                , updateUniformVariable_function_type( &::OSG::ShaderProgramVariables::updateUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::updateUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*updateUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Vec4f const & ) ;
            
            ShaderProgramVariables_exposer.def( 
                "updateUniformVariable"
                , updateUniformVariable_function_type( &::OSG::ShaderProgramVariables::updateUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::updateUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*updateUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Matrix const & ) ;
            
            ShaderProgramVariables_exposer.def( 
                "updateUniformVariable"
                , updateUniformVariable_function_type( &::OSG::ShaderProgramVariables::updateUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::updateUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*updateUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Pnt2f const & ) ;
            
            ShaderProgramVariables_exposer.def( 
                "updateUniformVariable"
                , updateUniformVariable_function_type( &::OSG::ShaderProgramVariables::updateUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::updateUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*updateUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Pnt3f const & ) ;
            
            ShaderProgramVariables_exposer.def( 
                "updateUniformVariable"
                , updateUniformVariable_function_type( &::OSG::ShaderProgramVariables::updateUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::updateUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*updateUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::MFInt32 const & ) ;
            
            ShaderProgramVariables_exposer.def( 
                "updateUniformVariable"
                , updateUniformVariable_function_type( &::OSG::ShaderProgramVariables::updateUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::updateUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*updateUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::MFUInt32 const & ) ;
            
            ShaderProgramVariables_exposer.def( 
                "updateUniformVariable"
                , updateUniformVariable_function_type( &::OSG::ShaderProgramVariables::updateUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::updateUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*updateUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::MFReal32 const & ) ;
            
            ShaderProgramVariables_exposer.def( 
                "updateUniformVariable"
                , updateUniformVariable_function_type( &::OSG::ShaderProgramVariables::updateUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::updateUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*updateUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::MFVec2f const & ) ;
            
            ShaderProgramVariables_exposer.def( 
                "updateUniformVariable"
                , updateUniformVariable_function_type( &::OSG::ShaderProgramVariables::updateUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::updateUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*updateUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::MFVec3f const & ) ;
            
            ShaderProgramVariables_exposer.def( 
                "updateUniformVariable"
                , updateUniformVariable_function_type( &::OSG::ShaderProgramVariables::updateUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::updateUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*updateUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::MFVec4f const & ) ;
            
            ShaderProgramVariables_exposer.def( 
                "updateUniformVariable"
                , updateUniformVariable_function_type( &::OSG::ShaderProgramVariables::updateUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgramVariables::updateUniformVariable
        
            typedef bool ( ::OSG::ShaderProgramVariables::*updateUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::MFMatrix const & ) ;
            
            ShaderProgramVariables_exposer.def( 
                "updateUniformVariable"
                , updateUniformVariable_function_type( &::OSG::ShaderProgramVariables::updateUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        ShaderProgramVariables_exposer.def("getMFVariables",ShaderProgramVariables_getMFVariables);
        ShaderProgramVariables_exposer.def("getMFProceduralVariables",ShaderProgramVariables_getMFProceduralVariables);
        pyopensg::register_transit< OSG::ShaderProgramVariables >::execute();
        bp::implicitly_convertible< OSG::ShaderProgramVariables::ObjRecPtr, OSG::ShaderProgramVariables* >();
        bp::implicitly_convertible< OSG::ShaderProgramVariables::ObjRecPtr, OSG::ShaderProgramVariables::ObjCPtr >();
        bp::implicitly_convertible< OSG::ShaderProgramVariables::ObjRecPtr, OSG::Attachment* >();
        bp::implicitly_convertible< OSG::ShaderProgramVariables::ObjRecPtr, OSG::Attachment::ObjRecPtr >();
        bp::implicitly_convertible<OSG::ShaderProgramVariables::ObjRecPtr, OSG::Attachment::ObjCPtr>();
        ShaderProgramVariables_exposer.def("addProceduralVariable", wrapAddProceduralVariable,
                  (bp::arg("name"), bp::arg("pFunc"), bp::arg("uiDependency"),
                   bp::arg("pProcVarLoc")));
        ShaderProgramVariables_exposer.def("updateProceduralVariable", wrapUpdateProceduralVariable,
                  (bp::arg("name"), bp::arg("pFunc"), bp::arg("uiDependency")));
        ShaderProgramVariables_exposer.def("addNodeProceduralVariable", wrapAddNodeProceduralVariable,
                  (bp::arg("name"), bp::arg("pFunc"), bp::arg("uiDependency"),
                   bp::arg("pProcVarLoc")));
        ShaderProgramVariables_exposer.def("updateNodeProceduralVariable", wrapUpdateNodeProceduralVariable,
                  (bp::arg("name"), bp::arg("pFunc"), bp::arg("uiDependency")));
    }

}
