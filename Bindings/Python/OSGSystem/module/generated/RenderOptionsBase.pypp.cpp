// This file has been generated by Py++.


// PyOpenSG is (C) Copyright 2005-2009 by Allen Bierbaum
//
// This file is part of PyOpenSG.
//
// PyOpenSG is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License as published by the Free
// Software Foundation; either version 2 of the License, or (at your option)
// any later version.
//
// PyOpenSG is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for
// more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

#if __GNUC__ >= 4 || __GNUC_MINOR__ >=3
#pragma GCC diagnostic warning "-Wold-style-cast"
#pragma GCC diagnostic warning "-Wunused-local-typedefs"
#pragma GCC diagnostic warning "-Wnon-virtual-dtor"
#endif
#if WIN32
#pragma warning(disable : 4267)
#pragma warning(disable : 4344)
#endif

#include "boost/python.hpp"
#include "OSGSystem_mainheader.h"
#include "OsgPtrHelpers.h"
#include "boost/python/suite/indexing/map_indexing_suite.hpp"
#include "boost/python/suite/indexing/vector_indexing_suite.hpp"
#include "RenderOptionsBase.pypp.hpp"

using namespace std;
namespace bp = boost::python;

void register_RenderOptionsBase_class(){

    { //::OSG::RenderOptionsBase
        typedef bp::class_< OSG::RenderOptionsBase, bp::bases< ::OSG::Attachment >, boost::noncopyable > RenderOptionsBase_exposer_t;
        RenderOptionsBase_exposer_t RenderOptionsBase_exposer = RenderOptionsBase_exposer_t( "RenderOptionsBase", bp::no_init );
        bp::scope RenderOptionsBase_scope( RenderOptionsBase_exposer );
        bp::scope().attr("RenderPropertiesFieldId") = (int)OSG::RenderOptionsBase::RenderPropertiesFieldId;
        bp::scope().attr("UseGLFinishFieldId") = (int)OSG::RenderOptionsBase::UseGLFinishFieldId;
        bp::scope().attr("StatisticFieldId") = (int)OSG::RenderOptionsBase::StatisticFieldId;
        bp::scope().attr("PolygonModeFieldId") = (int)OSG::RenderOptionsBase::PolygonModeFieldId;
        bp::scope().attr("TwoSidedLightingFieldId") = (int)OSG::RenderOptionsBase::TwoSidedLightingFieldId;
        bp::scope().attr("SpecTexLightingFieldId") = (int)OSG::RenderOptionsBase::SpecTexLightingFieldId;
        bp::scope().attr("SortTransFieldId") = (int)OSG::RenderOptionsBase::SortTransFieldId;
        bp::scope().attr("ZWriteTransFieldId") = (int)OSG::RenderOptionsBase::ZWriteTransFieldId;
        bp::scope().attr("LocalLightsFieldId") = (int)OSG::RenderOptionsBase::LocalLightsFieldId;
        bp::scope().attr("CorrectTwoSidedLightingFieldId") = (int)OSG::RenderOptionsBase::CorrectTwoSidedLightingFieldId;
        bp::scope().attr("OcclusionCullingFieldId") = (int)OSG::RenderOptionsBase::OcclusionCullingFieldId;
        bp::scope().attr("OcclusionCullingModeFieldId") = (int)OSG::RenderOptionsBase::OcclusionCullingModeFieldId;
        bp::scope().attr("OcclusionCullingPixelsFieldId") = (int)OSG::RenderOptionsBase::OcclusionCullingPixelsFieldId;
        bp::scope().attr("AntialiasingFieldId") = (int)OSG::RenderOptionsBase::AntialiasingFieldId;
        bp::scope().attr("AntialiasingDistanceFieldId") = (int)OSG::RenderOptionsBase::AntialiasingDistanceFieldId;
        bp::scope().attr("AntialiasingScaleFieldId") = (int)OSG::RenderOptionsBase::AntialiasingScaleFieldId;
        bp::scope().attr("AntialiasingTriggerFieldId") = (int)OSG::RenderOptionsBase::AntialiasingTriggerFieldId;
        bp::scope().attr("FrustumCullingFieldId") = (int)OSG::RenderOptionsBase::FrustumCullingFieldId;
        bp::scope().attr("BackfaceCullingFieldId") = (int)OSG::RenderOptionsBase::BackfaceCullingFieldId;
        bp::scope().attr("SmallFeatureCullingFieldId") = (int)OSG::RenderOptionsBase::SmallFeatureCullingFieldId;
        bp::scope().attr("SmallFeaturePixelsFieldId") = (int)OSG::RenderOptionsBase::SmallFeaturePixelsFieldId;
        bp::scope().attr("SmallFeatureThresholdFieldId") = (int)OSG::RenderOptionsBase::SmallFeatureThresholdFieldId;
        bp::scope().attr("FirstFrameFieldId") = (int)OSG::RenderOptionsBase::FirstFrameFieldId;
        bp::scope().attr("DepthOnlyPassFieldId") = (int)OSG::RenderOptionsBase::DepthOnlyPassFieldId;
        bp::scope().attr("LightModelAmbientFieldId") = (int)OSG::RenderOptionsBase::LightModelAmbientFieldId;
        bp::scope().attr("FogColorFieldId") = (int)OSG::RenderOptionsBase::FogColorFieldId;
        bp::scope().attr("FogRangeFieldId") = (int)OSG::RenderOptionsBase::FogRangeFieldId;
        bp::scope().attr("FogDensityFieldId") = (int)OSG::RenderOptionsBase::FogDensityFieldId;
        bp::scope().attr("FogModeFieldId") = (int)OSG::RenderOptionsBase::FogModeFieldId;
        bp::scope().attr("MultiSampleFieldId") = (int)OSG::RenderOptionsBase::MultiSampleFieldId;
        bp::scope().attr("MultiSampleFilterModeFieldId") = (int)OSG::RenderOptionsBase::MultiSampleFilterModeFieldId;
        bp::scope().attr("NextFieldId") = (int)OSG::RenderOptionsBase::NextFieldId;
        { //::OSG::RenderOptionsBase::copyFromBin
        
            typedef void ( ::OSG::RenderOptionsBase::*copyFromBin_function_type )( ::OSG::BinaryDataHandler &,::OSG::ConstFieldMaskArg ) ;
            
            RenderOptionsBase_exposer.def( 
                "copyFromBin"
                , copyFromBin_function_type( &::OSG::RenderOptionsBase::copyFromBin )
                , ( bp::arg("pMem"), bp::arg("whichField") ) );
        
        }
        { //::OSG::RenderOptionsBase::copyToBin
        
            typedef void ( ::OSG::RenderOptionsBase::*copyToBin_function_type )( ::OSG::BinaryDataHandler &,::OSG::ConstFieldMaskArg ) ;
            
            RenderOptionsBase_exposer.def( 
                "copyToBin"
                , copyToBin_function_type( &::OSG::RenderOptionsBase::copyToBin )
                , ( bp::arg("pMem"), bp::arg("whichField") ) );
        
        }
        { //::OSG::RenderOptionsBase::create
        
            typedef ::OSG::RenderOptionsTransitPtr ( *create_function_type )(  );
            
            RenderOptionsBase_exposer.def( 
                "create"
                , create_function_type( &::OSG::RenderOptionsBase::create ) );
        
        }
        { //::OSG::RenderOptionsBase::createDependent
        
            typedef ::OSG::RenderOptionsTransitPtr ( *createDependent_function_type )( ::OSG::BitVector );
            
            RenderOptionsBase_exposer.def( 
                "createDependent"
                , createDependent_function_type( &::OSG::RenderOptionsBase::createDependent )
                , ( bp::arg("bFlags") ) );
        
        }
        { //::OSG::RenderOptionsBase::createLocal
        
            typedef ::OSG::RenderOptionsTransitPtr ( *createLocal_function_type )( ::OSG::BitVector );
            
            RenderOptionsBase_exposer.def( 
                "createLocal"
                , createLocal_function_type( &::OSG::RenderOptionsBase::createLocal )
                , ( bp::arg("bFlags")=(::OSG::BitVector)(OSG::FCLocal::All) ) );
        
        }
        { //::OSG::RenderOptionsBase::getAntialiasing
        
            typedef bool ( ::OSG::RenderOptionsBase::*getAntialiasing_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getAntialiasing"
                , getAntialiasing_function_type( &::OSG::RenderOptionsBase::getAntialiasing ) );
        
        }
        { //::OSG::RenderOptionsBase::getAntialiasingDistance
        
            typedef ::OSG::Real32 ( ::OSG::RenderOptionsBase::*getAntialiasingDistance_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getAntialiasingDistance"
                , getAntialiasingDistance_function_type( &::OSG::RenderOptionsBase::getAntialiasingDistance ) );
        
        }
        { //::OSG::RenderOptionsBase::getAntialiasingScale
        
            typedef ::OSG::Real32 ( ::OSG::RenderOptionsBase::*getAntialiasingScale_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getAntialiasingScale"
                , getAntialiasingScale_function_type( &::OSG::RenderOptionsBase::getAntialiasingScale ) );
        
        }
        { //::OSG::RenderOptionsBase::getAntialiasingTrigger
        
            typedef ::OSG::UInt32 ( ::OSG::RenderOptionsBase::*getAntialiasingTrigger_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getAntialiasingTrigger"
                , getAntialiasingTrigger_function_type( &::OSG::RenderOptionsBase::getAntialiasingTrigger ) );
        
        }
        { //::OSG::RenderOptionsBase::getBackfaceCulling
        
            typedef bool ( ::OSG::RenderOptionsBase::*getBackfaceCulling_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getBackfaceCulling"
                , getBackfaceCulling_function_type( &::OSG::RenderOptionsBase::getBackfaceCulling ) );
        
        }
        { //::OSG::RenderOptionsBase::getBinSize
        
            typedef ::OSG::SizeT ( ::OSG::RenderOptionsBase::*getBinSize_function_type )( ::OSG::ConstFieldMaskArg ) ;
            
            RenderOptionsBase_exposer.def( 
                "getBinSize"
                , getBinSize_function_type( &::OSG::RenderOptionsBase::getBinSize )
                , ( bp::arg("whichField") ) );
        
        }
        { //::OSG::RenderOptionsBase::getClassGroupId
        
            typedef ::OSG::UInt16 ( *getClassGroupId_function_type )(  );
            
            RenderOptionsBase_exposer.def( 
                "getClassGroupId"
                , getClassGroupId_function_type( &::OSG::RenderOptionsBase::getClassGroupId ) );
        
        }
        { //::OSG::RenderOptionsBase::getClassType
        
            typedef ::OSG::FieldContainerType & ( *getClassType_function_type )(  );
            
            RenderOptionsBase_exposer.def( 
                "getClassType"
                , getClassType_function_type( &::OSG::RenderOptionsBase::getClassType )
                , bp::return_value_policy< bp::reference_existing_object >() );
        
        }
        { //::OSG::RenderOptionsBase::getClassTypeId
        
            typedef ::OSG::UInt32 ( *getClassTypeId_function_type )(  );
            
            RenderOptionsBase_exposer.def( 
                "getClassTypeId"
                , getClassTypeId_function_type( &::OSG::RenderOptionsBase::getClassTypeId ) );
        
        }
        { //::OSG::RenderOptionsBase::getContainerSize
        
            typedef ::OSG::UInt32 ( ::OSG::RenderOptionsBase::*getContainerSize_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getContainerSize"
                , getContainerSize_function_type( &::OSG::RenderOptionsBase::getContainerSize ) );
        
        }
        { //::OSG::RenderOptionsBase::getCorrectTwoSidedLighting
        
            typedef bool ( ::OSG::RenderOptionsBase::*getCorrectTwoSidedLighting_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getCorrectTwoSidedLighting"
                , getCorrectTwoSidedLighting_function_type( &::OSG::RenderOptionsBase::getCorrectTwoSidedLighting ) );
        
        }
        { //::OSG::RenderOptionsBase::getDepthOnlyPass
        
            typedef bool ( ::OSG::RenderOptionsBase::*getDepthOnlyPass_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getDepthOnlyPass"
                , getDepthOnlyPass_function_type( &::OSG::RenderOptionsBase::getDepthOnlyPass ) );
        
        }
        { //::OSG::RenderOptionsBase::getFirstFrame
        
            typedef bool ( ::OSG::RenderOptionsBase::*getFirstFrame_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getFirstFrame"
                , getFirstFrame_function_type( &::OSG::RenderOptionsBase::getFirstFrame ) );
        
        }
        { //::OSG::RenderOptionsBase::getFogColor
        
            typedef ::OSG::Color4f const & ( ::OSG::RenderOptionsBase::*getFogColor_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getFogColor"
                , getFogColor_function_type( &::OSG::RenderOptionsBase::getFogColor )
                , bp::return_value_policy< bp::copy_const_reference >() );
        
        }
        { //::OSG::RenderOptionsBase::getFogDensity
        
            typedef ::OSG::Real32 ( ::OSG::RenderOptionsBase::*getFogDensity_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getFogDensity"
                , getFogDensity_function_type( &::OSG::RenderOptionsBase::getFogDensity ) );
        
        }
        { //::OSG::RenderOptionsBase::getFogMode
        
            typedef ::OSG::Int32 ( ::OSG::RenderOptionsBase::*getFogMode_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getFogMode"
                , getFogMode_function_type( &::OSG::RenderOptionsBase::getFogMode ) );
        
        }
        { //::OSG::RenderOptionsBase::getFogRange
        
            typedef ::OSG::Vec2f const & ( ::OSG::RenderOptionsBase::*getFogRange_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getFogRange"
                , getFogRange_function_type( &::OSG::RenderOptionsBase::getFogRange )
                , bp::return_value_policy< bp::copy_const_reference >() );
        
        }
        { //::OSG::RenderOptionsBase::getFrustumCulling
        
            typedef bool ( ::OSG::RenderOptionsBase::*getFrustumCulling_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getFrustumCulling"
                , getFrustumCulling_function_type( &::OSG::RenderOptionsBase::getFrustumCulling ) );
        
        }
        { //::OSG::RenderOptionsBase::getLightModelAmbient
        
            typedef ::OSG::Color4f const & ( ::OSG::RenderOptionsBase::*getLightModelAmbient_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getLightModelAmbient"
                , getLightModelAmbient_function_type( &::OSG::RenderOptionsBase::getLightModelAmbient )
                , bp::return_value_policy< bp::copy_const_reference >() );
        
        }
        { //::OSG::RenderOptionsBase::getLocalLights
        
            typedef bool ( ::OSG::RenderOptionsBase::*getLocalLights_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getLocalLights"
                , getLocalLights_function_type( &::OSG::RenderOptionsBase::getLocalLights ) );
        
        }
        { //::OSG::RenderOptionsBase::getMultiSample
        
            typedef ::OSG::UInt32 ( ::OSG::RenderOptionsBase::*getMultiSample_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getMultiSample"
                , getMultiSample_function_type( &::OSG::RenderOptionsBase::getMultiSample ) );
        
        }
        { //::OSG::RenderOptionsBase::getMultiSampleFilterMode
        
            typedef ::OSG::UInt32 ( ::OSG::RenderOptionsBase::*getMultiSampleFilterMode_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getMultiSampleFilterMode"
                , getMultiSampleFilterMode_function_type( &::OSG::RenderOptionsBase::getMultiSampleFilterMode ) );
        
        }
        { //::OSG::RenderOptionsBase::getOcclusionCulling
        
            typedef bool ( ::OSG::RenderOptionsBase::*getOcclusionCulling_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getOcclusionCulling"
                , getOcclusionCulling_function_type( &::OSG::RenderOptionsBase::getOcclusionCulling ) );
        
        }
        { //::OSG::RenderOptionsBase::getOcclusionCullingMode
        
            typedef ::OSG::Int32 ( ::OSG::RenderOptionsBase::*getOcclusionCullingMode_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getOcclusionCullingMode"
                , getOcclusionCullingMode_function_type( &::OSG::RenderOptionsBase::getOcclusionCullingMode ) );
        
        }
        { //::OSG::RenderOptionsBase::getOcclusionCullingPixels
        
            typedef ::OSG::UInt32 ( ::OSG::RenderOptionsBase::*getOcclusionCullingPixels_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getOcclusionCullingPixels"
                , getOcclusionCullingPixels_function_type( &::OSG::RenderOptionsBase::getOcclusionCullingPixels ) );
        
        }
        { //::OSG::RenderOptionsBase::getPolygonMode
        
            typedef ::GLenum const & ( ::OSG::RenderOptionsBase::*getPolygonMode_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getPolygonMode"
                , getPolygonMode_function_type( &::OSG::RenderOptionsBase::getPolygonMode )
                , bp::return_value_policy< bp::return_by_value >() );
        
        }
        { //::OSG::RenderOptionsBase::getRenderProperties
        
            typedef ::OSG::MaterialMapKey const & ( ::OSG::RenderOptionsBase::*getRenderProperties_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getRenderProperties"
                , getRenderProperties_function_type( &::OSG::RenderOptionsBase::getRenderProperties )
                , bp::return_value_policy< bp::return_by_value >() );
        
        }
        { //::OSG::RenderOptionsBase::getSFAntialiasing
        
            typedef ::OSG::SFBool const * ( ::OSG::RenderOptionsBase::*getSFAntialiasing_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSFAntialiasing"
                , getSFAntialiasing_function_type( &::OSG::RenderOptionsBase::getSFAntialiasing )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getSFAntialiasingDistance
        
            typedef ::OSG::SFReal32 const * ( ::OSG::RenderOptionsBase::*getSFAntialiasingDistance_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSFAntialiasingDistance"
                , getSFAntialiasingDistance_function_type( &::OSG::RenderOptionsBase::getSFAntialiasingDistance )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getSFAntialiasingScale
        
            typedef ::OSG::SFReal32 const * ( ::OSG::RenderOptionsBase::*getSFAntialiasingScale_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSFAntialiasingScale"
                , getSFAntialiasingScale_function_type( &::OSG::RenderOptionsBase::getSFAntialiasingScale )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getSFAntialiasingTrigger
        
            typedef ::OSG::SFUInt32 const * ( ::OSG::RenderOptionsBase::*getSFAntialiasingTrigger_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSFAntialiasingTrigger"
                , getSFAntialiasingTrigger_function_type( &::OSG::RenderOptionsBase::getSFAntialiasingTrigger )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getSFBackfaceCulling
        
            typedef ::OSG::SFBool const * ( ::OSG::RenderOptionsBase::*getSFBackfaceCulling_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSFBackfaceCulling"
                , getSFBackfaceCulling_function_type( &::OSG::RenderOptionsBase::getSFBackfaceCulling )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getSFCorrectTwoSidedLighting
        
            typedef ::OSG::SFBool const * ( ::OSG::RenderOptionsBase::*getSFCorrectTwoSidedLighting_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSFCorrectTwoSidedLighting"
                , getSFCorrectTwoSidedLighting_function_type( &::OSG::RenderOptionsBase::getSFCorrectTwoSidedLighting )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getSFDepthOnlyPass
        
            typedef ::OSG::SFBool const * ( ::OSG::RenderOptionsBase::*getSFDepthOnlyPass_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSFDepthOnlyPass"
                , getSFDepthOnlyPass_function_type( &::OSG::RenderOptionsBase::getSFDepthOnlyPass )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getSFFirstFrame
        
            typedef ::OSG::SFBool const * ( ::OSG::RenderOptionsBase::*getSFFirstFrame_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSFFirstFrame"
                , getSFFirstFrame_function_type( &::OSG::RenderOptionsBase::getSFFirstFrame )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getSFFogColor
        
            typedef ::OSG::SFColor4f const * ( ::OSG::RenderOptionsBase::*getSFFogColor_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSFFogColor"
                , getSFFogColor_function_type( &::OSG::RenderOptionsBase::getSFFogColor )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getSFFogDensity
        
            typedef ::OSG::SFReal32 const * ( ::OSG::RenderOptionsBase::*getSFFogDensity_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSFFogDensity"
                , getSFFogDensity_function_type( &::OSG::RenderOptionsBase::getSFFogDensity )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getSFFogMode
        
            typedef ::OSG::SFInt32 const * ( ::OSG::RenderOptionsBase::*getSFFogMode_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSFFogMode"
                , getSFFogMode_function_type( &::OSG::RenderOptionsBase::getSFFogMode )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getSFFogRange
        
            typedef ::OSG::SFVec2f const * ( ::OSG::RenderOptionsBase::*getSFFogRange_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSFFogRange"
                , getSFFogRange_function_type( &::OSG::RenderOptionsBase::getSFFogRange )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getSFFrustumCulling
        
            typedef ::OSG::SFBool const * ( ::OSG::RenderOptionsBase::*getSFFrustumCulling_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSFFrustumCulling"
                , getSFFrustumCulling_function_type( &::OSG::RenderOptionsBase::getSFFrustumCulling )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getSFLightModelAmbient
        
            typedef ::OSG::SFColor4f const * ( ::OSG::RenderOptionsBase::*getSFLightModelAmbient_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSFLightModelAmbient"
                , getSFLightModelAmbient_function_type( &::OSG::RenderOptionsBase::getSFLightModelAmbient )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getSFLocalLights
        
            typedef ::OSG::SFBool const * ( ::OSG::RenderOptionsBase::*getSFLocalLights_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSFLocalLights"
                , getSFLocalLights_function_type( &::OSG::RenderOptionsBase::getSFLocalLights )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getSFMultiSample
        
            typedef ::OSG::SFUInt32 const * ( ::OSG::RenderOptionsBase::*getSFMultiSample_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSFMultiSample"
                , getSFMultiSample_function_type( &::OSG::RenderOptionsBase::getSFMultiSample )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getSFMultiSampleFilterMode
        
            typedef ::OSG::SFUInt32 const * ( ::OSG::RenderOptionsBase::*getSFMultiSampleFilterMode_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSFMultiSampleFilterMode"
                , getSFMultiSampleFilterMode_function_type( &::OSG::RenderOptionsBase::getSFMultiSampleFilterMode )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getSFOcclusionCulling
        
            typedef ::OSG::SFBool const * ( ::OSG::RenderOptionsBase::*getSFOcclusionCulling_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSFOcclusionCulling"
                , getSFOcclusionCulling_function_type( &::OSG::RenderOptionsBase::getSFOcclusionCulling )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getSFOcclusionCullingMode
        
            typedef ::OSG::SFInt32 const * ( ::OSG::RenderOptionsBase::*getSFOcclusionCullingMode_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSFOcclusionCullingMode"
                , getSFOcclusionCullingMode_function_type( &::OSG::RenderOptionsBase::getSFOcclusionCullingMode )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getSFOcclusionCullingPixels
        
            typedef ::OSG::SFUInt32 const * ( ::OSG::RenderOptionsBase::*getSFOcclusionCullingPixels_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSFOcclusionCullingPixels"
                , getSFOcclusionCullingPixels_function_type( &::OSG::RenderOptionsBase::getSFOcclusionCullingPixels )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getSFPolygonMode
        
            typedef ::OSG::SFGLenum const * ( ::OSG::RenderOptionsBase::*getSFPolygonMode_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSFPolygonMode"
                , getSFPolygonMode_function_type( &::OSG::RenderOptionsBase::getSFPolygonMode )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getSFRenderProperties
        
            typedef ::OSG::SFMaterialMapKey const * ( ::OSG::RenderOptionsBase::*getSFRenderProperties_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSFRenderProperties"
                , getSFRenderProperties_function_type( &::OSG::RenderOptionsBase::getSFRenderProperties )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getSFSmallFeatureCulling
        
            typedef ::OSG::SFBool const * ( ::OSG::RenderOptionsBase::*getSFSmallFeatureCulling_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSFSmallFeatureCulling"
                , getSFSmallFeatureCulling_function_type( &::OSG::RenderOptionsBase::getSFSmallFeatureCulling )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getSFSmallFeaturePixels
        
            typedef ::OSG::SFReal32 const * ( ::OSG::RenderOptionsBase::*getSFSmallFeaturePixels_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSFSmallFeaturePixels"
                , getSFSmallFeaturePixels_function_type( &::OSG::RenderOptionsBase::getSFSmallFeaturePixels )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getSFSmallFeatureThreshold
        
            typedef ::OSG::SFUInt32 const * ( ::OSG::RenderOptionsBase::*getSFSmallFeatureThreshold_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSFSmallFeatureThreshold"
                , getSFSmallFeatureThreshold_function_type( &::OSG::RenderOptionsBase::getSFSmallFeatureThreshold )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getSFSortTrans
        
            typedef ::OSG::SFBool const * ( ::OSG::RenderOptionsBase::*getSFSortTrans_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSFSortTrans"
                , getSFSortTrans_function_type( &::OSG::RenderOptionsBase::getSFSortTrans )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getSFSpecTexLighting
        
            typedef ::OSG::SFBool const * ( ::OSG::RenderOptionsBase::*getSFSpecTexLighting_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSFSpecTexLighting"
                , getSFSpecTexLighting_function_type( &::OSG::RenderOptionsBase::getSFSpecTexLighting )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getSFStatistic
        
            typedef ::OSG::SFBool const * ( ::OSG::RenderOptionsBase::*getSFStatistic_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSFStatistic"
                , getSFStatistic_function_type( &::OSG::RenderOptionsBase::getSFStatistic )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getSFTwoSidedLighting
        
            typedef ::OSG::SFBool const * ( ::OSG::RenderOptionsBase::*getSFTwoSidedLighting_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSFTwoSidedLighting"
                , getSFTwoSidedLighting_function_type( &::OSG::RenderOptionsBase::getSFTwoSidedLighting )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getSFUseGLFinish
        
            typedef ::OSG::SFBool const * ( ::OSG::RenderOptionsBase::*getSFUseGLFinish_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSFUseGLFinish"
                , getSFUseGLFinish_function_type( &::OSG::RenderOptionsBase::getSFUseGLFinish )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getSFZWriteTrans
        
            typedef ::OSG::SFBool const * ( ::OSG::RenderOptionsBase::*getSFZWriteTrans_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSFZWriteTrans"
                , getSFZWriteTrans_function_type( &::OSG::RenderOptionsBase::getSFZWriteTrans )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getSmallFeatureCulling
        
            typedef bool ( ::OSG::RenderOptionsBase::*getSmallFeatureCulling_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSmallFeatureCulling"
                , getSmallFeatureCulling_function_type( &::OSG::RenderOptionsBase::getSmallFeatureCulling ) );
        
        }
        { //::OSG::RenderOptionsBase::getSmallFeaturePixels
        
            typedef ::OSG::Real32 ( ::OSG::RenderOptionsBase::*getSmallFeaturePixels_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSmallFeaturePixels"
                , getSmallFeaturePixels_function_type( &::OSG::RenderOptionsBase::getSmallFeaturePixels ) );
        
        }
        { //::OSG::RenderOptionsBase::getSmallFeatureThreshold
        
            typedef ::OSG::UInt32 ( ::OSG::RenderOptionsBase::*getSmallFeatureThreshold_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSmallFeatureThreshold"
                , getSmallFeatureThreshold_function_type( &::OSG::RenderOptionsBase::getSmallFeatureThreshold ) );
        
        }
        { //::OSG::RenderOptionsBase::getSortTrans
        
            typedef bool ( ::OSG::RenderOptionsBase::*getSortTrans_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSortTrans"
                , getSortTrans_function_type( &::OSG::RenderOptionsBase::getSortTrans ) );
        
        }
        { //::OSG::RenderOptionsBase::getSpecTexLighting
        
            typedef bool ( ::OSG::RenderOptionsBase::*getSpecTexLighting_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getSpecTexLighting"
                , getSpecTexLighting_function_type( &::OSG::RenderOptionsBase::getSpecTexLighting ) );
        
        }
        { //::OSG::RenderOptionsBase::getStatistic
        
            typedef bool ( ::OSG::RenderOptionsBase::*getStatistic_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getStatistic"
                , getStatistic_function_type( &::OSG::RenderOptionsBase::getStatistic ) );
        
        }
        { //::OSG::RenderOptionsBase::getTwoSidedLighting
        
            typedef bool ( ::OSG::RenderOptionsBase::*getTwoSidedLighting_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getTwoSidedLighting"
                , getTwoSidedLighting_function_type( &::OSG::RenderOptionsBase::getTwoSidedLighting ) );
        
        }
        { //::OSG::RenderOptionsBase::getType
        
            typedef ::OSG::FieldContainerType & ( ::OSG::RenderOptionsBase::*getType_function_type )(  ) ;
            
            RenderOptionsBase_exposer.def( 
                "getType"
                , getType_function_type( &::OSG::RenderOptionsBase::getType )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getType
        
            typedef ::OSG::FieldContainerType const & ( ::OSG::RenderOptionsBase::*getType_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getType"
                , getType_function_type( &::OSG::RenderOptionsBase::getType )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderOptionsBase::getUseGLFinish
        
            typedef bool ( ::OSG::RenderOptionsBase::*getUseGLFinish_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getUseGLFinish"
                , getUseGLFinish_function_type( &::OSG::RenderOptionsBase::getUseGLFinish ) );
        
        }
        { //::OSG::RenderOptionsBase::getZWriteTrans
        
            typedef bool ( ::OSG::RenderOptionsBase::*getZWriteTrans_function_type )(  ) const;
            
            RenderOptionsBase_exposer.def( 
                "getZWriteTrans"
                , getZWriteTrans_function_type( &::OSG::RenderOptionsBase::getZWriteTrans ) );
        
        }
        { //::OSG::RenderOptionsBase::setAntialiasing
        
            typedef void ( ::OSG::RenderOptionsBase::*setAntialiasing_function_type )( bool const ) ;
            
            RenderOptionsBase_exposer.def( 
                "setAntialiasing"
                , setAntialiasing_function_type( &::OSG::RenderOptionsBase::setAntialiasing )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::RenderOptionsBase::setAntialiasingDistance
        
            typedef void ( ::OSG::RenderOptionsBase::*setAntialiasingDistance_function_type )( ::OSG::Real32 const ) ;
            
            RenderOptionsBase_exposer.def( 
                "setAntialiasingDistance"
                , setAntialiasingDistance_function_type( &::OSG::RenderOptionsBase::setAntialiasingDistance )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::RenderOptionsBase::setAntialiasingScale
        
            typedef void ( ::OSG::RenderOptionsBase::*setAntialiasingScale_function_type )( ::OSG::Real32 const ) ;
            
            RenderOptionsBase_exposer.def( 
                "setAntialiasingScale"
                , setAntialiasingScale_function_type( &::OSG::RenderOptionsBase::setAntialiasingScale )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::RenderOptionsBase::setAntialiasingTrigger
        
            typedef void ( ::OSG::RenderOptionsBase::*setAntialiasingTrigger_function_type )( ::OSG::UInt32 const ) ;
            
            RenderOptionsBase_exposer.def( 
                "setAntialiasingTrigger"
                , setAntialiasingTrigger_function_type( &::OSG::RenderOptionsBase::setAntialiasingTrigger )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::RenderOptionsBase::setBackfaceCulling
        
            typedef void ( ::OSG::RenderOptionsBase::*setBackfaceCulling_function_type )( bool const ) ;
            
            RenderOptionsBase_exposer.def( 
                "setBackfaceCulling"
                , setBackfaceCulling_function_type( &::OSG::RenderOptionsBase::setBackfaceCulling )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::RenderOptionsBase::setCorrectTwoSidedLighting
        
            typedef void ( ::OSG::RenderOptionsBase::*setCorrectTwoSidedLighting_function_type )( bool const ) ;
            
            RenderOptionsBase_exposer.def( 
                "setCorrectTwoSidedLighting"
                , setCorrectTwoSidedLighting_function_type( &::OSG::RenderOptionsBase::setCorrectTwoSidedLighting )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::RenderOptionsBase::setDepthOnlyPass
        
            typedef void ( ::OSG::RenderOptionsBase::*setDepthOnlyPass_function_type )( bool const ) ;
            
            RenderOptionsBase_exposer.def( 
                "setDepthOnlyPass"
                , setDepthOnlyPass_function_type( &::OSG::RenderOptionsBase::setDepthOnlyPass )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::RenderOptionsBase::setFirstFrame
        
            typedef void ( ::OSG::RenderOptionsBase::*setFirstFrame_function_type )( bool const ) ;
            
            RenderOptionsBase_exposer.def( 
                "setFirstFrame"
                , setFirstFrame_function_type( &::OSG::RenderOptionsBase::setFirstFrame )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::RenderOptionsBase::setFogColor
        
            typedef void ( ::OSG::RenderOptionsBase::*setFogColor_function_type )( ::OSG::Color4f const & ) ;
            
            RenderOptionsBase_exposer.def( 
                "setFogColor"
                , setFogColor_function_type( &::OSG::RenderOptionsBase::setFogColor )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::RenderOptionsBase::setFogDensity
        
            typedef void ( ::OSG::RenderOptionsBase::*setFogDensity_function_type )( ::OSG::Real32 const ) ;
            
            RenderOptionsBase_exposer.def( 
                "setFogDensity"
                , setFogDensity_function_type( &::OSG::RenderOptionsBase::setFogDensity )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::RenderOptionsBase::setFogMode
        
            typedef void ( ::OSG::RenderOptionsBase::*setFogMode_function_type )( ::OSG::Int32 const ) ;
            
            RenderOptionsBase_exposer.def( 
                "setFogMode"
                , setFogMode_function_type( &::OSG::RenderOptionsBase::setFogMode )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::RenderOptionsBase::setFogRange
        
            typedef void ( ::OSG::RenderOptionsBase::*setFogRange_function_type )( ::OSG::Vec2f const & ) ;
            
            RenderOptionsBase_exposer.def( 
                "setFogRange"
                , setFogRange_function_type( &::OSG::RenderOptionsBase::setFogRange )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::RenderOptionsBase::setFrustumCulling
        
            typedef void ( ::OSG::RenderOptionsBase::*setFrustumCulling_function_type )( bool const ) ;
            
            RenderOptionsBase_exposer.def( 
                "setFrustumCulling"
                , setFrustumCulling_function_type( &::OSG::RenderOptionsBase::setFrustumCulling )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::RenderOptionsBase::setLightModelAmbient
        
            typedef void ( ::OSG::RenderOptionsBase::*setLightModelAmbient_function_type )( ::OSG::Color4f const & ) ;
            
            RenderOptionsBase_exposer.def( 
                "setLightModelAmbient"
                , setLightModelAmbient_function_type( &::OSG::RenderOptionsBase::setLightModelAmbient )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::RenderOptionsBase::setLocalLights
        
            typedef void ( ::OSG::RenderOptionsBase::*setLocalLights_function_type )( bool const ) ;
            
            RenderOptionsBase_exposer.def( 
                "setLocalLights"
                , setLocalLights_function_type( &::OSG::RenderOptionsBase::setLocalLights )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::RenderOptionsBase::setMultiSample
        
            typedef void ( ::OSG::RenderOptionsBase::*setMultiSample_function_type )( ::OSG::UInt32 const ) ;
            
            RenderOptionsBase_exposer.def( 
                "setMultiSample"
                , setMultiSample_function_type( &::OSG::RenderOptionsBase::setMultiSample )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::RenderOptionsBase::setMultiSampleFilterMode
        
            typedef void ( ::OSG::RenderOptionsBase::*setMultiSampleFilterMode_function_type )( ::OSG::UInt32 const ) ;
            
            RenderOptionsBase_exposer.def( 
                "setMultiSampleFilterMode"
                , setMultiSampleFilterMode_function_type( &::OSG::RenderOptionsBase::setMultiSampleFilterMode )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::RenderOptionsBase::setOcclusionCulling
        
            typedef void ( ::OSG::RenderOptionsBase::*setOcclusionCulling_function_type )( bool const ) ;
            
            RenderOptionsBase_exposer.def( 
                "setOcclusionCulling"
                , setOcclusionCulling_function_type( &::OSG::RenderOptionsBase::setOcclusionCulling )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::RenderOptionsBase::setOcclusionCullingMode
        
            typedef void ( ::OSG::RenderOptionsBase::*setOcclusionCullingMode_function_type )( ::OSG::Int32 const ) ;
            
            RenderOptionsBase_exposer.def( 
                "setOcclusionCullingMode"
                , setOcclusionCullingMode_function_type( &::OSG::RenderOptionsBase::setOcclusionCullingMode )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::RenderOptionsBase::setOcclusionCullingPixels
        
            typedef void ( ::OSG::RenderOptionsBase::*setOcclusionCullingPixels_function_type )( ::OSG::UInt32 const ) ;
            
            RenderOptionsBase_exposer.def( 
                "setOcclusionCullingPixels"
                , setOcclusionCullingPixels_function_type( &::OSG::RenderOptionsBase::setOcclusionCullingPixels )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::RenderOptionsBase::setPolygonMode
        
            typedef void ( ::OSG::RenderOptionsBase::*setPolygonMode_function_type )( ::GLenum const & ) ;
            
            RenderOptionsBase_exposer.def( 
                "setPolygonMode"
                , setPolygonMode_function_type( &::OSG::RenderOptionsBase::setPolygonMode )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::RenderOptionsBase::setRenderProperties
        
            typedef void ( ::OSG::RenderOptionsBase::*setRenderProperties_function_type )( ::OSG::MaterialMapKey const & ) ;
            
            RenderOptionsBase_exposer.def( 
                "setRenderProperties"
                , setRenderProperties_function_type( &::OSG::RenderOptionsBase::setRenderProperties )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::RenderOptionsBase::setSmallFeatureCulling
        
            typedef void ( ::OSG::RenderOptionsBase::*setSmallFeatureCulling_function_type )( bool const ) ;
            
            RenderOptionsBase_exposer.def( 
                "setSmallFeatureCulling"
                , setSmallFeatureCulling_function_type( &::OSG::RenderOptionsBase::setSmallFeatureCulling )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::RenderOptionsBase::setSmallFeaturePixels
        
            typedef void ( ::OSG::RenderOptionsBase::*setSmallFeaturePixels_function_type )( ::OSG::Real32 const ) ;
            
            RenderOptionsBase_exposer.def( 
                "setSmallFeaturePixels"
                , setSmallFeaturePixels_function_type( &::OSG::RenderOptionsBase::setSmallFeaturePixels )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::RenderOptionsBase::setSmallFeatureThreshold
        
            typedef void ( ::OSG::RenderOptionsBase::*setSmallFeatureThreshold_function_type )( ::OSG::UInt32 const ) ;
            
            RenderOptionsBase_exposer.def( 
                "setSmallFeatureThreshold"
                , setSmallFeatureThreshold_function_type( &::OSG::RenderOptionsBase::setSmallFeatureThreshold )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::RenderOptionsBase::setSortTrans
        
            typedef void ( ::OSG::RenderOptionsBase::*setSortTrans_function_type )( bool const ) ;
            
            RenderOptionsBase_exposer.def( 
                "setSortTrans"
                , setSortTrans_function_type( &::OSG::RenderOptionsBase::setSortTrans )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::RenderOptionsBase::setSpecTexLighting
        
            typedef void ( ::OSG::RenderOptionsBase::*setSpecTexLighting_function_type )( bool const ) ;
            
            RenderOptionsBase_exposer.def( 
                "setSpecTexLighting"
                , setSpecTexLighting_function_type( &::OSG::RenderOptionsBase::setSpecTexLighting )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::RenderOptionsBase::setStatistic
        
            typedef void ( ::OSG::RenderOptionsBase::*setStatistic_function_type )( bool const ) ;
            
            RenderOptionsBase_exposer.def( 
                "setStatistic"
                , setStatistic_function_type( &::OSG::RenderOptionsBase::setStatistic )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::RenderOptionsBase::setTwoSidedLighting
        
            typedef void ( ::OSG::RenderOptionsBase::*setTwoSidedLighting_function_type )( bool const ) ;
            
            RenderOptionsBase_exposer.def( 
                "setTwoSidedLighting"
                , setTwoSidedLighting_function_type( &::OSG::RenderOptionsBase::setTwoSidedLighting )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::RenderOptionsBase::setUseGLFinish
        
            typedef void ( ::OSG::RenderOptionsBase::*setUseGLFinish_function_type )( bool const ) ;
            
            RenderOptionsBase_exposer.def( 
                "setUseGLFinish"
                , setUseGLFinish_function_type( &::OSG::RenderOptionsBase::setUseGLFinish )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::RenderOptionsBase::setZWriteTrans
        
            typedef void ( ::OSG::RenderOptionsBase::*setZWriteTrans_function_type )( bool const ) ;
            
            RenderOptionsBase_exposer.def( 
                "setZWriteTrans"
                , setZWriteTrans_function_type( &::OSG::RenderOptionsBase::setZWriteTrans )
                , ( bp::arg("value") ) );
        
        }
        RenderOptionsBase_exposer.staticmethod( "create" );
        RenderOptionsBase_exposer.staticmethod( "createDependent" );
        RenderOptionsBase_exposer.staticmethod( "createLocal" );
        RenderOptionsBase_exposer.staticmethod( "getClassGroupId" );
        RenderOptionsBase_exposer.staticmethod( "getClassType" );
        RenderOptionsBase_exposer.staticmethod( "getClassTypeId" );
    }

}
