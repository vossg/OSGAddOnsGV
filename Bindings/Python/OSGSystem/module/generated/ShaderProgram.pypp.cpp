// This file has been generated by Py++.


// PyOpenSG is (C) Copyright 2005-2009 by Allen Bierbaum
//
// This file is part of PyOpenSG.
//
// PyOpenSG is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License as published by the Free
// Software Foundation; either version 2 of the License, or (at your option)
// any later version.
//
// PyOpenSG is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for
// more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

#if __GNUC__ >= 4 || __GNUC_MINOR__ >=3
#pragma GCC diagnostic warning "-Wold-style-cast"
#pragma GCC diagnostic warning "-Wunused-local-typedefs"
#endif
#if WIN32
#pragma warning(disable : 4267)
#pragma warning(disable : 4344)
#endif

#include "boost/python.hpp"
#include "__call_policies.pypp.hpp"
#include "__convenience.pypp.hpp"
#include "OSGSystem_mainheader.h"
#include "OsgPtrHelpers.h"
#include "boost/python/suite/indexing/map_indexing_suite.hpp"
#include "boost/python/suite/indexing/vector_indexing_suite.hpp"
#include "ShaderProgram.pypp.hpp"

using namespace std;
namespace bp = boost::python;

static boost::python::tuple getUniformVariable_e9f1bba501ea24b5e106b3d74bfd9411( ::OSG::ShaderProgram & inst, ::OSG::Char8 const * name ){
    OSG::Point<float, 3u> value2;
    bool result = inst.getUniformVariable(name, value2);
    return bp::make_tuple( result, value2 );
}

static boost::python::tuple getUniformVariable_65fae7f9bc7da8374cd39dea578ccbc7( ::OSG::ShaderProgram & inst, ::OSG::Char8 const * name ){
    OSG::Point<float, 2u> value2;
    bool result = inst.getUniformVariable(name, value2);
    return bp::make_tuple( result, value2 );
}

static boost::python::tuple getUniformVariable_20e4e9bfa5996ba2226bbc243054ac0a( ::OSG::ShaderProgram & inst, ::OSG::Char8 const * name ){
    OSG::TransformationMatrix<float> value2;
    bool result = inst.getUniformVariable(name, value2);
    return bp::make_tuple( result, value2 );
}

static boost::python::tuple getUniformVariable_6b17ed159890613d655647b5cb637006( ::OSG::ShaderProgram & inst, ::OSG::Char8 const * name ){
    OSG::Vector<float, 4u> value2;
    bool result = inst.getUniformVariable(name, value2);
    return bp::make_tuple( result, value2 );
}

static boost::python::tuple getUniformVariable_85052dfdc1be838a1010e1c2882b512b( ::OSG::ShaderProgram & inst, ::OSG::Char8 const * name ){
    OSG::Vector<float, 3u> value2;
    bool result = inst.getUniformVariable(name, value2);
    return bp::make_tuple( result, value2 );
}

static boost::python::tuple getUniformVariable_bba16fab072ecb20158cdf1adc74df6c( ::OSG::ShaderProgram & inst, ::OSG::Char8 const * name ){
    OSG::Vector<float, 2u> value2;
    bool result = inst.getUniformVariable(name, value2);
    return bp::make_tuple( result, value2 );
}

static boost::python::tuple getUniformVariable_43ff17258b6060a3b8161a2f1b69f852( ::OSG::ShaderProgram & inst, ::OSG::Char8 const * name ){
    float value2;
    bool result = inst.getUniformVariable(name, value2);
    return bp::make_tuple( result, value2 );
}

static boost::python::tuple getUniformVariable_1e43e776cb58c77a2f8b535749245c50( ::OSG::ShaderProgram & inst, ::OSG::Char8 const * name ){
    int value2;
    bool result = inst.getUniformVariable(name, value2);
    return bp::make_tuple( result, value2 );
}

static boost::python::tuple getUniformVariable_d4d0862ecaf7088b81409c965d1f7a2c( ::OSG::ShaderProgram & inst, ::OSG::Char8 const * name ){
    bool value2;
    bool result = inst.getUniformVariable(name, value2);
    return bp::make_tuple( result, value2 );
}

namespace
{

void destroyedCallback(bp::object callable, OSG::FieldContainer* fc,
                       const OSG::UInt64 i)
{
   callable(fc, i);
}

void wrapAddDestroyedFunctor(OSG::ShaderProgram* self, bp::object func,
                             const std::string& createSymbol)
{
   self->addDestroyedFunctor(boost::bind(destroyedCallback, func, _1, _2),
                             createSymbol);
}

}

namespace
{

void proceduralCallback(bp::object callable, OSG::DrawEnv* env, int i)
{
   callable(env, i);
}

void proceduralNodeCallback(bp::object    callable, 
                            OSG::DrawEnv *env, 
                            int           i,
                            OSG::Node    *node)
{
    callable(env, i, node);
}

bool
wrapAddProceduralVariable(
   OSG::ShaderProgram* self, const OSG::Char8* name, bp::object pFunc,
   OSG::UInt32 uiDependency = OSG::ShaderProcVariable::SHDObject
)
{
   return self->addProceduralVariable(name,
                                      boost::bind(proceduralCallback, pFunc,
                                                  _1, _2),
                                      uiDependency);
}

bool
wrapUpdateProceduralVariable(
   OSG::ShaderProgram* self, const OSG::Char8* name, bp::object pFunc,
   OSG::UInt32 uiDependency = OSG::ShaderProcVariable::SHDObject
)
{
   return self->updateProceduralVariable(name,
                                         boost::bind(proceduralCallback, pFunc,
                                                     _1, _2),
                                         uiDependency);
}

bool
wrapAddNodeProceduralVariable(
   OSG::ShaderProgram* self, const OSG::Char8* name, bp::object pFunc,
   OSG::UInt32 uiDependency = OSG::ShaderProcVariable::SHDObject
)
{
   return self->addNodeProceduralVariable(name,
                                          boost::bind(proceduralNodeCallback, 
                                                      pFunc,
                                                      _1, _2, _3),
                                      uiDependency);
}

bool
wrapUpdateNodeProceduralVariable(
   OSG::ShaderProgram* self, const OSG::Char8* name, bp::object pFunc,
   OSG::UInt32 uiDependency = OSG::ShaderProcVariable::SHDObject
)
{
   return self->updateNodeProceduralVariable(name,
                                         boost::bind(proceduralNodeCallback, 
                                                     pFunc,
                                                     _1, _2, _3),
                                         uiDependency);
}

}

void register_ShaderProgram_class(){

    { //::OSG::ShaderProgram
        typedef bp::class_< OSG::ShaderProgram, bp::bases< OSG::ShaderProgramBase >, OSG::ShaderProgram::ObjRecPtr, boost::noncopyable > ShaderProgram_exposer_t;
        ShaderProgram_exposer_t ShaderProgram_exposer = ShaderProgram_exposer_t( "ShaderProgram", bp::no_init );
        bp::scope ShaderProgram_scope( ShaderProgram_exposer );
        { //::OSG::ShaderProgram::accumulateFeedback
        
            typedef void ( ::OSG::ShaderProgram::*accumulateFeedback_function_type )( ::OSG::DrawEnv *,::OSG::UInt32,::std::vector< const OSG::Char8* > &,::OSG::UInt32 & ) ;
            
            ShaderProgram_exposer.def( 
                "accumulateFeedback"
                , accumulateFeedback_function_type( &::OSG::ShaderProgram::accumulateFeedback )
                , ( bp::arg("pEnv"), bp::arg("uiProgram"), bp::arg("vTFVaryings"), bp::arg("uiVaryingBufferIndex") ) );
        
        }
        { //::OSG::ShaderProgram::addOSGVariable
        
            typedef bool ( ::OSG::ShaderProgram::*addOSGVariable_function_type )( ::OSG::Char8 const * ) ;
            
            ShaderProgram_exposer.def( 
                "addOSGVariable"
                , addOSGVariable_function_type( &::OSG::ShaderProgram::addOSGVariable )
                , ( bp::arg("name") ) );
        
        }
        { //::OSG::ShaderProgram::addParent
        
            typedef void ( ::OSG::ShaderProgram::*addParent_function_type )( ::OSG::FieldContainer * const,::OSG::UInt16 ) ;
            
            ShaderProgram_exposer.def( 
                "addParent"
                , addParent_function_type( &::OSG::ShaderProgram::addParent )
                , ( bp::arg("pParent"), bp::arg("uiParentFieldId") ) );
        
        }
        { //::OSG::ShaderProgram::addUniformBlock
        
            typedef bool ( ::OSG::ShaderProgram::*addUniformBlock_function_type )( ::OSG::Char8 const *,::OSG::UInt32 ) ;
            
            ShaderProgram_exposer.def( 
                "addUniformBlock"
                , addUniformBlock_function_type( &::OSG::ShaderProgram::addUniformBlock )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgram::addUniformVariable
        
            typedef bool ( ::OSG::ShaderProgram::*addUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Pnt3f const & ) ;
            
            ShaderProgram_exposer.def( 
                "addUniformVariable"
                , addUniformVariable_function_type( &::OSG::ShaderProgram::addUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgram::addUniformVariable
        
            typedef bool ( ::OSG::ShaderProgram::*addUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Pnt2f const & ) ;
            
            ShaderProgram_exposer.def( 
                "addUniformVariable"
                , addUniformVariable_function_type( &::OSG::ShaderProgram::addUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgram::addUniformVariable
        
            typedef bool ( ::OSG::ShaderProgram::*addUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Matrix const & ) ;
            
            ShaderProgram_exposer.def( 
                "addUniformVariable"
                , addUniformVariable_function_type( &::OSG::ShaderProgram::addUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgram::addUniformVariable
        
            typedef bool ( ::OSG::ShaderProgram::*addUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Vec4f const & ) ;
            
            ShaderProgram_exposer.def( 
                "addUniformVariable"
                , addUniformVariable_function_type( &::OSG::ShaderProgram::addUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgram::addUniformVariable
        
            typedef bool ( ::OSG::ShaderProgram::*addUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Vec3f const & ) ;
            
            ShaderProgram_exposer.def( 
                "addUniformVariable"
                , addUniformVariable_function_type( &::OSG::ShaderProgram::addUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgram::addUniformVariable
        
            typedef bool ( ::OSG::ShaderProgram::*addUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Vec2f const & ) ;
            
            ShaderProgram_exposer.def( 
                "addUniformVariable"
                , addUniformVariable_function_type( &::OSG::ShaderProgram::addUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgram::addUniformVariable
        
            typedef bool ( ::OSG::ShaderProgram::*addUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Real32 const & ) ;
            
            ShaderProgram_exposer.def( 
                "addUniformVariable"
                , addUniformVariable_function_type( &::OSG::ShaderProgram::addUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgram::addUniformVariable
        
            typedef bool ( ::OSG::ShaderProgram::*addUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Int32 const & ) ;
            
            ShaderProgram_exposer.def( 
                "addUniformVariable"
                , addUniformVariable_function_type( &::OSG::ShaderProgram::addUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgram::addUniformVariable
        
            typedef bool ( ::OSG::ShaderProgram::*addUniformVariable_function_type )( ::OSG::Char8 const *,bool const & ) ;
            
            ShaderProgram_exposer.def( 
                "addUniformVariable"
                , addUniformVariable_function_type( &::OSG::ShaderProgram::addUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgram::changed
        
            typedef void ( ::OSG::ShaderProgram::*changed_function_type )( ::OSG::ConstFieldMaskArg,::OSG::UInt32,::OSG::BitVector ) ;
            
            ShaderProgram_exposer.def( 
                "changed"
                , changed_function_type( &::OSG::ShaderProgram::changed )
                , ( bp::arg("whichField"), bp::arg("origin"), bp::arg("details") ) );
        
        }
        { //::OSG::ShaderProgram::clearDestroyedFunctors
        
            typedef void ( ::OSG::ShaderProgram::*clearDestroyedFunctors_function_type )(  ) ;
            
            ShaderProgram_exposer.def( 
                "clearDestroyedFunctors"
                , clearDestroyedFunctors_function_type( &::OSG::ShaderProgram::clearDestroyedFunctors ) );
        
        }
        { //::OSG::ShaderProgram::clearUniformVariables
        
            typedef void ( ::OSG::ShaderProgram::*clearUniformVariables_function_type )(  ) ;
            
            ShaderProgram_exposer.def( 
                "clearUniformVariables"
                , clearUniformVariables_function_type( &::OSG::ShaderProgram::clearUniformVariables ) );
        
        }
        { //::OSG::ShaderProgram::createDefaulAttribMapping
        
            typedef void ( ::OSG::ShaderProgram::*createDefaulAttribMapping_function_type )(  ) ;
            
            ShaderProgram_exposer.def( 
                "createDefaulAttribMapping"
                , createDefaulAttribMapping_function_type( &::OSG::ShaderProgram::createDefaulAttribMapping ) );
        
        }
        { //::OSG::ShaderProgram::createFragmentShader
        
            typedef ::OSG::ShaderProgramTransitPtr ( *createFragmentShader_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "createFragmentShader"
                , createFragmentShader_function_type( &::OSG::ShaderProgram::createFragmentShader ) );
        
        }
        { //::OSG::ShaderProgram::createGeometryShader
        
            typedef ::OSG::ShaderProgramTransitPtr ( *createGeometryShader_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "createGeometryShader"
                , createGeometryShader_function_type( &::OSG::ShaderProgram::createGeometryShader ) );
        
        }
        { //::OSG::ShaderProgram::createVertexShader
        
            typedef ::OSG::ShaderProgramTransitPtr ( *createVertexShader_function_type )( bool );
            
            ShaderProgram_exposer.def( 
                "createVertexShader"
                , createVertexShader_function_type( &::OSG::ShaderProgram::createVertexShader )
                , ( bp::arg("bCreateDefAttribMap")=(bool)(false) ) );
        
        }
        { //::OSG::ShaderProgram::dump
        
            typedef void ( ::OSG::ShaderProgram::*dump_function_type )( ::OSG::UInt32,long unsigned int const ) const;
            
            ShaderProgram_exposer.def( 
                "dump"
                , dump_function_type( &::OSG::ShaderProgram::dump )
                , ( bp::arg("uiIndent")=(::OSG::UInt32)(0), bp::arg("bvFlags")=(long unsigned int const)(0) ) );
        
        }
        { //::OSG::ShaderProgram::getExtIdCgShader
        
            typedef ::OSG::UInt32 ( *getExtIdCgShader_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getExtIdCgShader"
                , getExtIdCgShader_function_type( &::OSG::ShaderProgram::getExtIdCgShader ) );
        
        }
        { //::OSG::ShaderProgram::getExtIdGPUShader4
        
            typedef ::OSG::UInt32 ( *getExtIdGPUShader4_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getExtIdGPUShader4"
                , getExtIdGPUShader4_function_type( &::OSG::ShaderProgram::getExtIdGPUShader4 ) );
        
        }
        { //::OSG::ShaderProgram::getExtIdGeometryShader4
        
            typedef ::OSG::UInt32 ( *getExtIdGeometryShader4_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getExtIdGeometryShader4"
                , getExtIdGeometryShader4_function_type( &::OSG::ShaderProgram::getExtIdGeometryShader4 ) );
        
        }
        { //::OSG::ShaderProgram::getExtIdSHL
        
            typedef ::OSG::UInt32 ( *getExtIdSHL_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getExtIdSHL"
                , getExtIdSHL_function_type( &::OSG::ShaderProgram::getExtIdSHL ) );
        
        }
        { //::OSG::ShaderProgram::getExtIdTransformFeedback2
        
            typedef ::OSG::UInt32 ( *getExtIdTransformFeedback2_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getExtIdTransformFeedback2"
                , getExtIdTransformFeedback2_function_type( &::OSG::ShaderProgram::getExtIdTransformFeedback2 ) );
        
        }
        { //::OSG::ShaderProgram::getExtIdUniformBufferObject
        
            typedef ::OSG::UInt32 ( *getExtIdUniformBufferObject_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getExtIdUniformBufferObject"
                , getExtIdUniformBufferObject_function_type( &::OSG::ShaderProgram::getExtIdUniformBufferObject ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdAttachShader
        
            typedef ::OSG::UInt32 ( *getFuncIdAttachShader_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdAttachShader"
                , getFuncIdAttachShader_function_type( &::OSG::ShaderProgram::getFuncIdAttachShader ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdBeginTransformFeedback
        
            typedef ::OSG::UInt32 ( *getFuncIdBeginTransformFeedback_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdBeginTransformFeedback"
                , getFuncIdBeginTransformFeedback_function_type( &::OSG::ShaderProgram::getFuncIdBeginTransformFeedback ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdBindAttribLocation
        
            typedef ::OSG::UInt32 ( *getFuncIdBindAttribLocation_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdBindAttribLocation"
                , getFuncIdBindAttribLocation_function_type( &::OSG::ShaderProgram::getFuncIdBindAttribLocation ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdBindBufferBase
        
            typedef ::OSG::UInt32 ( *getFuncIdBindBufferBase_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdBindBufferBase"
                , getFuncIdBindBufferBase_function_type( &::OSG::ShaderProgram::getFuncIdBindBufferBase ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdCompileShader
        
            typedef ::OSG::UInt32 ( *getFuncIdCompileShader_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdCompileShader"
                , getFuncIdCompileShader_function_type( &::OSG::ShaderProgram::getFuncIdCompileShader ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdCreateProgram
        
            typedef ::OSG::UInt32 ( *getFuncIdCreateProgram_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdCreateProgram"
                , getFuncIdCreateProgram_function_type( &::OSG::ShaderProgram::getFuncIdCreateProgram ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdCreateShader
        
            typedef ::OSG::UInt32 ( *getFuncIdCreateShader_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdCreateShader"
                , getFuncIdCreateShader_function_type( &::OSG::ShaderProgram::getFuncIdCreateShader ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdDeleteProgram
        
            typedef ::OSG::UInt32 ( *getFuncIdDeleteProgram_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdDeleteProgram"
                , getFuncIdDeleteProgram_function_type( &::OSG::ShaderProgram::getFuncIdDeleteProgram ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdDeleteShader
        
            typedef ::OSG::UInt32 ( *getFuncIdDeleteShader_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdDeleteShader"
                , getFuncIdDeleteShader_function_type( &::OSG::ShaderProgram::getFuncIdDeleteShader ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdEndTransformFeedback
        
            typedef ::OSG::UInt32 ( *getFuncIdEndTransformFeedback_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdEndTransformFeedback"
                , getFuncIdEndTransformFeedback_function_type( &::OSG::ShaderProgram::getFuncIdEndTransformFeedback ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdGetProgramInfoLog
        
            typedef ::OSG::UInt32 ( *getFuncIdGetProgramInfoLog_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdGetProgramInfoLog"
                , getFuncIdGetProgramInfoLog_function_type( &::OSG::ShaderProgram::getFuncIdGetProgramInfoLog ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdGetProgramiv
        
            typedef ::OSG::UInt32 ( *getFuncIdGetProgramiv_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdGetProgramiv"
                , getFuncIdGetProgramiv_function_type( &::OSG::ShaderProgram::getFuncIdGetProgramiv ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdGetShaderInfoLog
        
            typedef ::OSG::UInt32 ( *getFuncIdGetShaderInfoLog_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdGetShaderInfoLog"
                , getFuncIdGetShaderInfoLog_function_type( &::OSG::ShaderProgram::getFuncIdGetShaderInfoLog ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdGetShaderiv
        
            typedef ::OSG::UInt32 ( *getFuncIdGetShaderiv_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdGetShaderiv"
                , getFuncIdGetShaderiv_function_type( &::OSG::ShaderProgram::getFuncIdGetShaderiv ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdGetUniformBlockIndex
        
            typedef ::OSG::UInt32 ( *getFuncIdGetUniformBlockIndex_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdGetUniformBlockIndex"
                , getFuncIdGetUniformBlockIndex_function_type( &::OSG::ShaderProgram::getFuncIdGetUniformBlockIndex ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdGetUniformLocation
        
            typedef ::OSG::UInt32 ( *getFuncIdGetUniformLocation_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdGetUniformLocation"
                , getFuncIdGetUniformLocation_function_type( &::OSG::ShaderProgram::getFuncIdGetUniformLocation ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdGetUniformfv
        
            typedef ::OSG::UInt32 ( *getFuncIdGetUniformfv_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdGetUniformfv"
                , getFuncIdGetUniformfv_function_type( &::OSG::ShaderProgram::getFuncIdGetUniformfv ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdGetUniformiv
        
            typedef ::OSG::UInt32 ( *getFuncIdGetUniformiv_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdGetUniformiv"
                , getFuncIdGetUniformiv_function_type( &::OSG::ShaderProgram::getFuncIdGetUniformiv ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdLinkProgram
        
            typedef ::OSG::UInt32 ( *getFuncIdLinkProgram_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdLinkProgram"
                , getFuncIdLinkProgram_function_type( &::OSG::ShaderProgram::getFuncIdLinkProgram ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdPauseTransformFeedback
        
            typedef ::OSG::UInt32 ( *getFuncIdPauseTransformFeedback_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdPauseTransformFeedback"
                , getFuncIdPauseTransformFeedback_function_type( &::OSG::ShaderProgram::getFuncIdPauseTransformFeedback ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdProgramParameteri
        
            typedef ::OSG::UInt32 ( *getFuncIdProgramParameteri_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdProgramParameteri"
                , getFuncIdProgramParameteri_function_type( &::OSG::ShaderProgram::getFuncIdProgramParameteri ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdResumeTransformFeedback
        
            typedef ::OSG::UInt32 ( *getFuncIdResumeTransformFeedback_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdResumeTransformFeedback"
                , getFuncIdResumeTransformFeedback_function_type( &::OSG::ShaderProgram::getFuncIdResumeTransformFeedback ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdShaderSource
        
            typedef ::OSG::UInt32 ( *getFuncIdShaderSource_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdShaderSource"
                , getFuncIdShaderSource_function_type( &::OSG::ShaderProgram::getFuncIdShaderSource ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdTransformFeedbackVaryings
        
            typedef ::OSG::UInt32 ( *getFuncIdTransformFeedbackVaryings_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdTransformFeedbackVaryings"
                , getFuncIdTransformFeedbackVaryings_function_type( &::OSG::ShaderProgram::getFuncIdTransformFeedbackVaryings ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdUniform1f
        
            typedef ::OSG::UInt32 ( *getFuncIdUniform1f_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdUniform1f"
                , getFuncIdUniform1f_function_type( &::OSG::ShaderProgram::getFuncIdUniform1f ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdUniform1fv
        
            typedef ::OSG::UInt32 ( *getFuncIdUniform1fv_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdUniform1fv"
                , getFuncIdUniform1fv_function_type( &::OSG::ShaderProgram::getFuncIdUniform1fv ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdUniform1i
        
            typedef ::OSG::UInt32 ( *getFuncIdUniform1i_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdUniform1i"
                , getFuncIdUniform1i_function_type( &::OSG::ShaderProgram::getFuncIdUniform1i ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdUniform1iv
        
            typedef ::OSG::UInt32 ( *getFuncIdUniform1iv_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdUniform1iv"
                , getFuncIdUniform1iv_function_type( &::OSG::ShaderProgram::getFuncIdUniform1iv ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdUniform1ui
        
            typedef ::OSG::UInt32 ( *getFuncIdUniform1ui_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdUniform1ui"
                , getFuncIdUniform1ui_function_type( &::OSG::ShaderProgram::getFuncIdUniform1ui ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdUniform1uiv
        
            typedef ::OSG::UInt32 ( *getFuncIdUniform1uiv_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdUniform1uiv"
                , getFuncIdUniform1uiv_function_type( &::OSG::ShaderProgram::getFuncIdUniform1uiv ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdUniform2f
        
            typedef ::OSG::UInt32 ( *getFuncIdUniform2f_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdUniform2f"
                , getFuncIdUniform2f_function_type( &::OSG::ShaderProgram::getFuncIdUniform2f ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdUniform2fv
        
            typedef ::OSG::UInt32 ( *getFuncIdUniform2fv_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdUniform2fv"
                , getFuncIdUniform2fv_function_type( &::OSG::ShaderProgram::getFuncIdUniform2fv ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdUniform2i
        
            typedef ::OSG::UInt32 ( *getFuncIdUniform2i_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdUniform2i"
                , getFuncIdUniform2i_function_type( &::OSG::ShaderProgram::getFuncIdUniform2i ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdUniform2iv
        
            typedef ::OSG::UInt32 ( *getFuncIdUniform2iv_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdUniform2iv"
                , getFuncIdUniform2iv_function_type( &::OSG::ShaderProgram::getFuncIdUniform2iv ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdUniform2ui
        
            typedef ::OSG::UInt32 ( *getFuncIdUniform2ui_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdUniform2ui"
                , getFuncIdUniform2ui_function_type( &::OSG::ShaderProgram::getFuncIdUniform2ui ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdUniform2uiv
        
            typedef ::OSG::UInt32 ( *getFuncIdUniform2uiv_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdUniform2uiv"
                , getFuncIdUniform2uiv_function_type( &::OSG::ShaderProgram::getFuncIdUniform2uiv ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdUniform3f
        
            typedef ::OSG::UInt32 ( *getFuncIdUniform3f_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdUniform3f"
                , getFuncIdUniform3f_function_type( &::OSG::ShaderProgram::getFuncIdUniform3f ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdUniform3fv
        
            typedef ::OSG::UInt32 ( *getFuncIdUniform3fv_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdUniform3fv"
                , getFuncIdUniform3fv_function_type( &::OSG::ShaderProgram::getFuncIdUniform3fv ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdUniform3i
        
            typedef ::OSG::UInt32 ( *getFuncIdUniform3i_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdUniform3i"
                , getFuncIdUniform3i_function_type( &::OSG::ShaderProgram::getFuncIdUniform3i ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdUniform3iv
        
            typedef ::OSG::UInt32 ( *getFuncIdUniform3iv_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdUniform3iv"
                , getFuncIdUniform3iv_function_type( &::OSG::ShaderProgram::getFuncIdUniform3iv ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdUniform3ui
        
            typedef ::OSG::UInt32 ( *getFuncIdUniform3ui_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdUniform3ui"
                , getFuncIdUniform3ui_function_type( &::OSG::ShaderProgram::getFuncIdUniform3ui ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdUniform3uiv
        
            typedef ::OSG::UInt32 ( *getFuncIdUniform3uiv_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdUniform3uiv"
                , getFuncIdUniform3uiv_function_type( &::OSG::ShaderProgram::getFuncIdUniform3uiv ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdUniform4f
        
            typedef ::OSG::UInt32 ( *getFuncIdUniform4f_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdUniform4f"
                , getFuncIdUniform4f_function_type( &::OSG::ShaderProgram::getFuncIdUniform4f ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdUniform4fv
        
            typedef ::OSG::UInt32 ( *getFuncIdUniform4fv_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdUniform4fv"
                , getFuncIdUniform4fv_function_type( &::OSG::ShaderProgram::getFuncIdUniform4fv ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdUniform4i
        
            typedef ::OSG::UInt32 ( *getFuncIdUniform4i_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdUniform4i"
                , getFuncIdUniform4i_function_type( &::OSG::ShaderProgram::getFuncIdUniform4i ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdUniform4iv
        
            typedef ::OSG::UInt32 ( *getFuncIdUniform4iv_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdUniform4iv"
                , getFuncIdUniform4iv_function_type( &::OSG::ShaderProgram::getFuncIdUniform4iv ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdUniform4ui
        
            typedef ::OSG::UInt32 ( *getFuncIdUniform4ui_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdUniform4ui"
                , getFuncIdUniform4ui_function_type( &::OSG::ShaderProgram::getFuncIdUniform4ui ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdUniform4uiv
        
            typedef ::OSG::UInt32 ( *getFuncIdUniform4uiv_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdUniform4uiv"
                , getFuncIdUniform4uiv_function_type( &::OSG::ShaderProgram::getFuncIdUniform4uiv ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdUniformBlockBinding
        
            typedef ::OSG::UInt32 ( *getFuncIdUniformBlockBinding_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdUniformBlockBinding"
                , getFuncIdUniformBlockBinding_function_type( &::OSG::ShaderProgram::getFuncIdUniformBlockBinding ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdUniformMatrix2fv
        
            typedef ::OSG::UInt32 ( *getFuncIdUniformMatrix2fv_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdUniformMatrix2fv"
                , getFuncIdUniformMatrix2fv_function_type( &::OSG::ShaderProgram::getFuncIdUniformMatrix2fv ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdUniformMatrix3fv
        
            typedef ::OSG::UInt32 ( *getFuncIdUniformMatrix3fv_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdUniformMatrix3fv"
                , getFuncIdUniformMatrix3fv_function_type( &::OSG::ShaderProgram::getFuncIdUniformMatrix3fv ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdUniformMatrix4fv
        
            typedef ::OSG::UInt32 ( *getFuncIdUniformMatrix4fv_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdUniformMatrix4fv"
                , getFuncIdUniformMatrix4fv_function_type( &::OSG::ShaderProgram::getFuncIdUniformMatrix4fv ) );
        
        }
        { //::OSG::ShaderProgram::getFuncIdUseProgram
        
            typedef ::OSG::UInt32 ( *getFuncIdUseProgram_function_type )(  );
            
            ShaderProgram_exposer.def( 
                "getFuncIdUseProgram"
                , getFuncIdUseProgram_function_type( &::OSG::ShaderProgram::getFuncIdUseProgram ) );
        
        }
        { //::OSG::ShaderProgram::getNumDestroyedFunctors
        
            typedef ::OSG::UInt32 ( ::OSG::ShaderProgram::*getNumDestroyedFunctors_function_type )(  ) const;
            
            ShaderProgram_exposer.def( 
                "getNumDestroyedFunctors"
                , getNumDestroyedFunctors_function_type( &::OSG::ShaderProgram::getNumDestroyedFunctors ) );
        
        }
        { //::OSG::ShaderProgram::getProgramId
        
            typedef ::OSG::UInt16 ( ::OSG::ShaderProgram::*getProgramId_function_type )(  ) ;
            
            ShaderProgram_exposer.def( 
                "getProgramId"
                , getProgramId_function_type( &::OSG::ShaderProgram::getProgramId ) );
        
        }
        { //::OSG::ShaderProgram::getUniformBlock
        
            typedef bool ( ::OSG::ShaderProgram::*getUniformBlock_function_type )( ::OSG::Char8 const *,::OSG::UInt32 & ) ;
            
            ShaderProgram_exposer.def( 
                "getUniformBlock"
                , getUniformBlock_function_type( &::OSG::ShaderProgram::getUniformBlock )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgram::getUniformVariable
        
            typedef boost::python::tuple ( *getUniformVariable_Point_less__float_comma__3u__greater__function_type )( ::OSG::ShaderProgram &,::OSG::Char8 const * );
            
            ShaderProgram_exposer.def( 
                "getUniformVariable_Point_less__float_comma__3u__greater_"
                , getUniformVariable_Point_less__float_comma__3u__greater__function_type( &getUniformVariable_e9f1bba501ea24b5e106b3d74bfd9411 )
                , ( bp::arg("inst"), bp::arg("name") ) );
        
        }
        { //::OSG::ShaderProgram::getUniformVariable
        
            typedef boost::python::tuple ( *getUniformVariable_Point_less__float_comma__2u__greater__function_type )( ::OSG::ShaderProgram &,::OSG::Char8 const * );
            
            ShaderProgram_exposer.def( 
                "getUniformVariable_Point_less__float_comma__2u__greater_"
                , getUniformVariable_Point_less__float_comma__2u__greater__function_type( &getUniformVariable_65fae7f9bc7da8374cd39dea578ccbc7 )
                , ( bp::arg("inst"), bp::arg("name") ) );
        
        }
        { //::OSG::ShaderProgram::getUniformVariable
        
            typedef boost::python::tuple ( *getUniformVariable_TransformationMatrix_less__float__greater__function_type )( ::OSG::ShaderProgram &,::OSG::Char8 const * );
            
            ShaderProgram_exposer.def( 
                "getUniformVariable_TransformationMatrix_less__float__greater_"
                , getUniformVariable_TransformationMatrix_less__float__greater__function_type( &getUniformVariable_20e4e9bfa5996ba2226bbc243054ac0a )
                , ( bp::arg("inst"), bp::arg("name") ) );
        
        }
        { //::OSG::ShaderProgram::getUniformVariable
        
            typedef boost::python::tuple ( *getUniformVariable_Vector_less__float_comma__4u__greater__function_type )( ::OSG::ShaderProgram &,::OSG::Char8 const * );
            
            ShaderProgram_exposer.def( 
                "getUniformVariable_Vector_less__float_comma__4u__greater_"
                , getUniformVariable_Vector_less__float_comma__4u__greater__function_type( &getUniformVariable_6b17ed159890613d655647b5cb637006 )
                , ( bp::arg("inst"), bp::arg("name") ) );
        
        }
        { //::OSG::ShaderProgram::getUniformVariable
        
            typedef boost::python::tuple ( *getUniformVariable_Vector_less__float_comma__3u__greater__function_type )( ::OSG::ShaderProgram &,::OSG::Char8 const * );
            
            ShaderProgram_exposer.def( 
                "getUniformVariable_Vector_less__float_comma__3u__greater_"
                , getUniformVariable_Vector_less__float_comma__3u__greater__function_type( &getUniformVariable_85052dfdc1be838a1010e1c2882b512b )
                , ( bp::arg("inst"), bp::arg("name") ) );
        
        }
        { //::OSG::ShaderProgram::getUniformVariable
        
            typedef boost::python::tuple ( *getUniformVariable_Vector_less__float_comma__2u__greater__function_type )( ::OSG::ShaderProgram &,::OSG::Char8 const * );
            
            ShaderProgram_exposer.def( 
                "getUniformVariable_Vector_less__float_comma__2u__greater_"
                , getUniformVariable_Vector_less__float_comma__2u__greater__function_type( &getUniformVariable_bba16fab072ecb20158cdf1adc74df6c )
                , ( bp::arg("inst"), bp::arg("name") ) );
        
        }
        { //::OSG::ShaderProgram::getUniformVariable
        
            typedef boost::python::tuple ( *getUniformVariable_float_function_type )( ::OSG::ShaderProgram &,::OSG::Char8 const * );
            
            ShaderProgram_exposer.def( 
                "getUniformVariable_float"
                , getUniformVariable_float_function_type( &getUniformVariable_43ff17258b6060a3b8161a2f1b69f852 )
                , ( bp::arg("inst"), bp::arg("name") ) );
        
        }
        { //::OSG::ShaderProgram::getUniformVariable
        
            typedef boost::python::tuple ( *getUniformVariable_int_function_type )( ::OSG::ShaderProgram &,::OSG::Char8 const * );
            
            ShaderProgram_exposer.def( 
                "getUniformVariable_int"
                , getUniformVariable_int_function_type( &getUniformVariable_1e43e776cb58c77a2f8b535749245c50 )
                , ( bp::arg("inst"), bp::arg("name") ) );
        
        }
        { //::OSG::ShaderProgram::getUniformVariable
        
            typedef boost::python::tuple ( *getUniformVariable_bool_function_type )( ::OSG::ShaderProgram &,::OSG::Char8 const * );
            
            ShaderProgram_exposer.def( 
                "getUniformVariable_bool"
                , getUniformVariable_bool_function_type( &getUniformVariable_d4d0862ecaf7088b81409c965d1f7a2c )
                , ( bp::arg("inst"), bp::arg("name") ) );
        
        }
        { //::OSG::ShaderProgram::hasAttributes
        
            typedef bool ( ::OSG::ShaderProgram::*hasAttributes_function_type )(  ) ;
            
            ShaderProgram_exposer.def( 
                "hasAttributes"
                , hasAttributes_function_type( &::OSG::ShaderProgram::hasAttributes ) );
        
        }
        { //::OSG::ShaderProgram::hasParameter
        
            typedef bool ( ::OSG::ShaderProgram::*hasParameter_function_type )(  ) ;
            
            ShaderProgram_exposer.def( 
                "hasParameter"
                , hasParameter_function_type( &::OSG::ShaderProgram::hasParameter ) );
        
        }
        { //::OSG::ShaderProgram::readProgram
        
            typedef bool ( ::OSG::ShaderProgram::*readProgram_function_type )( ::OSG::Char8 const * ) ;
            
            ShaderProgram_exposer.def( 
                "readProgram"
                , readProgram_function_type( &::OSG::ShaderProgram::readProgram )
                , ( bp::arg("file") ) );
        
        }
        { //::OSG::ShaderProgram::setProgramAttribute
        
            typedef void ( ::OSG::ShaderProgram::*setProgramAttribute_function_type )( ::OSG::UInt16,::std::string ) ;
            
            ShaderProgram_exposer.def( 
                "setProgramAttribute"
                , setProgramAttribute_function_type( &::OSG::ShaderProgram::setProgramAttribute )
                , ( bp::arg("uiIndex"), bp::arg("szName") ) );
        
        }
        { //::OSG::ShaderProgram::setProgramParameter
        
            typedef void ( ::OSG::ShaderProgram::*setProgramParameter_function_type )( ::GLenum,::OSG::UInt32 ) ;
            
            ShaderProgram_exposer.def( 
                "setProgramParameter"
                , setProgramParameter_function_type( &::OSG::ShaderProgram::setProgramParameter )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgram::subParent
        
            typedef void ( ::OSG::ShaderProgram::*subParent_function_type )( ::OSG::FieldContainer * const ) ;
            
            ShaderProgram_exposer.def( 
                "subParent"
                , subParent_function_type( &::OSG::ShaderProgram::subParent )
                , ( bp::arg("pParent") ) );
        
        }
        { //::OSG::ShaderProgram::subProgramAttribute
        
            typedef void ( ::OSG::ShaderProgram::*subProgramAttribute_function_type )( ::OSG::UInt16 ) ;
            
            ShaderProgram_exposer.def( 
                "subProgramAttribute"
                , subProgramAttribute_function_type( &::OSG::ShaderProgram::subProgramAttribute )
                , ( bp::arg("uiIndex") ) );
        
        }
        { //::OSG::ShaderProgram::subProgramParameter
        
            typedef void ( ::OSG::ShaderProgram::*subProgramParameter_function_type )( ::GLenum ) ;
            
            ShaderProgram_exposer.def( 
                "subProgramParameter"
                , subProgramParameter_function_type( &::OSG::ShaderProgram::subProgramParameter )
                , ( bp::arg("name") ) );
        
        }
        { //::OSG::ShaderProgram::subUniformBlock
        
            typedef bool ( ::OSG::ShaderProgram::*subUniformBlock_function_type )( ::OSG::Char8 const * ) ;
            
            ShaderProgram_exposer.def( 
                "subUniformBlock"
                , subUniformBlock_function_type( &::OSG::ShaderProgram::subUniformBlock )
                , ( bp::arg("name") ) );
        
        }
        { //::OSG::ShaderProgram::subUniformVariable
        
            typedef bool ( ::OSG::ShaderProgram::*subUniformVariable_function_type )( ::OSG::Char8 const * ) ;
            
            ShaderProgram_exposer.def( 
                "subUniformVariable"
                , subUniformVariable_function_type( &::OSG::ShaderProgram::subUniformVariable )
                , ( bp::arg("name") ) );
        
        }
        { //::OSG::ShaderProgram::updateUniformBlock
        
            typedef bool ( ::OSG::ShaderProgram::*updateUniformBlock_function_type )( ::OSG::Char8 const *,::OSG::UInt32 ) ;
            
            ShaderProgram_exposer.def( 
                "updateUniformBlock"
                , updateUniformBlock_function_type( &::OSG::ShaderProgram::updateUniformBlock )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgram::updateUniformVariable
        
            typedef bool ( ::OSG::ShaderProgram::*updateUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Pnt3f const & ) ;
            
            ShaderProgram_exposer.def( 
                "updateUniformVariable"
                , updateUniformVariable_function_type( &::OSG::ShaderProgram::updateUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgram::updateUniformVariable
        
            typedef bool ( ::OSG::ShaderProgram::*updateUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Pnt2f const & ) ;
            
            ShaderProgram_exposer.def( 
                "updateUniformVariable"
                , updateUniformVariable_function_type( &::OSG::ShaderProgram::updateUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgram::updateUniformVariable
        
            typedef bool ( ::OSG::ShaderProgram::*updateUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Matrix const & ) ;
            
            ShaderProgram_exposer.def( 
                "updateUniformVariable"
                , updateUniformVariable_function_type( &::OSG::ShaderProgram::updateUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgram::updateUniformVariable
        
            typedef bool ( ::OSG::ShaderProgram::*updateUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Vec4f const & ) ;
            
            ShaderProgram_exposer.def( 
                "updateUniformVariable"
                , updateUniformVariable_function_type( &::OSG::ShaderProgram::updateUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgram::updateUniformVariable
        
            typedef bool ( ::OSG::ShaderProgram::*updateUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Vec3f const & ) ;
            
            ShaderProgram_exposer.def( 
                "updateUniformVariable"
                , updateUniformVariable_function_type( &::OSG::ShaderProgram::updateUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgram::updateUniformVariable
        
            typedef bool ( ::OSG::ShaderProgram::*updateUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Vec2f const & ) ;
            
            ShaderProgram_exposer.def( 
                "updateUniformVariable"
                , updateUniformVariable_function_type( &::OSG::ShaderProgram::updateUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgram::updateUniformVariable
        
            typedef bool ( ::OSG::ShaderProgram::*updateUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Real32 const & ) ;
            
            ShaderProgram_exposer.def( 
                "updateUniformVariable"
                , updateUniformVariable_function_type( &::OSG::ShaderProgram::updateUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgram::updateUniformVariable
        
            typedef bool ( ::OSG::ShaderProgram::*updateUniformVariable_function_type )( ::OSG::Char8 const *,::OSG::Int32 const & ) ;
            
            ShaderProgram_exposer.def( 
                "updateUniformVariable"
                , updateUniformVariable_function_type( &::OSG::ShaderProgram::updateUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgram::updateUniformVariable
        
            typedef bool ( ::OSG::ShaderProgram::*updateUniformVariable_function_type )( ::OSG::Char8 const *,bool const & ) ;
            
            ShaderProgram_exposer.def( 
                "updateUniformVariable"
                , updateUniformVariable_function_type( &::OSG::ShaderProgram::updateUniformVariable )
                , ( bp::arg("name"), bp::arg("value") ) );
        
        }
        { //::OSG::ShaderProgram::validate
        
            typedef void ( ::OSG::ShaderProgram::*validate_function_type )( ::OSG::DrawEnv * ) ;
            
            ShaderProgram_exposer.def( 
                "validate"
                , validate_function_type( &::OSG::ShaderProgram::validate )
                , ( bp::arg("pEnv") ) );
        
        }
        ShaderProgram_exposer.staticmethod( "createFragmentShader" );
        ShaderProgram_exposer.staticmethod( "createGeometryShader" );
        ShaderProgram_exposer.staticmethod( "createVertexShader" );
        ShaderProgram_exposer.staticmethod( "getExtIdCgShader" );
        ShaderProgram_exposer.staticmethod( "getExtIdGPUShader4" );
        ShaderProgram_exposer.staticmethod( "getExtIdGeometryShader4" );
        ShaderProgram_exposer.staticmethod( "getExtIdSHL" );
        ShaderProgram_exposer.staticmethod( "getExtIdTransformFeedback2" );
        ShaderProgram_exposer.staticmethod( "getExtIdUniformBufferObject" );
        ShaderProgram_exposer.staticmethod( "getFuncIdAttachShader" );
        ShaderProgram_exposer.staticmethod( "getFuncIdBeginTransformFeedback" );
        ShaderProgram_exposer.staticmethod( "getFuncIdBindAttribLocation" );
        ShaderProgram_exposer.staticmethod( "getFuncIdBindBufferBase" );
        ShaderProgram_exposer.staticmethod( "getFuncIdCompileShader" );
        ShaderProgram_exposer.staticmethod( "getFuncIdCreateProgram" );
        ShaderProgram_exposer.staticmethod( "getFuncIdCreateShader" );
        ShaderProgram_exposer.staticmethod( "getFuncIdDeleteProgram" );
        ShaderProgram_exposer.staticmethod( "getFuncIdDeleteShader" );
        ShaderProgram_exposer.staticmethod( "getFuncIdEndTransformFeedback" );
        ShaderProgram_exposer.staticmethod( "getFuncIdGetProgramInfoLog" );
        ShaderProgram_exposer.staticmethod( "getFuncIdGetProgramiv" );
        ShaderProgram_exposer.staticmethod( "getFuncIdGetShaderInfoLog" );
        ShaderProgram_exposer.staticmethod( "getFuncIdGetShaderiv" );
        ShaderProgram_exposer.staticmethod( "getFuncIdGetUniformBlockIndex" );
        ShaderProgram_exposer.staticmethod( "getFuncIdGetUniformLocation" );
        ShaderProgram_exposer.staticmethod( "getFuncIdGetUniformfv" );
        ShaderProgram_exposer.staticmethod( "getFuncIdGetUniformiv" );
        ShaderProgram_exposer.staticmethod( "getFuncIdLinkProgram" );
        ShaderProgram_exposer.staticmethod( "getFuncIdPauseTransformFeedback" );
        ShaderProgram_exposer.staticmethod( "getFuncIdProgramParameteri" );
        ShaderProgram_exposer.staticmethod( "getFuncIdResumeTransformFeedback" );
        ShaderProgram_exposer.staticmethod( "getFuncIdShaderSource" );
        ShaderProgram_exposer.staticmethod( "getFuncIdTransformFeedbackVaryings" );
        ShaderProgram_exposer.staticmethod( "getFuncIdUniform1f" );
        ShaderProgram_exposer.staticmethod( "getFuncIdUniform1fv" );
        ShaderProgram_exposer.staticmethod( "getFuncIdUniform1i" );
        ShaderProgram_exposer.staticmethod( "getFuncIdUniform1iv" );
        ShaderProgram_exposer.staticmethod( "getFuncIdUniform1ui" );
        ShaderProgram_exposer.staticmethod( "getFuncIdUniform1uiv" );
        ShaderProgram_exposer.staticmethod( "getFuncIdUniform2f" );
        ShaderProgram_exposer.staticmethod( "getFuncIdUniform2fv" );
        ShaderProgram_exposer.staticmethod( "getFuncIdUniform2i" );
        ShaderProgram_exposer.staticmethod( "getFuncIdUniform2iv" );
        ShaderProgram_exposer.staticmethod( "getFuncIdUniform2ui" );
        ShaderProgram_exposer.staticmethod( "getFuncIdUniform2uiv" );
        ShaderProgram_exposer.staticmethod( "getFuncIdUniform3f" );
        ShaderProgram_exposer.staticmethod( "getFuncIdUniform3fv" );
        ShaderProgram_exposer.staticmethod( "getFuncIdUniform3i" );
        ShaderProgram_exposer.staticmethod( "getFuncIdUniform3iv" );
        ShaderProgram_exposer.staticmethod( "getFuncIdUniform3ui" );
        ShaderProgram_exposer.staticmethod( "getFuncIdUniform3uiv" );
        ShaderProgram_exposer.staticmethod( "getFuncIdUniform4f" );
        ShaderProgram_exposer.staticmethod( "getFuncIdUniform4fv" );
        ShaderProgram_exposer.staticmethod( "getFuncIdUniform4i" );
        ShaderProgram_exposer.staticmethod( "getFuncIdUniform4iv" );
        ShaderProgram_exposer.staticmethod( "getFuncIdUniform4ui" );
        ShaderProgram_exposer.staticmethod( "getFuncIdUniform4uiv" );
        ShaderProgram_exposer.staticmethod( "getFuncIdUniformBlockBinding" );
        ShaderProgram_exposer.staticmethod( "getFuncIdUniformMatrix2fv" );
        ShaderProgram_exposer.staticmethod( "getFuncIdUniformMatrix3fv" );
        ShaderProgram_exposer.staticmethod( "getFuncIdUniformMatrix4fv" );
        ShaderProgram_exposer.staticmethod( "getFuncIdUseProgram" );
        pyopensg::register_transit< OSG::ShaderProgram >::execute();
        bp::implicitly_convertible< OSG::ShaderProgram::ObjRecPtr, OSG::ShaderProgram* >();
        bp::implicitly_convertible< OSG::ShaderProgram::ObjRecPtr, OSG::ShaderProgram::ObjCPtr >();
        bp::implicitly_convertible< OSG::ShaderProgram::ObjRecPtr, OSG::FieldContainer* >();
        bp::implicitly_convertible< OSG::ShaderProgram::ObjRecPtr, OSG::FieldContainer::ObjRecPtr >();
        bp::implicitly_convertible<OSG::ShaderProgram::ObjRecPtr, OSG::FieldContainer::ObjCPtr>();
        ShaderProgram_exposer.def("addDestroyedFunctor", wrapAddDestroyedFunctor,
                     (bp::arg("func"), bp::arg("createSymbol")));
        ShaderProgram_exposer.def("addProceduralVariable", wrapAddProceduralVariable,
                     (bp::arg("name"), bp::arg("pFunc"),
                      bp::arg("uiDependency") = OSG::ShaderProcVariable::SHDObject));
        ShaderProgram_exposer.def("updateProceduralVariable", wrapUpdateProceduralVariable,
                     (bp::arg("name"), bp::arg("pFunc"),
                      bp::arg("uiDependency") = OSG::ShaderProcVariable::SHDObject));
        ShaderProgram_exposer.def("addNodeProceduralVariable", wrapAddNodeProceduralVariable,
                     (bp::arg("name"), bp::arg("pFunc"),
                      bp::arg("uiDependency") = OSG::ShaderProcVariable::SHDObject));
        ShaderProgram_exposer.def("updateNodeProceduralVariable", wrapUpdateNodeProceduralVariable,
                     (bp::arg("name"), bp::arg("pFunc"),
                      bp::arg("uiDependency") = OSG::ShaderProcVariable::SHDObject));
    }

}
