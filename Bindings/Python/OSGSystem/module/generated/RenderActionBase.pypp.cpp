// This file has been generated by Py++.


// PyOpenSG is (C) Copyright 2005-2009 by Allen Bierbaum
//
// This file is part of PyOpenSG.
//
// PyOpenSG is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License as published by the Free
// Software Foundation; either version 2 of the License, or (at your option)
// any later version.
//
// PyOpenSG is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for
// more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

#if __GNUC__ >= 4 || __GNUC_MINOR__ >=3
#pragma GCC diagnostic warning "-Wold-style-cast"
#pragma GCC diagnostic warning "-Wunused-local-typedefs"
#pragma GCC diagnostic warning "-Wnon-virtual-dtor"
#endif
#if WIN32
#pragma warning(disable : 4267)
#pragma warning(disable : 4344)
#endif

#include "boost/python.hpp"
#include "OSGSystem_mainheader.h"
#include "OsgPtrHelpers.h"
#include "boost/python/suite/indexing/map_indexing_suite.hpp"
#include "boost/python/suite/indexing/vector_indexing_suite.hpp"
#include "RenderActionBase.pypp.hpp"

using namespace std;
namespace bp = boost::python;

struct RenderActionBase_wrapper : OSG::RenderActionBase, bp::wrapper< OSG::RenderActionBase > {

    virtual ::OSG::Int32 getActivePartitionIdx(  ){
        bp::override func_getActivePartitionIdx = this->get_override( "getActivePartitionIdx" );
        return func_getActivePartitionIdx(  );
    }

    virtual ::OSG::Int32 getLastPartitionIdx(  ){
        bp::override func_getLastPartitionIdx = this->get_override( "getLastPartitionIdx" );
        return func_getLastPartitionIdx(  );
    }

    virtual void readdPartitionByIndex( ::OSG::UInt32 uiPartIdx ){
        bp::override func_readdPartitionByIndex = this->get_override( "readdPartitionByIndex" );
        func_readdPartitionByIndex( uiPartIdx );
    }

};

void register_RenderActionBase_class(){

    { //::OSG::RenderActionBase
        typedef bp::class_< RenderActionBase_wrapper, boost::noncopyable > RenderActionBase_exposer_t;
        RenderActionBase_exposer_t RenderActionBase_exposer = RenderActionBase_exposer_t( "RenderActionBase", bp::no_init );
        bp::scope RenderActionBase_scope( RenderActionBase_exposer );
        { //::OSG::RenderActionBase::addRenderProperties
        
            typedef void ( ::OSG::RenderActionBase::*addRenderProperties_function_type )( long unsigned int ) ;
            
            RenderActionBase_exposer.def( 
                "addRenderProperties"
                , addRenderProperties_function_type( &::OSG::RenderActionBase::addRenderProperties )
                , ( bp::arg("oProp") ) );
        
        }
        { //::OSG::RenderActionBase::frameInit
        
            typedef void ( ::OSG::RenderActionBase::*frameInit_function_type )(  ) ;
            
            RenderActionBase_exposer.def( 
                "frameInit"
                , frameInit_function_type( &::OSG::RenderActionBase::frameInit ) );
        
        }
        { //::OSG::RenderActionBase::getActivePartitionIdx
        
            typedef ::OSG::Int32 ( ::OSG::RenderActionBase::*getActivePartitionIdx_function_type )(  ) ;
            
            RenderActionBase_exposer.def( 
                "getActivePartitionIdx"
                , bp::pure_virtual( getActivePartitionIdx_function_type(&::OSG::RenderActionBase::getActivePartitionIdx) ) );
        
        }
        { //::OSG::RenderActionBase::getAutoFrustum
        
            typedef bool ( ::OSG::RenderActionBase::*getAutoFrustum_function_type )(  ) const;
            
            RenderActionBase_exposer.def( 
                "getAutoFrustum"
                , getAutoFrustum_function_type( &::OSG::RenderActionBase::getAutoFrustum ) );
        
        }
        { //::OSG::RenderActionBase::getBackground
        
            typedef ::OSG::Background * ( ::OSG::RenderActionBase::*getBackground_function_type )(  ) const;
            
            RenderActionBase_exposer.def( 
                "getBackground"
                , getBackground_function_type( &::OSG::RenderActionBase::getBackground )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderActionBase::getCamera
        
            typedef ::OSG::Camera * ( ::OSG::RenderActionBase::*getCamera_function_type )(  ) const;
            
            RenderActionBase_exposer.def( 
                "getCamera"
                , getCamera_function_type( &::OSG::RenderActionBase::getCamera )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderActionBase::getCorrectTwoSidedLighting
        
            typedef bool ( ::OSG::RenderActionBase::*getCorrectTwoSidedLighting_function_type )(  ) const;
            
            RenderActionBase_exposer.def( 
                "getCorrectTwoSidedLighting"
                , getCorrectTwoSidedLighting_function_type( &::OSG::RenderActionBase::getCorrectTwoSidedLighting ) );
        
        }
        { //::OSG::RenderActionBase::getDrawPartPar
        
            typedef bool ( ::OSG::RenderActionBase::*getDrawPartPar_function_type )(  ) ;
            
            RenderActionBase_exposer.def( 
                "getDrawPartPar"
                , getDrawPartPar_function_type( &::OSG::RenderActionBase::getDrawPartPar ) );
        
        }
        { //::OSG::RenderActionBase::getFrameTravCount
        
            typedef ::OSG::UInt16 ( ::OSG::RenderActionBase::*getFrameTravCount_function_type )(  ) ;
            
            RenderActionBase_exposer.def( 
                "getFrameTravCount"
                , getFrameTravCount_function_type( &::OSG::RenderActionBase::getFrameTravCount ) );
        
        }
        { //::OSG::RenderActionBase::getFrustum
        
            typedef ::OSG::FrustumVolume const & ( ::OSG::RenderActionBase::*getFrustum_function_type )(  ) const;
            
            RenderActionBase_exposer.def( 
                "getFrustum"
                , getFrustum_function_type( &::OSG::RenderActionBase::getFrustum )
                , bp::return_value_policy< bp::copy_const_reference >() );
        
        }
        { //::OSG::RenderActionBase::getFrustumCulling
        
            typedef bool ( ::OSG::RenderActionBase::*getFrustumCulling_function_type )(  ) const;
            
            RenderActionBase_exposer.def( 
                "getFrustumCulling"
                , getFrustumCulling_function_type( &::OSG::RenderActionBase::getFrustumCulling ) );
        
        }
        { //::OSG::RenderActionBase::getGlobalOverride
        
            typedef ::OSG::Material * ( ::OSG::RenderActionBase::*getGlobalOverride_function_type )(  ) const;
            
            RenderActionBase_exposer.def( 
                "getGlobalOverride"
                , getGlobalOverride_function_type( &::OSG::RenderActionBase::getGlobalOverride )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderActionBase::getLastPartitionIdx
        
            typedef ::OSG::Int32 ( ::OSG::RenderActionBase::*getLastPartitionIdx_function_type )(  ) ;
            
            RenderActionBase_exposer.def( 
                "getLastPartitionIdx"
                , bp::pure_virtual( getLastPartitionIdx_function_type(&::OSG::RenderActionBase::getLastPartitionIdx) ) );
        
        }
        { //::OSG::RenderActionBase::getRenderProperties
        
            typedef long unsigned int ( ::OSG::RenderActionBase::*getRenderProperties_function_type )(  ) ;
            
            RenderActionBase_exposer.def( 
                "getRenderProperties"
                , getRenderProperties_function_type( &::OSG::RenderActionBase::getRenderProperties ) );
        
        }
        { //::OSG::RenderActionBase::getResetStatistics
        
            typedef bool ( ::OSG::RenderActionBase::*getResetStatistics_function_type )(  ) const;
            
            RenderActionBase_exposer.def( 
                "getResetStatistics"
                , getResetStatistics_function_type( &::OSG::RenderActionBase::getResetStatistics ) );
        
        }
        { //::OSG::RenderActionBase::getStatCollector
        
            typedef ::OSG::StatCollector * ( ::OSG::RenderActionBase::*getStatCollector_function_type )(  ) const;
            
            RenderActionBase_exposer.def( 
                "getStatCollector"
                , getStatCollector_function_type( &::OSG::RenderActionBase::getStatCollector )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderActionBase::getTravValidator
        
            typedef ::OSG::TraversalValidator * ( ::OSG::RenderActionBase::*getTravValidator_function_type )(  ) ;
            
            RenderActionBase_exposer.def( 
                "getTravValidator"
                , getTravValidator_function_type( &::OSG::RenderActionBase::getTravValidator )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderActionBase::getTraversalRoot
        
            typedef ::OSG::Node * ( ::OSG::RenderActionBase::*getTraversalRoot_function_type )(  ) const;
            
            RenderActionBase_exposer.def( 
                "getTraversalRoot"
                , getTraversalRoot_function_type( &::OSG::RenderActionBase::getTraversalRoot )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderActionBase::getUseGLFinish
        
            typedef bool ( ::OSG::RenderActionBase::*getUseGLFinish_function_type )(  ) ;
            
            RenderActionBase_exposer.def( 
                "getUseGLFinish"
                , getUseGLFinish_function_type( &::OSG::RenderActionBase::getUseGLFinish ) );
        
        }
        { //::OSG::RenderActionBase::getViewarea
        
            typedef ::OSG::Viewarea * ( ::OSG::RenderActionBase::*getViewarea_function_type )(  ) const;
            
            RenderActionBase_exposer.def( 
                "getViewarea"
                , getViewarea_function_type( &::OSG::RenderActionBase::getViewarea )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderActionBase::getVolumeDrawing
        
            typedef bool ( ::OSG::RenderActionBase::*getVolumeDrawing_function_type )(  ) const;
            
            RenderActionBase_exposer.def( 
                "getVolumeDrawing"
                , getVolumeDrawing_function_type( &::OSG::RenderActionBase::getVolumeDrawing ) );
        
        }
        { //::OSG::RenderActionBase::getWindow
        
            typedef ::OSG::Window * ( ::OSG::RenderActionBase::*getWindow_function_type )(  ) const;
            
            RenderActionBase_exposer.def( 
                "getWindow"
                , getWindow_function_type( &::OSG::RenderActionBase::getWindow )
                , bp::return_internal_reference< >() );
        
        }
        { //::OSG::RenderActionBase::getZWriteTrans
        
            typedef bool ( ::OSG::RenderActionBase::*getZWriteTrans_function_type )(  ) const;
            
            RenderActionBase_exposer.def( 
                "getZWriteTrans"
                , getZWriteTrans_function_type( &::OSG::RenderActionBase::getZWriteTrans ) );
        
        }
        { //::OSG::RenderActionBase::readdPartitionByIndex
        
            typedef void ( ::OSG::RenderActionBase::*readdPartitionByIndex_function_type )( ::OSG::UInt32 ) ;
            
            RenderActionBase_exposer.def( 
                "readdPartitionByIndex"
                , bp::pure_virtual( readdPartitionByIndex_function_type(&::OSG::RenderActionBase::readdPartitionByIndex) )
                , ( bp::arg("uiPartIdx") ) );
        
        }
        { //::OSG::RenderActionBase::resetRenderProperties
        
            typedef void ( ::OSG::RenderActionBase::*resetRenderProperties_function_type )(  ) ;
            
            RenderActionBase_exposer.def( 
                "resetRenderProperties"
                , resetRenderProperties_function_type( &::OSG::RenderActionBase::resetRenderProperties ) );
        
        }
        { //::OSG::RenderActionBase::setAutoFrustum
        
            typedef void ( ::OSG::RenderActionBase::*setAutoFrustum_function_type )( bool ) ;
            
            RenderActionBase_exposer.def( 
                "setAutoFrustum"
                , setAutoFrustum_function_type( &::OSG::RenderActionBase::setAutoFrustum )
                , ( bp::arg("val")=(bool)(true) ) );
        
        }
        { //::OSG::RenderActionBase::setBackground
        
            typedef void ( ::OSG::RenderActionBase::*setBackground_function_type )( ::OSG::Background * ) ;
            
            RenderActionBase_exposer.def( 
                "setBackground"
                , setBackground_function_type( &::OSG::RenderActionBase::setBackground )
                , ( bp::arg("pBackground") ) );
        
        }
        { //::OSG::RenderActionBase::setCamera
        
            typedef void ( ::OSG::RenderActionBase::*setCamera_function_type )( ::OSG::Camera * ) ;
            
            RenderActionBase_exposer.def( 
                "setCamera"
                , setCamera_function_type( &::OSG::RenderActionBase::setCamera )
                , ( bp::arg("pCamera") ) );
        
        }
        { //::OSG::RenderActionBase::setCorrectTwoSidedLighting
        
            typedef void ( ::OSG::RenderActionBase::*setCorrectTwoSidedLighting_function_type )( bool ) ;
            
            RenderActionBase_exposer.def( 
                "setCorrectTwoSidedLighting"
                , setCorrectTwoSidedLighting_function_type( &::OSG::RenderActionBase::setCorrectTwoSidedLighting )
                , ( bp::arg("val")=(bool)(true) ) );
        
        }
        { //::OSG::RenderActionBase::setDrawPartPar
        
            typedef void ( ::OSG::RenderActionBase::*setDrawPartPar_function_type )( bool ) ;
            
            RenderActionBase_exposer.def( 
                "setDrawPartPar"
                , setDrawPartPar_function_type( &::OSG::RenderActionBase::setDrawPartPar )
                , ( bp::arg("bVal") ) );
        
        }
        { //::OSG::RenderActionBase::setDrawableId
        
            typedef void ( ::OSG::RenderActionBase::*setDrawableId_function_type )( ::OSG::Int32 ) ;
            
            RenderActionBase_exposer.def( 
                "setDrawableId"
                , setDrawableId_function_type( &::OSG::RenderActionBase::setDrawableId )
                , ( bp::arg("iId") ) );
        
        }
        { //::OSG::RenderActionBase::setDrawerId
        
            typedef void ( ::OSG::RenderActionBase::*setDrawerId_function_type )( ::OSG::Int32 ) ;
            
            RenderActionBase_exposer.def( 
                "setDrawerId"
                , setDrawerId_function_type( &::OSG::RenderActionBase::setDrawerId )
                , ( bp::arg("iId") ) );
        
        }
        { //::OSG::RenderActionBase::setFrustum
        
            typedef void ( ::OSG::RenderActionBase::*setFrustum_function_type )( ::OSG::FrustumVolume & ) ;
            
            RenderActionBase_exposer.def( 
                "setFrustum"
                , setFrustum_function_type( &::OSG::RenderActionBase::setFrustum )
                , ( bp::arg("frust") ) );
        
        }
        { //::OSG::RenderActionBase::setFrustumCulling
        
            typedef void ( ::OSG::RenderActionBase::*setFrustumCulling_function_type )( bool ) ;
            
            RenderActionBase_exposer.def( 
                "setFrustumCulling"
                , setFrustumCulling_function_type( &::OSG::RenderActionBase::setFrustumCulling )
                , ( bp::arg("val")=(bool)(true) ) );
        
        }
        { //::OSG::RenderActionBase::setGlobalOverride
        
            typedef void ( ::OSG::RenderActionBase::*setGlobalOverride_function_type )( ::OSG::Material * ) ;
            
            RenderActionBase_exposer.def( 
                "setGlobalOverride"
                , setGlobalOverride_function_type( &::OSG::RenderActionBase::setGlobalOverride )
                , ( bp::arg("pMat") ) );
        
        }
        { //::OSG::RenderActionBase::setRenderProperties
        
            typedef void ( ::OSG::RenderActionBase::*setRenderProperties_function_type )( long unsigned int ) ;
            
            RenderActionBase_exposer.def( 
                "setRenderProperties"
                , setRenderProperties_function_type( &::OSG::RenderActionBase::setRenderProperties )
                , ( bp::arg("oProp") ) );
        
        }
        { //::OSG::RenderActionBase::setResetStatistics
        
            typedef void ( ::OSG::RenderActionBase::*setResetStatistics_function_type )( bool ) ;
            
            RenderActionBase_exposer.def( 
                "setResetStatistics"
                , setResetStatistics_function_type( &::OSG::RenderActionBase::setResetStatistics )
                , ( bp::arg("value") ) );
        
        }
        { //::OSG::RenderActionBase::setStatCollector
        
            typedef void ( ::OSG::RenderActionBase::*setStatCollector_function_type )( ::OSG::StatCollector * ) ;
            
            RenderActionBase_exposer.def( 
                "setStatCollector"
                , setStatCollector_function_type( &::OSG::RenderActionBase::setStatCollector )
                , ( bp::arg("pStat") ) );
        
        }
        { //::OSG::RenderActionBase::setTraversalRoot
        
            typedef void ( ::OSG::RenderActionBase::*setTraversalRoot_function_type )( ::OSG::Node * ) ;
            
            RenderActionBase_exposer.def( 
                "setTraversalRoot"
                , setTraversalRoot_function_type( &::OSG::RenderActionBase::setTraversalRoot )
                , ( bp::arg("pTravRoot") ) );
        
        }
        { //::OSG::RenderActionBase::setUseGLFinish
        
            typedef void ( ::OSG::RenderActionBase::*setUseGLFinish_function_type )( bool ) ;
            
            RenderActionBase_exposer.def( 
                "setUseGLFinish"
                , setUseGLFinish_function_type( &::OSG::RenderActionBase::setUseGLFinish )
                , ( bp::arg("bVal") ) );
        
        }
        { //::OSG::RenderActionBase::setViewarea
        
            typedef void ( ::OSG::RenderActionBase::*setViewarea_function_type )( ::OSG::Viewarea * ) ;
            
            RenderActionBase_exposer.def( 
                "setViewarea"
                , setViewarea_function_type( &::OSG::RenderActionBase::setViewarea )
                , ( bp::arg("pViewarea") ) );
        
        }
        { //::OSG::RenderActionBase::setVolumeDrawing
        
            typedef void ( ::OSG::RenderActionBase::*setVolumeDrawing_function_type )( bool ) ;
            
            RenderActionBase_exposer.def( 
                "setVolumeDrawing"
                , setVolumeDrawing_function_type( &::OSG::RenderActionBase::setVolumeDrawing )
                , ( bp::arg("val")=(bool)(false) ) );
        
        }
        { //::OSG::RenderActionBase::setWindow
        
            typedef void ( ::OSG::RenderActionBase::*setWindow_function_type )( ::OSG::Window * ) ;
            
            RenderActionBase_exposer.def( 
                "setWindow"
                , setWindow_function_type( &::OSG::RenderActionBase::setWindow )
                , ( bp::arg("pWindow") ) );
        
        }
        { //::OSG::RenderActionBase::setZWriteTrans
        
            typedef void ( ::OSG::RenderActionBase::*setZWriteTrans_function_type )( bool ) ;
            
            RenderActionBase_exposer.def( 
                "setZWriteTrans"
                , setZWriteTrans_function_type( &::OSG::RenderActionBase::setZWriteTrans )
                , ( bp::arg("val")=(bool)(false) ) );
        
        }
        { //::OSG::RenderActionBase::start
        
            typedef ::OSG::ActionBase::ResultE ( ::OSG::RenderActionBase::*start_function_type )(  ) ;
            
            RenderActionBase_exposer.def( 
                "start"
                , start_function_type( &::OSG::RenderActionBase::start ) );
        
        }
        { //::OSG::RenderActionBase::stop
        
            typedef ::OSG::ActionBase::ResultE ( ::OSG::RenderActionBase::*stop_function_type )( ::OSG::ActionBase::ResultE ) ;
            
            RenderActionBase_exposer.def( 
                "stop"
                , stop_function_type( &::OSG::RenderActionBase::stop )
                , ( bp::arg("res") ) );
        
        }
        { //::OSG::RenderActionBase::subRenderProperties
        
            typedef void ( ::OSG::RenderActionBase::*subRenderProperties_function_type )( long unsigned int ) ;
            
            RenderActionBase_exposer.def( 
                "subRenderProperties"
                , subRenderProperties_function_type( &::OSG::RenderActionBase::subRenderProperties )
                , ( bp::arg("oProp") ) );
        
        }
        RenderActionBase_exposer.def_readonly( "statTravTime", OSG::RenderActionBase::statTravTime );
    }

}
