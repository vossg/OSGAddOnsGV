// This file has been generated by Py++.

// PyOpenSG is (C) Copyright 2005-2009 by Allen Bierbaum
//
// This file is part of PyOpenSG.
//
// PyOpenSG is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License as published by the Free
// Software Foundation; either version 2 of the License, or (at your option)
// any later version.
//
// PyOpenSG is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for
// more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

#if __GNUC__ >= 4 || __GNUC_MINOR__ >=3
#pragma GCC diagnostic warning "-Wold-style-cast"
#pragma GCC diagnostic warning "-Wunused-local-typedefs"
#endif
#if WIN32
#pragma warning(disable : 4267)
#pragma warning(disable : 4344)
#endif


#include "boost/python.hpp"

#include "__call_policies.pypp.hpp"

#include "__convenience.pypp.hpp"

#include "boost/python/suite/indexing/vector_indexing_suite.hpp"

#include "OSGSystem_mainheader.h"

#include "OsgPtrHelpers.h"

#include "boost/python/suite/indexing/map_indexing_suite.hpp"

#include "boost/python/suite/indexing/vector_indexing_suite.hpp"

#include "generated/Action.pypp.hpp"

#include "generated/ActionBase.pypp.hpp"

#include "generated/Background.pypp.hpp"

#include "generated/BackgroundBase.pypp.hpp"

#include "generated/BlendChunk.pypp.hpp"

#include "generated/BlendChunkBase.pypp.hpp"

#include "generated/BoostPathAttachment.pypp.hpp"

#include "generated/BoostPathAttachmentBase.pypp.hpp"

#include "generated/Camera.pypp.hpp"

#include "generated/CameraBase.pypp.hpp"

#include "generated/CameraDecorator.pypp.hpp"

#include "generated/CameraDecoratorBase.pypp.hpp"

#include "generated/ChunkBlock.pypp.hpp"

#include "generated/ChunkBlockBase.pypp.hpp"

#include "generated/ChunkListHelper.pypp.hpp"

#include "generated/ChunkListHelperBase.pypp.hpp"

#include "generated/ChunkMaterial.pypp.hpp"

#include "generated/ChunkMaterialBase.pypp.hpp"

#include "generated/ChunkOverrideGroup.pypp.hpp"

#include "generated/ChunkOverrideGroupBase.pypp.hpp"

#include "generated/ColorMaskChunk.pypp.hpp"

#include "generated/ColorMaskChunkBase.pypp.hpp"

#include "generated/CompositeMaterial.pypp.hpp"

#include "generated/CompositeMaterialBase.pypp.hpp"

#include "generated/ContainerCollection.pypp.hpp"

#include "generated/ContainerCollectionBase.pypp.hpp"

#include "generated/DepthChunk.pypp.hpp"

#include "generated/DepthChunkBase.pypp.hpp"

#include "generated/Drawable.pypp.hpp"

#include "generated/DrawableBase.pypp.hpp"

#include "generated/DrawableStatsAttachment.pypp.hpp"

#include "generated/DrawableStatsAttachmentBase.pypp.hpp"

#include "generated/FBOViewport.pypp.hpp"

#include "generated/FBOViewportBase.pypp.hpp"

#include "generated/FileContextAttachment.pypp.hpp"

#include "generated/FileContextAttachmentBase.pypp.hpp"

#include "generated/Foreground.pypp.hpp"

#include "generated/ForegroundBase.pypp.hpp"

#include "generated/FrameBufferAttachment.pypp.hpp"

#include "generated/FrameBufferAttachmentBase.pypp.hpp"

#include "generated/FrameBufferObject.pypp.hpp"

#include "generated/FrameBufferObjectBase.pypp.hpp"

#include "generated/FullStateChunk.pypp.hpp"

#include "generated/FullStateChunkBase.pypp.hpp"

#include "generated/GeoProperty.pypp.hpp"

#include "generated/GeoPropertyBase.pypp.hpp"

#include "generated/GeoReferenceAttachment.pypp.hpp"

#include "generated/GeoReferenceAttachmentBase.pypp.hpp"

#include "generated/GeoVectorProperty.pypp.hpp"

#include "generated/GeoVectorPropertyBase.pypp.hpp"

#include "generated/GraphOpFactory.pypp.hpp"

#include "generated/GraphOpFactoryBase.pypp.hpp"

#include "generated/Group.pypp.hpp"

#include "generated/GroupBase.pypp.hpp"

#include "generated/Image.pypp.hpp"

#include "generated/ImageBase.pypp.hpp"

#include "generated/ImageFileHandler.pypp.hpp"

#include "generated/ImageFileHandlerBase.pypp.hpp"

#include "generated/ImageFileType.pypp.hpp"

#include "generated/IntersectAction.pypp.hpp"

#include "generated/IntersectProxyAttachment.pypp.hpp"

#include "generated/IntersectProxyAttachmentBase.pypp.hpp"

#include "generated/LayeredTextureBuffer.pypp.hpp"

#include "generated/LayeredTextureBufferBase.pypp.hpp"

#include "generated/Light.pypp.hpp"

#include "generated/LightBase.pypp.hpp"

#include "generated/LightChunk.pypp.hpp"

#include "generated/LightChunkBase.pypp.hpp"

#include "generated/LightEngine.pypp.hpp"

#include "generated/LightEngineBase.pypp.hpp"

#include "generated/LightEnv.pypp.hpp"

#include "generated/LightEnvBase.pypp.hpp"

#include "generated/Material.pypp.hpp"

#include "generated/MaterialBase.pypp.hpp"

#include "generated/MaterialChunk.pypp.hpp"

#include "generated/MaterialChunkBase.pypp.hpp"

#include "generated/MaterialDrawable.pypp.hpp"

#include "generated/MaterialDrawableBase.pypp.hpp"

#include "generated/MaterialGroup.pypp.hpp"

#include "generated/MaterialGroupBase.pypp.hpp"

#include "generated/MatrixCamera.pypp.hpp"

#include "generated/MatrixCameraBase.pypp.hpp"

#include "generated/MultiCore.pypp.hpp"

#include "generated/MultiCoreBase.pypp.hpp"

#include "generated/MultiPassMaterial.pypp.hpp"

#include "generated/MultiPassMaterialBase.pypp.hpp"

#include "generated/NodeStore.pypp.hpp"

#include "generated/OSGSystemPy_free_functions.pypp.hpp"

#include "generated/PerspectiveCamera.pypp.hpp"

#include "generated/PerspectiveCameraBase.pypp.hpp"

#include "generated/PolygonChunk.pypp.hpp"

#include "generated/PolygonChunkBase.pypp.hpp"

#include "generated/PrimeMaterial.pypp.hpp"

#include "generated/PrimeMaterialBase.pypp.hpp"

#include "generated/ProgramChunkStore.pypp.hpp"

#include "generated/ProgramVarChunkStore.pypp.hpp"

#include "generated/RenderAction.pypp.hpp"

#include "generated/RenderActionBase.pypp.hpp"

#include "generated/RenderBuffer.pypp.hpp"

#include "generated/RenderBufferBase.pypp.hpp"

#include "generated/RenderOptions.pypp.hpp"

#include "generated/RenderOptionsBase.pypp.hpp"

#include "generated/RenderPartition.pypp.hpp"

#include "generated/RenderPartitionBase.pypp.hpp"

#include "generated/RenderTreeNode.pypp.hpp"

#include "generated/RenderTreeNodePool.pypp.hpp"

#include "generated/RootGroup.pypp.hpp"

#include "generated/RootGroupBase.pypp.hpp"

#include "generated/SceneFileHandler.pypp.hpp"

#include "generated/SceneFileHandlerBase.pypp.hpp"

#include "generated/SceneFileType.pypp.hpp"

#include "generated/ShaderExecutableChunk.pypp.hpp"

#include "generated/ShaderExecutableChunkBase.pypp.hpp"

#include "generated/ShaderExecutableVarChunk.pypp.hpp"

#include "generated/ShaderExecutableVarChunkBase.pypp.hpp"

#include "generated/ShaderProcVariable.pypp.hpp"

#include "generated/ShaderProcVariableBase.pypp.hpp"

#include "generated/ShaderProgram.pypp.hpp"

#include "generated/ShaderProgramBase.pypp.hpp"

#include "generated/ShaderProgramChunk.pypp.hpp"

#include "generated/ShaderProgramChunkBase.pypp.hpp"

#include "generated/ShaderProgramVariableChunk.pypp.hpp"

#include "generated/ShaderProgramVariableChunkBase.pypp.hpp"

#include "generated/ShaderProgramVariables.pypp.hpp"

#include "generated/ShaderProgramVariablesBase.pypp.hpp"

#include "generated/ShaderValueVariable.pypp.hpp"

#include "generated/ShaderValueVariableBase.pypp.hpp"

#include "generated/ShaderVariable.pypp.hpp"

#include "generated/ShaderVariableBase.pypp.hpp"

#include "generated/ShaderVariableBool.pypp.hpp"

#include "generated/ShaderVariableBoolBase.pypp.hpp"

#include "generated/ShaderVariableFunctor.pypp.hpp"

#include "generated/ShaderVariableFunctorBase.pypp.hpp"

#include "generated/ShaderVariableInt.pypp.hpp"

#include "generated/ShaderVariableIntBase.pypp.hpp"

#include "generated/ShaderVariableMInt.pypp.hpp"

#include "generated/ShaderVariableMIntBase.pypp.hpp"

#include "generated/ShaderVariableMMatrix.pypp.hpp"

#include "generated/ShaderVariableMMatrixBase.pypp.hpp"

#include "generated/ShaderVariableMReal.pypp.hpp"

#include "generated/ShaderVariableMRealBase.pypp.hpp"

#include "generated/ShaderVariableMUInt.pypp.hpp"

#include "generated/ShaderVariableMUIntBase.pypp.hpp"

#include "generated/ShaderVariableMVec2f.pypp.hpp"

#include "generated/ShaderVariableMVec2fBase.pypp.hpp"

#include "generated/ShaderVariableMVec3f.pypp.hpp"

#include "generated/ShaderVariableMVec3fBase.pypp.hpp"

#include "generated/ShaderVariableMVec4f.pypp.hpp"

#include "generated/ShaderVariableMVec4fBase.pypp.hpp"

#include "generated/ShaderVariableMatrix.pypp.hpp"

#include "generated/ShaderVariableMatrixBase.pypp.hpp"

#include "generated/ShaderVariableOSG.pypp.hpp"

#include "generated/ShaderVariableOSGBase.pypp.hpp"

#include "generated/ShaderVariablePnt2f.pypp.hpp"

#include "generated/ShaderVariablePnt2fBase.pypp.hpp"

#include "generated/ShaderVariablePnt3f.pypp.hpp"

#include "generated/ShaderVariablePnt3fBase.pypp.hpp"

#include "generated/ShaderVariableReal.pypp.hpp"

#include "generated/ShaderVariableRealBase.pypp.hpp"

#include "generated/ShaderVariableString.pypp.hpp"

#include "generated/ShaderVariableStringBase.pypp.hpp"

#include "generated/ShaderVariableUInt.pypp.hpp"

#include "generated/ShaderVariableUIntBase.pypp.hpp"

#include "generated/ShaderVariableUniformBlock.pypp.hpp"

#include "generated/ShaderVariableUniformBlockBase.pypp.hpp"

#include "generated/ShaderVariableVec2f.pypp.hpp"

#include "generated/ShaderVariableVec2fBase.pypp.hpp"

#include "generated/ShaderVariableVec3f.pypp.hpp"

#include "generated/ShaderVariableVec3fBase.pypp.hpp"

#include "generated/ShaderVariableVec4f.pypp.hpp"

#include "generated/ShaderVariableVec4fBase.pypp.hpp"

#include "generated/SimpleMaterial.pypp.hpp"

#include "generated/SimpleMaterialBase.pypp.hpp"

#include "generated/SimpleSHLChunk.pypp.hpp"

#include "generated/SimpleSHLChunkBase.pypp.hpp"

#include "generated/SimpleSHLVariableChunk.pypp.hpp"

#include "generated/SimpleSHLVariableChunkBase.pypp.hpp"

#include "generated/SolidBackground.pypp.hpp"

#include "generated/SolidBackgroundBase.pypp.hpp"

#include "generated/State.pypp.hpp"

#include "generated/StateBase.pypp.hpp"

#include "generated/StateChunk.pypp.hpp"

#include "generated/StateChunkBase.pypp.hpp"

#include "generated/StateOverride.pypp.hpp"

#include "generated/StateOverridePool.pypp.hpp"

#include "generated/StatisticsForeground.pypp.hpp"

#include "generated/StatisticsForegroundBase.pypp.hpp"

#include "generated/StatsAttachment.pypp.hpp"

#include "generated/StatsAttachmentBase.pypp.hpp"

#include "generated/StereoCameraDecorator.pypp.hpp"

#include "generated/StereoCameraDecoratorBase.pypp.hpp"

#include "generated/StringAttributeMap.pypp.hpp"

#include "generated/StringAttributeMapBase.pypp.hpp"

#include "generated/SwitchMaterial.pypp.hpp"

#include "generated/SwitchMaterialBase.pypp.hpp"

#include "generated/TextureBaseChunk.pypp.hpp"

#include "generated/TextureBaseChunkBase.pypp.hpp"

#include "generated/TextureBuffer.pypp.hpp"

#include "generated/TextureBufferBase.pypp.hpp"

#include "generated/TextureObjChunk.pypp.hpp"

#include "generated/TextureObjChunkBase.pypp.hpp"

#include "generated/TraversalData.pypp.hpp"

#include "generated/TraversalDataBase.pypp.hpp"

#include "generated/TreeBuilderBase.pypp.hpp"

#include "generated/UniformBufferObjChunk.pypp.hpp"

#include "generated/UniformBufferObjChunkBase.pypp.hpp"

#include "generated/UniformBufferObjStd140Chunk.pypp.hpp"

#include "generated/UniformBufferObjStd140ChunkBase.pypp.hpp"

#include "generated/VariantMaterial.pypp.hpp"

#include "generated/VariantMaterialBase.pypp.hpp"

#include "generated/Viewarea.pypp.hpp"

#include "generated/ViewareaBase.pypp.hpp"

#include "generated/Viewport.pypp.hpp"

#include "generated/ViewportBase.pypp.hpp"

#include "generated/Window.pypp.hpp"

#include "generated/WindowBase.pypp.hpp"

using namespace std;

namespace bp = boost::python;

BOOST_PYTHON_MODULE(OSGSystemPy){
    register_ProgramVarChunkStore_class();

    register_ProgramChunkStore_class();

    register_NodeStore_class();

    register_ActionBase_class();

    register_Action_class();

    register_BackgroundBase_class();

    register_Background_class();

    register_StateChunkBase_class();

    register_StateChunk_class();

    register_BlendChunkBase_class();

    register_BlendChunk_class();

    register_BoostPathAttachmentBase_class();

    register_BoostPathAttachment_class();

    register_CameraBase_class();

    register_Camera_class();

    register_CameraDecoratorBase_class();

    register_CameraDecorator_class();

    register_ChunkBlock_class();

    register_ChunkBlockBase_class();

    register_ChunkListHelperBase_class();

    register_ChunkListHelper_class();

    register_MaterialBase_class();

    register_Material_class();

    register_PrimeMaterialBase_class();

    register_PrimeMaterial_class();

    register_ChunkMaterialBase_class();

    register_ChunkMaterial_class();

    register_ChunkOverrideGroup_class();

    register_GroupBase_class();

    register_Group_class();

    register_ChunkOverrideGroupBase_class();

    register_ColorMaskChunkBase_class();

    register_ColorMaskChunk_class();

    register_CompositeMaterialBase_class();

    register_CompositeMaterial_class();

    register_ContainerCollectionBase_class();

    register_ContainerCollection_class();

    register_DepthChunkBase_class();

    register_DepthChunk_class();

    register_DrawableBase_class();

    register_Drawable_class();

    register_StatsAttachmentBase_class();

    register_StatsAttachment_class();

    register_DrawableStatsAttachmentBase_class();

    register_DrawableStatsAttachment_class();

    register_ViewareaBase_class();

    register_Viewarea_class();

    register_ViewportBase_class();

    register_Viewport_class();

    register_FBOViewportBase_class();

    register_FBOViewport_class();

    register_FileContextAttachmentBase_class();

    register_FileContextAttachment_class();

    register_ForegroundBase_class();

    register_Foreground_class();

    register_FrameBufferAttachmentBase_class();

    register_FrameBufferAttachment_class();

    register_FrameBufferObjectBase_class();

    register_WindowBase_class();

    register_Window_class();

    register_FrameBufferObject_class();

    register_FullStateChunkBase_class();

    register_FullStateChunk_class();

    register_GeoPropertyBase_class();

    register_GeoProperty_class();

    register_GeoReferenceAttachmentBase_class();

    register_GeoReferenceAttachment_class();

    register_GeoVectorPropertyBase_class();

    register_GeoVectorProperty_class();

    register_GraphOpFactoryBase_class();

    register_ImageBase_class();

    register_Image_class();

    register_ImageFileHandlerBase_class();

    register_ImageFileType_class();

    register_IntersectAction_class();

    register_IntersectProxyAttachmentBase_class();

    register_IntersectProxyAttachment_class();

    register_LayeredTextureBufferBase_class();

    register_LayeredTextureBuffer_class();

    register_LightBase_class();

    register_LightEngineBase_class();

    register_LightEngine_class();

    register_Light_class();

    register_LightChunkBase_class();

    register_LightChunk_class();

    register_LightEnvBase_class();

    register_LightEnv_class();

    register_MaterialChunkBase_class();

    register_MaterialChunk_class();

    register_MaterialDrawableBase_class();

    register_MaterialDrawable_class();

    register_MaterialGroupBase_class();

    register_MaterialGroup_class();

    register_MatrixCameraBase_class();

    register_MatrixCamera_class();

    register_MultiCoreBase_class();

    register_MultiCore_class();

    register_MultiPassMaterialBase_class();

    register_MultiPassMaterial_class();

    register_RenderTreeNodePool_class();

    register_PerspectiveCameraBase_class();

    register_PerspectiveCamera_class();

    register_PolygonChunkBase_class();

    register_PolygonChunk_class();

    register_RenderPartitionBase_class();

    register_RenderActionBase_class();

    register_RenderAction_class();

    register_RenderBufferBase_class();

    register_RenderBuffer_class();

    register_RenderOptionsBase_class();

    register_RenderOptions_class();

    register_RenderPartition_class();

    register_RenderTreeNode_class();

    register_RootGroupBase_class();

    register_RootGroup_class();

    register_SceneFileHandlerBase_class();

    register_SceneFileType_class();

    register_ShaderExecutableChunkBase_class();

    register_ShaderExecutableChunk_class();

    register_ShaderExecutableVarChunkBase_class();

    register_ShaderExecutableVarChunk_class();

    register_ShaderVariableBase_class();

    register_ShaderVariable_class();

    register_ShaderProcVariableBase_class();

    register_ShaderProcVariable_class();

    register_ShaderProgramBase_class();

    register_ShaderProgram_class();

    register_ShaderProgramChunkBase_class();

    register_ShaderProgramChunk_class();

    register_ShaderProgramVariableChunkBase_class();

    register_ShaderProgramVariableChunk_class();

    register_ShaderProgramVariablesBase_class();

    register_ShaderProgramVariables_class();

    register_ShaderValueVariableBase_class();

    register_ShaderValueVariable_class();

    register_ShaderVariableBoolBase_class();

    register_ShaderVariableBool_class();

    register_ShaderVariableFunctorBase_class();

    register_ShaderVariableFunctor_class();

    register_ShaderVariableIntBase_class();

    register_ShaderVariableInt_class();

    register_ShaderVariableMIntBase_class();

    register_ShaderVariableMInt_class();

    register_ShaderVariableMMatrixBase_class();

    register_ShaderVariableMMatrix_class();

    register_ShaderVariableMRealBase_class();

    register_ShaderVariableMReal_class();

    register_ShaderVariableMUIntBase_class();

    register_ShaderVariableMUInt_class();

    register_ShaderVariableMVec2fBase_class();

    register_ShaderVariableMVec2f_class();

    register_ShaderVariableMVec3fBase_class();

    register_ShaderVariableMVec3f_class();

    register_ShaderVariableMVec4fBase_class();

    register_ShaderVariableMVec4f_class();

    register_ShaderVariableMatrixBase_class();

    register_ShaderVariableMatrix_class();

    register_ShaderVariableOSGBase_class();

    register_ShaderVariableOSG_class();

    register_ShaderVariablePnt2fBase_class();

    register_ShaderVariablePnt2f_class();

    register_ShaderVariablePnt3fBase_class();

    register_ShaderVariablePnt3f_class();

    register_ShaderVariableRealBase_class();

    register_ShaderVariableReal_class();

    register_ShaderVariableStringBase_class();

    register_ShaderVariableString_class();

    register_ShaderVariableUIntBase_class();

    register_ShaderVariableUInt_class();

    register_ShaderVariableUniformBlockBase_class();

    register_ShaderVariableUniformBlock_class();

    register_ShaderVariableVec2fBase_class();

    register_ShaderVariableVec2f_class();

    register_ShaderVariableVec3fBase_class();

    register_ShaderVariableVec3f_class();

    register_ShaderVariableVec4fBase_class();

    register_ShaderVariableVec4f_class();

    register_SimpleMaterialBase_class();

    register_SimpleMaterial_class();

    register_StateOverridePool_class();

    register_SimpleSHLChunkBase_class();

    register_SimpleSHLChunk_class();

    register_SimpleSHLVariableChunkBase_class();

    register_SimpleSHLVariableChunk_class();

    register_GraphOpFactory_class();

    register_ImageFileHandler_class();

    register_SceneFileHandler_class();

    register_SolidBackgroundBase_class();

    register_SolidBackground_class();

    register_StateBase_class();

    register_State_class();

    register_StateOverride_class();

    register_StatisticsForegroundBase_class();

    register_StatisticsForeground_class();

    register_StereoCameraDecoratorBase_class();

    register_StereoCameraDecorator_class();

    register_StringAttributeMapBase_class();

    register_StringAttributeMap_class();

    register_SwitchMaterialBase_class();

    register_SwitchMaterial_class();

    register_TextureBaseChunkBase_class();

    register_TextureBaseChunk_class();

    register_TextureBufferBase_class();

    register_TextureBuffer_class();

    register_TextureObjChunkBase_class();

    register_TextureObjChunk_class();

    register_TraversalDataBase_class();

    register_TraversalData_class();

    register_TreeBuilderBase_class();

    register_UniformBufferObjChunkBase_class();

    register_UniformBufferObjChunk_class();

    register_UniformBufferObjStd140ChunkBase_class();

    register_UniformBufferObjStd140Chunk_class();

    register_VariantMaterial_class();

    register_VariantMaterialBase_class();

    boost::python::def("traverse",&osgwrap::traverseWrapper1);

    boost::python::def("traverse",&osgwrap::traverseWrapper2);

    boost::python::def("traverse",&osgwrap::traverseWrapper3);

    boost::python::def("traverse",&osgwrap::traverseWrapper4);

    /** Helpers for OSG::DrawableStatsAttachment */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::DrawableStatsAttachment, OSG::DrawableStatsAttachment::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::DrawableStatsAttachment::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShaderVariablePnt2f */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShaderVariablePnt2f, OSG::ShaderVariablePnt2f::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShaderVariablePnt2f::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShaderProgram */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShaderProgram, OSG::ShaderProgram::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShaderProgram::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::PolygonChunk */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::PolygonChunk, OSG::PolygonChunk::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::PolygonChunk::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShaderVariableMUInt */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShaderVariableMUInt, OSG::ShaderVariableMUInt::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShaderVariableMUInt::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::StereoCameraDecorator */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::StereoCameraDecorator, OSG::StereoCameraDecorator::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::StereoCameraDecorator::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShaderVariableMMatrix */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShaderVariableMMatrix, OSG::ShaderVariableMMatrix::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShaderVariableMMatrix::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ColorMaskChunk */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ColorMaskChunk, OSG::ColorMaskChunk::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ColorMaskChunk::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShaderVariablePnt3f */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShaderVariablePnt3f, OSG::ShaderVariablePnt3f::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShaderVariablePnt3f::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShaderExecutableVarChunk */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShaderExecutableVarChunk, OSG::ShaderExecutableVarChunk::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShaderExecutableVarChunk::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::MaterialChunk */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::MaterialChunk, OSG::MaterialChunk::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::MaterialChunk::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::FileContextAttachment */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::FileContextAttachment, OSG::FileContextAttachment::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::FileContextAttachment::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::BoostPathAttachment */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::BoostPathAttachment, OSG::BoostPathAttachment::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::BoostPathAttachment::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::SimpleSHLVariableChunk */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::SimpleSHLVariableChunk, OSG::SimpleSHLVariableChunk::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::SimpleSHLVariableChunk::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShaderVariableVec4f */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShaderVariableVec4f, OSG::ShaderVariableVec4f::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShaderVariableVec4f::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::RootGroup */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::RootGroup, OSG::RootGroup::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::RootGroup::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::PerspectiveCamera */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::PerspectiveCamera, OSG::PerspectiveCamera::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::PerspectiveCamera::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShaderVariableMatrix */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShaderVariableMatrix, OSG::ShaderVariableMatrix::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShaderVariableMatrix::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShaderVariableMVec4f */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShaderVariableMVec4f, OSG::ShaderVariableMVec4f::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShaderVariableMVec4f::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ChunkListHelper */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ChunkListHelper, OSG::ChunkListHelper::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ChunkListHelper::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::CameraDecorator */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::CameraDecorator, OSG::CameraDecorator::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::CameraDecorator::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::MatrixCamera */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::MatrixCamera, OSG::MatrixCamera::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::MatrixCamera::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::RenderBuffer */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::RenderBuffer, OSG::RenderBuffer::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::RenderBuffer::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::FullStateChunk */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::FullStateChunk, OSG::FullStateChunk::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::FullStateChunk::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::TextureObjChunk */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::TextureObjChunk, OSG::TextureObjChunk::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::TextureObjChunk::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::State */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::State, OSG::State::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::State::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::GeoReferenceAttachment */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::GeoReferenceAttachment, OSG::GeoReferenceAttachment::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::GeoReferenceAttachment::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShaderValueVariable */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShaderValueVariable, OSG::ShaderValueVariable::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShaderValueVariable::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::Material */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::Material, OSG::Material::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::Material::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::FBOViewport */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::FBOViewport, OSG::FBOViewport::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::FBOViewport::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::MultiCore */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::MultiCore, OSG::MultiCore::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::MultiCore::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::UniformBufferObjChunk */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::UniformBufferObjChunk, OSG::UniformBufferObjChunk::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::UniformBufferObjChunk::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShaderVariableMVec3f */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShaderVariableMVec3f, OSG::ShaderVariableMVec3f::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShaderVariableMVec3f::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::Viewport */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::Viewport, OSG::Viewport::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::Viewport::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::FrameBufferAttachment */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::FrameBufferAttachment, OSG::FrameBufferAttachment::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::FrameBufferAttachment::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ChunkOverrideGroup */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ChunkOverrideGroup, OSG::ChunkOverrideGroup::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ChunkOverrideGroup::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::Light */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::Light, OSG::Light::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::Light::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::LightEnv */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::LightEnv, OSG::LightEnv::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::LightEnv::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::Viewarea */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::Viewarea, OSG::Viewarea::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::Viewarea::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShaderProgramChunk */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShaderProgramChunk, OSG::ShaderProgramChunk::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShaderProgramChunk::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::Image */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::Image, OSG::Image::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::Image::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::StatsAttachment */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::StatsAttachment, OSG::StatsAttachment::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::StatsAttachment::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::LightChunk */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::LightChunk, OSG::LightChunk::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::LightChunk::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShaderVariableMVec2f */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShaderVariableMVec2f, OSG::ShaderVariableMVec2f::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShaderVariableMVec2f::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::CompositeMaterial */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::CompositeMaterial, OSG::CompositeMaterial::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::CompositeMaterial::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::IntersectProxyAttachment */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::IntersectProxyAttachment, OSG::IntersectProxyAttachment::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::IntersectProxyAttachment::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::Group */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::Group, OSG::Group::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::Group::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShaderProcVariable */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShaderProcVariable, OSG::ShaderProcVariable::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShaderProcVariable::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShaderVariableVec3f */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShaderVariableVec3f, OSG::ShaderVariableVec3f::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShaderVariableVec3f::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::SwitchMaterial */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::SwitchMaterial, OSG::SwitchMaterial::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::SwitchMaterial::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::StateChunk */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::StateChunk, OSG::StateChunk::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::StateChunk::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShaderVariable */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShaderVariable, OSG::ShaderVariable::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShaderVariable::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::Foreground */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::Foreground, OSG::Foreground::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::Foreground::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShaderVariableMReal */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShaderVariableMReal, OSG::ShaderVariableMReal::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShaderVariableMReal::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::SimpleSHLChunk */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::SimpleSHLChunk, OSG::SimpleSHLChunk::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::SimpleSHLChunk::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::UniformBufferObjStd140Chunk */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::UniformBufferObjStd140Chunk, OSG::UniformBufferObjStd140Chunk::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::UniformBufferObjStd140Chunk::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::SimpleMaterial */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::SimpleMaterial, OSG::SimpleMaterial::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::SimpleMaterial::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::MaterialDrawable */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::MaterialDrawable, OSG::MaterialDrawable::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::MaterialDrawable::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShaderVariableOSG */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShaderVariableOSG, OSG::ShaderVariableOSG::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShaderVariableOSG::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::SolidBackground */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::SolidBackground, OSG::SolidBackground::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::SolidBackground::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::LayeredTextureBuffer */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::LayeredTextureBuffer, OSG::LayeredTextureBuffer::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::LayeredTextureBuffer::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShaderProgramVariableChunk */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShaderProgramVariableChunk, OSG::ShaderProgramVariableChunk::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShaderProgramVariableChunk::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShaderVariableMInt */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShaderVariableMInt, OSG::ShaderVariableMInt::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShaderVariableMInt::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::MultiPassMaterial */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::MultiPassMaterial, OSG::MultiPassMaterial::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::MultiPassMaterial::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::VariantMaterial */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::VariantMaterial, OSG::VariantMaterial::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::VariantMaterial::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::DepthChunk */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::DepthChunk, OSG::DepthChunk::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::DepthChunk::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::MaterialGroup */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::MaterialGroup, OSG::MaterialGroup::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::MaterialGroup::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::BlendChunk */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::BlendChunk, OSG::BlendChunk::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::BlendChunk::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::TextureBuffer */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::TextureBuffer, OSG::TextureBuffer::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::TextureBuffer::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::PrimeMaterial */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::PrimeMaterial, OSG::PrimeMaterial::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::PrimeMaterial::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::Camera */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::Camera, OSG::Camera::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::Camera::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::RenderOptions */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::RenderOptions, OSG::RenderOptions::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::RenderOptions::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::FrameBufferObject */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::FrameBufferObject, OSG::FrameBufferObject::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::FrameBufferObject::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShaderVariableUInt */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShaderVariableUInt, OSG::ShaderVariableUInt::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShaderVariableUInt::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::Window */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::Window, OSG::Window::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::Window::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShaderVariableReal */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShaderVariableReal, OSG::ShaderVariableReal::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShaderVariableReal::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShaderVariableInt */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShaderVariableInt, OSG::ShaderVariableInt::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShaderVariableInt::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShaderVariableBool */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShaderVariableBool, OSG::ShaderVariableBool::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShaderVariableBool::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::GeoVectorProperty */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::GeoVectorProperty, OSG::GeoVectorProperty::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::GeoVectorProperty::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShaderExecutableChunk */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShaderExecutableChunk, OSG::ShaderExecutableChunk::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShaderExecutableChunk::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::Background */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::Background, OSG::Background::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::Background::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShaderVariableUniformBlock */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShaderVariableUniformBlock, OSG::ShaderVariableUniformBlock::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShaderVariableUniformBlock::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShaderVariableString */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShaderVariableString, OSG::ShaderVariableString::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShaderVariableString::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ContainerCollection */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ContainerCollection, OSG::ContainerCollection::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ContainerCollection::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::LightEngine */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::LightEngine, OSG::LightEngine::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::LightEngine::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::StringAttributeMap */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::StringAttributeMap, OSG::StringAttributeMap::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::StringAttributeMap::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ChunkBlock */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ChunkBlock, OSG::ChunkBlock::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ChunkBlock::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::Drawable */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::Drawable, OSG::Drawable::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::Drawable::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::TraversalData */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::TraversalData, OSG::TraversalData::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::TraversalData::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShaderVariableVec2f */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShaderVariableVec2f, OSG::ShaderVariableVec2f::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShaderVariableVec2f::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShaderProgramVariables */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShaderProgramVariables, OSG::ShaderProgramVariables::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShaderProgramVariables::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::StatisticsForeground */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::StatisticsForeground, OSG::StatisticsForeground::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::StatisticsForeground::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::TextureBaseChunk */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::TextureBaseChunk, OSG::TextureBaseChunk::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::TextureBaseChunk::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ShaderVariableFunctor */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ShaderVariableFunctor, OSG::ShaderVariableFunctor::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ShaderVariableFunctor::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::GeoProperty */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::GeoProperty, OSG::GeoProperty::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::GeoProperty::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::ChunkMaterial */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::ChunkMaterial, OSG::ChunkMaterial::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::ChunkMaterial::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    register_free_functions();
}

