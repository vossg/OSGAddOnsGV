/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2013 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 * contact: dirk@opensg.org, gerrit.voss@vossg.org, carsten_neumann@gmx.net  *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGTRIPSAUDIOSYSTEMFIELDS_H_
#define _OSGTRIPSAUDIOSYSTEMFIELDS_H_
#ifdef __sgi
#pragma once
#endif

#include "OSGConfig.h"
#include "OSGTRIPSDef.h"

#include "OSGFieldContainerFields.h"
#include "OSGPointerSField.h"
#include "OSGPointerMField.h"


OSG_BEGIN_NAMESPACE


class TRIPSAudioSystem;

OSG_GEN_CONTAINERPTR(TRIPSAudioSystem);
/*! \ingroup GrpTRIPSFieldTraits
    \ingroup GrpLibOSGTRIPS
 */
template <>
struct FieldTraits<TRIPSAudioSystem *, nsOSG> :
    public FieldTraitsFCPtrBase<TRIPSAudioSystem *, nsOSG>
{
  private:

    static PointerType             _type;

  public:

    typedef FieldTraits<TRIPSAudioSystem *, nsOSG>  Self;

    enum                        { Convertible = NotConvertible };

    static OSG_TRIPS_DLLMAPPING DataType &getType(void);

    template<typename RefCountPolicy> inline
    static const Char8    *getSName     (void);

    template<typename RefCountPolicy> inline
    static const Char8    *getMName     (void);

};

template<> inline
const Char8 *FieldTraits<TRIPSAudioSystem *, nsOSG>::getSName<RecordedRefCountPolicy>(void)
{
    return "SFRecTRIPSAudioSystemPtr"; 
}

template<> inline
const Char8 *FieldTraits<TRIPSAudioSystem *, nsOSG>::getSName<UnrecordedRefCountPolicy>(void)
{
    return "SFUnrecTRIPSAudioSystemPtr"; 
}

template<> inline
const Char8 *FieldTraits<TRIPSAudioSystem *, nsOSG>::getSName<WeakRefCountPolicy>(void)
{
    return "SFWeakTRIPSAudioSystemPtr"; 
}

template<> inline
const Char8 *FieldTraits<TRIPSAudioSystem *, nsOSG>::getSName<NoRefCountPolicy>(void)
{
    return "SFUnrefdTRIPSAudioSystemPtr"; 
}

template<> inline
const Char8 *FieldTraits<TRIPSAudioSystem *, nsOSG>::getMName<RecordedRefCountPolicy>(void)
{
    return "MFRecTRIPSAudioSystemPtr"; 
}

template<> inline
const Char8 *FieldTraits<TRIPSAudioSystem *, nsOSG>::getMName<UnrecordedRefCountPolicy>(void)
{
    return "MFUnrecTRIPSAudioSystemPtr"; 
}

template<> inline
const Char8 *FieldTraits<TRIPSAudioSystem *, nsOSG>::getMName<WeakRefCountPolicy>(void)
{
    return "MFWeakTRIPSAudioSystemPtr"; 
}

template<> inline
const Char8 *FieldTraits<TRIPSAudioSystem *, nsOSG>::getMName<NoRefCountPolicy>(void)
{
    return "MFUnrefdTRIPSAudioSystemPtr"; 
}


#ifndef DOXYGEN_SHOULD_SKIP_THIS
/*! \ingroup GrpTRIPSFieldSFields */
typedef PointerSField<TRIPSAudioSystem *,
                      RecordedRefCountPolicy, nsOSG  > SFRecTRIPSAudioSystemPtr;
/*! \ingroup GrpTRIPSFieldSFields */
typedef PointerSField<TRIPSAudioSystem *,
                      UnrecordedRefCountPolicy, nsOSG> SFUnrecTRIPSAudioSystemPtr;
/*! \ingroup GrpTRIPSFieldSFields */
typedef PointerSField<TRIPSAudioSystem *,
                      WeakRefCountPolicy, nsOSG      > SFWeakTRIPSAudioSystemPtr;
/*! \ingroup GrpTRIPSFieldSFields */
typedef PointerSField<TRIPSAudioSystem *,
                      NoRefCountPolicy, nsOSG        > SFUncountedTRIPSAudioSystemPtr;


/*! \ingroup GrpTRIPSFieldMFields */
typedef PointerMField<TRIPSAudioSystem *,
                      RecordedRefCountPolicy, nsOSG  > MFRecTRIPSAudioSystemPtr;
/*! \ingroup GrpTRIPSFieldMFields */
typedef PointerMField<TRIPSAudioSystem *,
                      UnrecordedRefCountPolicy, nsOSG> MFUnrecTRIPSAudioSystemPtr;
/*! \ingroup GrpTRIPSFieldMFields */
typedef PointerMField<TRIPSAudioSystem *,
                      WeakRefCountPolicy, nsOSG      > MFWeakTRIPSAudioSystemPtr;
/*! \ingroup GrpTRIPSFieldMFields */
typedef PointerMField<TRIPSAudioSystem *,
                      NoRefCountPolicy, nsOSG        > MFUncountedTRIPSAudioSystemPtr;




#else // these are the doxygen hacks

/*! \ingroup GrpTRIPSFieldSFields \ingroup GrpLibOSGTRIPS */
struct SFRecTRIPSAudioSystemPtr : 
    public PointerSField<TRIPSAudioSystem *,
                         RecordedRefCountPolicy> {};
/*! \ingroup GrpTRIPSFieldSFields \ingroup GrpLibOSGTRIPS */
struct SFUnrecTRIPSAudioSystemPtr : 
    public PointerSField<TRIPSAudioSystem *,
                         UnrecordedRefCountPolicy> {};
/*! \ingroup GrpTRIPSFieldSFields \ingroup GrpLibOSGTRIPS */
struct SFWeakTRIPSAudioSystemPtr :
    public PointerSField<TRIPSAudioSystem *,
                         WeakRefCountPolicy> {};
/*! \ingroup GrpTRIPSFieldSFields \ingroup GrpLibOSGTRIPS */
struct SFUncountedTRIPSAudioSystemPtr :
    public PointerSField<TRIPSAudioSystem *,
                         NoRefCountPolicy> {};


/*! \ingroup GrpTRIPSFieldMFields \ingroup GrpLibOSGTRIPS */
struct MFRecTRIPSAudioSystemPtr :
    public PointerMField<TRIPSAudioSystem *,
                         RecordedRefCountPolicy  > {};
/*! \ingroup GrpTRIPSFieldMFields \ingroup GrpLibOSGTRIPS */
struct MFUnrecTRIPSAudioSystemPtr :
    public PointerMField<TRIPSAudioSystem *,
                         UnrecordedRefCountPolicy> {};
/*! \ingroup GrpTRIPSFieldMFields \ingroup GrpLibOSGTRIPS */
struct MFWeakTRIPSAudioSystemPtr :
    public PointerMField<TRIPSAudioSystem *,
                         WeakRefCountPolicy      > {};
/*! \ingroup GrpTRIPSFieldMFields \ingroup GrpLibOSGTRIPS */
struct MFUncountedTRIPSAudioSystemPtr :
    public PointerMField<TRIPSAudioSystem *,
                         NoRefCountPolicy        > {};



#endif // these are the doxygen hacks

OSG_END_NAMESPACE

#endif /* _OSGTRIPSAUDIOSYSTEMFIELDS_H_ */
