/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2013 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 * contact: dirk@opensg.org, gerrit.voss@vossg.org, carsten_neumann@gmx.net  *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class VLCVideoTextureObjChunk
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGVLCVIDEOTEXTUREOBJCHUNKBASE_H_
#define _OSGVLCVIDEOTEXTUREOBJCHUNKBASE_H_
#ifdef __sgi
#pragma once
#endif


#include "OSGAddOnsConfig.h"
#include "OSGVLCVideoTextureDef.h"

//#include "OSGBaseTypes.h"

#include "OSGTextureObjChunk.h" // Parent

#include "OSGSysFields.h"               // Status type
#include "OSGBaseFields.h"              // Url type

#include "OSGVLCVideoTextureObjChunkFields.h"

#include "OSGDynamicTextureObjParent.h"

OSG_BEGIN_NAMESPACE


class VLCVideoTextureObjChunk;

//! \brief VLCVideoTextureObjChunk Base Class.

class OSG_VLCVIDEOTEXTURE_DLLMAPPING VLCVideoTextureObjChunkBase : public DynamicTextureObjParent
{
  public:

    typedef DynamicTextureObjParent Inherited;
    typedef TextureObjChunk ParentContainer;

    typedef Inherited::TypeObject TypeObject;
    typedef TypeObject::InitPhase InitPhase;

    OSG_GEN_INTERNALPTR(VLCVideoTextureObjChunk);

    /*==========================  PUBLIC  =================================*/

  public:

    enum
    {
        StatusFieldId = Inherited::NextFieldId,
        TimestampFieldId = StatusFieldId + 1,
        UpdatefreqFieldId = TimestampFieldId + 1,
        UrlFieldId = UpdatefreqFieldId + 1,
        WidthFieldId = UrlFieldId + 1,
        HeightFieldId = WidthFieldId + 1,
        IsMasterFieldId = HeightFieldId + 1,
        NextFieldId = IsMasterFieldId + 1
    };

    static const OSG::BitVector StatusFieldMask =
        (TypeTraits<BitVector>::One << StatusFieldId);
    static const OSG::BitVector TimestampFieldMask =
        (TypeTraits<BitVector>::One << TimestampFieldId);
    static const OSG::BitVector UpdatefreqFieldMask =
        (TypeTraits<BitVector>::One << UpdatefreqFieldId);
    static const OSG::BitVector UrlFieldMask =
        (TypeTraits<BitVector>::One << UrlFieldId);
    static const OSG::BitVector WidthFieldMask =
        (TypeTraits<BitVector>::One << WidthFieldId);
    static const OSG::BitVector HeightFieldMask =
        (TypeTraits<BitVector>::One << HeightFieldId);
    static const OSG::BitVector IsMasterFieldMask =
        (TypeTraits<BitVector>::One << IsMasterFieldId);
    static const OSG::BitVector NextFieldMask =
        (TypeTraits<BitVector>::One << NextFieldId);
        
    typedef SFInt32           SFStatusType;
    typedef SFInt64           SFTimestampType;
    typedef SFInt64           SFUpdatefreqType;
    typedef SFString          SFUrlType;
    typedef SFInt32           SFWidthType;
    typedef SFInt32           SFHeightType;
    typedef SFBool            SFIsMasterType;

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static FieldContainerType &getClassType   (void);
    static UInt32              getClassTypeId (void);
    static UInt16              getClassGroupId(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType         (void);
    virtual const FieldContainerType &getType         (void) const;

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */


                  SFInt32             *editSFStatus         (void);
            const SFInt32             *getSFStatus          (void) const;

                  SFInt64             *editSFTimestamp      (void);
            const SFInt64             *getSFTimestamp       (void) const;

                  SFInt64             *editSFUpdatefreq     (void);
            const SFInt64             *getSFUpdatefreq      (void) const;

                  SFString            *editSFUrl            (void);
            const SFString            *getSFUrl             (void) const;

                  SFInt32             *editSFWidth          (void);
            const SFInt32             *getSFWidth           (void) const;

                  SFInt32             *editSFHeight         (void);
            const SFInt32             *getSFHeight          (void) const;

                  SFBool              *editSFIsMaster       (void);
            const SFBool              *getSFIsMaster        (void) const;


                  Int32               &editStatus         (void);
                  Int32                getStatus          (void) const;

                  Int64               &editTimestamp      (void);
                  Int64                getTimestamp       (void) const;

                  Int64               &editUpdatefreq     (void);
                  Int64                getUpdatefreq      (void) const;

                  std::string         &editUrl            (void);
            const std::string         &getUrl             (void) const;

                  Int32               &editWidth          (void);
                  Int32                getWidth           (void) const;

                  Int32               &editHeight         (void);
                  Int32                getHeight          (void) const;

                  bool                &editIsMaster       (void);
                  bool                 getIsMaster        (void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

            void setStatus         (const Int32 value);
            void setTimestamp      (const Int64 value);
            void setUpdatefreq     (const Int64 value);
            void setUrl            (const std::string &value);
            void setWidth          (const Int32 value);
            void setHeight         (const Int32 value);
            void setIsMaster       (const bool value);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr MField Set                                */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual SizeT  getBinSize (ConstFieldMaskArg  whichField);
    virtual void   copyToBin  (BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);
    virtual void   copyFromBin(BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Construction                               */
    /*! \{                                                                 */

    static  VLCVideoTextureObjChunkTransitPtr  create          (void);
    static  VLCVideoTextureObjChunk           *createEmpty     (void);

    static  VLCVideoTextureObjChunkTransitPtr  createLocal     (
                                               BitVector bFlags = FCLocal::All);

    static  VLCVideoTextureObjChunk            *createEmptyLocal(
                                              BitVector bFlags = FCLocal::All);

    static  VLCVideoTextureObjChunkTransitPtr  createDependent  (BitVector bFlags);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Copy                                   */
    /*! \{                                                                 */

    virtual FieldContainerTransitPtr shallowCopy     (void) const;
    virtual FieldContainerTransitPtr shallowCopyLocal(
                                       BitVector bFlags = FCLocal::All) const;
    virtual FieldContainerTransitPtr shallowCopyDependent(
                                                      BitVector bFlags) const;

    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/

  protected:

    static TypeObject _type;

    static       void   classDescInserter(TypeObject &oType);
    static const Char8 *getClassname     (void             );

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFInt32           _sfStatus;
    SFInt64           _sfTimestamp;
    SFInt64           _sfUpdatefreq;
    SFString          _sfUrl;
    SFInt32           _sfWidth;
    SFInt32           _sfHeight;
    SFBool            _sfIsMaster;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    VLCVideoTextureObjChunkBase(void);
    VLCVideoTextureObjChunkBase(const VLCVideoTextureObjChunkBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~VLCVideoTextureObjChunkBase(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     onCreate                                */
    /*! \{                                                                 */


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Generic Field Access                      */
    /*! \{                                                                 */

     GetFieldHandlePtr  getHandleStatus          (void) const;
     EditFieldHandlePtr editHandleStatus         (void);
     GetFieldHandlePtr  getHandleTimestamp       (void) const;
     EditFieldHandlePtr editHandleTimestamp      (void);
     GetFieldHandlePtr  getHandleUpdatefreq      (void) const;
     EditFieldHandlePtr editHandleUpdatefreq     (void);
     GetFieldHandlePtr  getHandleUrl             (void) const;
     EditFieldHandlePtr editHandleUrl            (void);
     GetFieldHandlePtr  getHandleWidth           (void) const;
     EditFieldHandlePtr editHandleWidth          (void);
     GetFieldHandlePtr  getHandleHeight          (void) const;
     EditFieldHandlePtr editHandleHeight         (void);
     GetFieldHandlePtr  getHandleIsMaster        (void) const;
     EditFieldHandlePtr editHandleIsMaster       (void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

#ifdef OSG_MT_CPTR_ASPECT
    virtual void execSyncV(      FieldContainer    &oFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);

            void execSync (      VLCVideoTextureObjChunkBase *pFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     Aspect Create                            */
    /*! \{                                                                 */

#ifdef OSG_MT_CPTR_ASPECT
    virtual FieldContainer *createAspectCopy(
                                    const FieldContainer *pRefAspect) const;
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */
    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    virtual void resolveLinks(void);

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/

  private:
    /*---------------------------------------------------------------------*/

    // prohibit default functions (move to 'public' if you need one)
    void operator =(const VLCVideoTextureObjChunkBase &source);
};

typedef VLCVideoTextureObjChunkBase *VLCVideoTextureObjChunkBaseP;

OSG_END_NAMESPACE

#endif /* _OSGVLCVIDEOTEXTUREOBJCHUNKBASE_H_ */
