
IF(OSG_OGL_COREONLY AND NOT OSG_CHECK_COREONLY)
  RETURN()
ENDIF()

#IF(NOT OSG_WITH_CUDA OR NOT OSG_ENABLE_CUDA)
#  RETURN()
#ENDIF()

IF(NOT ${OSG_CMAKE_PASS} STREQUAL "OSGCOLLECT")
  IF(NOT TARGET OSGContribComputeBase)
    RETURN()
  ENDIF()
ENDIF()

SET(_OSG_INTERNAL_CUDA_LIB osgcompute-cuda)

IF(${OSG_CMAKE_PASS} STREQUAL "OSGSETUP")
  IF(OSG_WITH_CUDA)
    PROJECT(OSGComputeCudaLib)

    SET(_ComputeCuda_Src SimpleCuda/OSGSimpleCompute.cu
                         BufferInterpolator/OSGBufferInterpolator.cu)
		 
    INCLUDE_DIRECTORIES("${CUDA_TOOLKIT_INCLUDE}")
    INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}")
    INCLUDE_DIRECTORIES("${CMAKE_SOURCE_DIR}/Source/Contrib/ComputeBase/Cuda")

    ADD_DEFINITIONS(-DGL_GLEXT_PROTOTYPES=1)
  
    CUDA_ADD_LIBRARY(${_OSG_INTERNAL_CUDA_LIB} STATIC ${_ComputeCuda_Src})

    ADD_DEPENDENCIES(OSGAllCudaLibs ${_OSG_INTERNAL_CUDA_LIB})
  
    TARGET_LINK_LIBRARIES(${_OSG_INTERNAL_CUDA_LIB} 
                          ${CUDA_CUDART_LIBRARY})
  ENDIF(OSG_WITH_CUDA)
ENDIF(${OSG_CMAKE_PASS} STREQUAL "OSGSETUP")


OSG_ADD_PROJECT("OSGContribCompute")
OSG_SELECT_PROJECT()

##############################################################################
# dependencies
##############################################################################

# dependencies - OpenSG
SET(${PROJECT_NAME}_DEP_OSG_LIB OSGWindow OSGDrawable OSGDynamics
                                OSGGroup OSGUtil OSGContribComputeBase)

SET(${PROJECT_NAME}_DEP_TEST_OSG_LIB OSGWindowGLUT)

# dependencies - External

IF(OSG_WITH_CUDA)
  SET(${PROJECT_NAME}_DEP_LIB _OSG_INTERNAL_CUDA_LIB)
  SET(${PROJECT_NAME}_DEP_SYS_INCDIR  CUDA_TOOLKIT_INCLUDE)
ENDIF()

# SET(${PROJECT_NAME}_DEP_LIBDIR)

# SET(${PROJECT_NAME}_DEP_DEFS GL_GLEXT_PROTOTYPES=1)

# SET(${PROJECT_NAME}_DEP_TEST_LIB )
# SET(${PROJECT_NAME}_DEP_TEST_LIBDIR)
# SET(${PROJECT_NAME}_DEP_TEST_INCDIR OSG_GLUT_INC_DIR)

# dependencies - Additional
# SET(${PROJECT_NAME}_DEP_ADD_INCDIR)

SET(${PROJECT_NAME}_CXXFLAGS ${OSG_ADD_CXX_FLAGS})

IF(WIN32)
  OSG_ADD_GLEWPACKAGE(FALSE)
ENDIF(WIN32)

SET(${PROJECT_NAME}_NO_DOC TRUE)

OSG_STORE_PROJECT_DEPENDENCIES()

##############################################################################
# collect sources
##############################################################################

SET(${PROJECT_NAME}_BASE_DIR ${CMAKE_CURRENT_SOURCE_DIR})

IF(${CMAKE_PROJECT_NAME} STREQUAL "OpenSG")
  OSG_ADD_DIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/../AddOns/Dummy")
ELSE()
  OSG_ADD_DIRECTORY("${CMAKE_BINARY_DIR}/Source/Base/Base")
ENDIF()

OSG_ADD_DIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}")
OSG_ADD_DIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/SimpleCuda")
OSG_ADD_DIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/BufferInterpolator")

##############################################################################
# setup python bindings
##############################################################################

SET(${PROJECT_NAME}_NO_PYTHON TRUE)

##############################################################################
# setup build
##############################################################################

OSG_SETUP_PROJECT("OSG_COMPILECONTRIBCOMPUTELIB")
